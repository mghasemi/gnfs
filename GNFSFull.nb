(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 7.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    545587,       9958]
NotebookOptionsPosition[    544921,       9932]
NotebookOutlinePosition[    545346,       9950]
CellTagsIndexPosition[    545303,       9947]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{
  "Dir", "=", "\"\</home/mehdi/Documents/Mathematica/GNFS/04- Parallel\>\""}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetDirectory", "[", "Dir", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PlotNo1", "=", 
   GraphicsBox[{{}, {}, 
     {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
       "]]}},
    AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
    Axes->True,
    AxesOrigin->{0, 0},
    PlotRange->{{0, 5}, {0., 1.}},
    PlotRangeClipping->True,
    PlotRangePadding->{
      Scaled[0.02], 
      Scaled[0.02]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PlotNo2", "=", 
   Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
gY9ctP3aFe2Z6PIf8eHUynJxcyprRy36t6pXlvS7KO+alDTuoY3UfjxfMlr7
XygcK8X5VWbLf4RslM/zeH/MqvZiyFufEiq7MZUSpbiBPO3U1rgmH8tI7bma
1vNTch9XrdrqjPX+K1J7np+Z5lrzlKt2uNOTvd8OSJzmr+LaTJhzRuKJtbSL
jZ+tZc9Nt6RmWyva2WiNY550ftRf4jMbDRlV94mtdna7Dq/jXaXnUdd6j6fd
W2OrHXVgpFONgRLHOMjr0OZG9dpI3BBUueEbfWntv6kJRyyDpTiTGjUt6PAb
+ftEjIP2jDZWTE7i8aecdo755aC1+/8jnohxijphypLzM6X76IHZwO11O372
qet48MuIUKkej7oexzL9bbQ9Su7/fLa89HuXpAemTylmr12bOXd7jfAc4nYz
L76ysi2tDaiWdLHtFKn9yANrdHzxxsxGKo98r/TRQ8NP+0p/F3ld9KmDsZaV
pfbvbd/EbuWOHz7tDxUzusZI7Slbv21Yt3am2rYXimtaO5lSPH/w49KsflEm
svwBeYu1/8bWCeck/rKGpqF/uom27ipdf6dwiSt9f6c0D6m0nuS/1cPnLZXW
ZSnlh0rfqSnlY0p5oNL3Vv/t+yCl71aUvqdQWuevtP5cab200jpevr5Uad2d
0npIpbxFKS4p5TNK8Uopf1OKn0r3qVJerZQHKsVbpftLKW4r5WlK953S/aV0
Pyrd10p5vlK+p5RvK40LlPJDpfxcaRyhlLcrjWuUxgv/6/NIaTylFM+V8mql
fPh/fa4pPR+VxnFKzxel54jSc0cpb///9ZxVGiciLvF8WynfU3oOKuWBSuMO
pfxZKR9QGs8qjQuU8k+l57VSXqo0PlLK85XyFqVxt9L4RSkfVhoXK43X/tdx
h9K4SSkPVxqPK40T/9dxjdJ4TSn/V5oHUBqf/q/jJqVxotK4Q2n+QWlc/L+O
y5TGp0rjHaV5D6XxuNI4RWk8ojS/oTSumbGibZJK9V02j431NpwnqNKbqlTm
Mn7J3mCjUsnfU2MemPMmu2sWUqnsZfx3/ucgX3f6674up8Dl60vt3nt8zJso
X1963afg67yJ8veqmF/lfO7sm2l5E+X7nMAbj//wxjm8cY7fC+4l9sHA7wWP
ckmY6PXAQH+X5+34uzxPwN/lHNcL/E43/xH3N6yl6wWeOn1M75SgaLpe4Od9
TxecN3k4tR/cLN/v/SXQfvq7wddqjnb0oesFPrxJtdCu09V0vcBHtDrdMb1a
YYpj4EvKN5sd9CZTg+sIfshygt3gJpc1uI60H8WWrMvzHsdrcB3Be3kPzd/m
33ka+OTjF/jkHD7BbS58LXd3zCJa7wFufbxN2vf2y8gzeFLyiWnNOk8nz+Bn
xw9dtuqlnjyDRzs6lz8T34o8g8eK/SXgGfzxrXz1X9QrTp7Bl7d5a3/I9bUG
nsFHNPCqdCQiSQPPtB9F0bTl33zXk2fwp49vT7o8cwJ5Bn+/9/yHe5o+5Jl+
V9lFJzqM70Ke+XgQnjmHZ/Bqbz2XH55eXwPP4C5fltyqUqQveQY/9m/G1vPh
w8gzeCV9yLuN+TuQZ/DnSVMXjL1XlzyDlxf7S8Az+AaX1TOin73VwDP45/aT
mpZPTybP4B8t59SZs3UteQY/six09I2j4eQZfO8Q/4ptenQmz+DdnXyKPGjc
njyDGwxz6s+52IE88/E1PHMOz5zDM3ifX/tI1CXP4Fsirq0wrPcjz+B7kpzz
5r/3Jc/gVr1Vm1NPO5Nn8LFifwl4Jh48ZfFqr3vkGbxo0MBurV7tIs/gE+2/
Fni0bBp5Br8/d3KmJqIHeQb3SC87alHf1uQZ/EbUjLY7dweRZ/AOAz/2XXGv
HXnm8xXwzDk8cw7Psn0qhGfwSrs7NDpfuih5Bg+InPWjgb8jeQafP9KrhOnL
4uSZ9pFY9Ht/CXgG3/RyV+VzF8+RZ/Ba0+JdyvjHkmfiSffnLdONIM/g3T6m
VDgTGkiewR2aOWzyaK0jz+AWufHW53+0Js/gDUdY9JwX24Y88/kfeOYcnjmH
Z9k+FcIz5/BM+zb82kfihgaewV1XOaY8a/5OA8/gJ8T+EvBM+0uMi4pa4mUk
z7QfRdGDHQo8nUeewa0vf3Wffa03eQbf1evzlbNT/MkzeAfHIzkppv7kGXxP
hyZDZrZpQZ7B6y7pN9P/RUvyzOfT4JlzeOYcnmX7VAjPnMMz5/AMnv5rH4n5
5Bn8i9hfAp7BPw1aYp41Zh15pn0horbNarZ2EnkGDyyV9KRZVjB5pn0qHk0M
mePvQ57Bw2wyNvstaEyewa0Tza7eCmpKnsGLzTr+aGwVHXnm85PwzDk8cw7P
sn0qhGfO4ZlzeOYcnjmHZ/DCujZWxydNJs/g9YvtcJz4djB5Bk85EuY257wf
eQZ/1jN98wMbD/IM7tZ631rrZC15Bj9UuW6Nxfkak2fws0GHux940oQ88/le
eOYcnjmHZ9k+FcIz5/DMOTxzDs+cwzP489lPt107U9kbnsH7Og/+Hq1qSJ7B
96e8SnUOrUWewR8NHzjG4UsN8gxu/+VNdv37nuQZ/FQ/52pDumjIM/jUigvV
5Sx9yTOfP4dnzuGZc3iW7VMhPHMOz5zDM+fwzDk8/507Ej983T372LGi5Bl8
wNncC09KFCbP4IW22FuW2VaBPIMX+TekwtyWtckz+BG3l/svDqxHnsEr3rs5
9oOfF3nm7x3gmXN45hyeZftUCM+cwzPn8Mw5PHMOz3/njjIOz+BpbVPmr3x4
1RuewX/MmXtjmq8NeQaffmPVvmnLK5Nn4n1GNo8xq0Wewc0KDRvvZ16XPPP3
PvDMOTxzDs+yfSqEZ87hmXN45hyeOYfnv3NHGYdnzuH5z/0lfnjDM3jGgsZh
R+/Zkmfwjt/bNnOo70I+53acFWiieiab9/h+4O/zPFNZedRTxv1yv336j7L5
Fr4uEddl05UL+3SGd7K/e13Mq/QU8y2oPycks+Q+vUp23fl6OdQ/PvhWhEqV
K6u/nZhn0LD5kM+o3/LJ091V29A4vZqof+rmPQ7a5Y1pPiRC1J/97kqZ2Dx3
amdquexQg1o+XzFt2ttC+/QFZP1tyJHXp9Q6U22leSPz9y62hsYReM+7KmZc
2tHQGTSO2DU765U+xURrmnjT4vibYfS7NGJcX63pn/MPj0V7HN5cLnK3UBX6
XZNFe3KDKjZ3GmVHv8vl9ZsVKcb82tiXG/U2NfLRPA/eL1t53w0/tiSd7mu9
aP+Gql7p1ePPU38rLtpfMbN3g0dZ2+m+3iPaX+rNwdptb86lfnjxycfr+pQi
Mm/DdB/7GdQSx/UtufPDN6PeXDb/sNfuw7wUY2FtkzmBHbdVWEjj4o6T3ldQ
qQprU699re/WIIo8f01/t0+tM9OeCPsnvfqsweR5ZeC75jpDIa3XzVYRnWyl
eZ7KYlwfxOYfkkX7hyZGnsjLMSHPg0T7E5sNX1f6wXN6TpUQ7fcPcmqozn+G
nlNof6noPbvml1pLnjuI9k/dow3xbTaOPH8R7a/Z6LtDpdje5Hm1aP/rww1c
RqmleZ6QoB8x6qQSMs/VC/5INepLyDznHvheXWclcXhe8+v7p+LaHiX2v/H4
j/mHRo1zIlOMFtqzhsOrRq/Tk+dnWz7bqlQW2kMdPvTzcQkmz9OsPm9V64pp
J3St0NdhtjTPM1OM6w+z+YfOov2t97823niZJs3ziPavLOOYP/LpGfL8Q7Q/
5N34+Y+7rSHPaH/RviZnZr0ZSZ59Rfu3PuuYmzeiE3lOFe1/GdN7bdu57cjz
DNH+8NNhnb63l+Z5ruzO0xni5PMP6/rlLVTr5PMPoQ55D4xZVjLPfpdzK/1c
983jRqnI3OEpHlbaVcPqzPZz0ZDndI/cQ/oUS+3M7terDHGX5nn2Z/wooJpk
qR29tW+PytHSPE+uGNe3YvMPl0X7bfvP/7eF5jp5XiPan/3P3twf5RPI8wjR
/jI2J88WC5pKnpuI9l8u9Xp2RvNu5NlGtL9nSmDaxrRA8pwm2l86e0W5ls/a
kOcDov2JY5qVHhIuzfP42eT7mjdRPv9g++t9pnz+4cU4k7nqJBuZ54M1Te4Y
9TYyz7OeqZx1VhKH5y7LVINTjNbaptlryueElCXP1VuojPoQa21s6lV9+9HS
PE+oGNd/Z/MPTUT7/7kYMmCD3UnybC3af3tPYtSR7yvJc7po/85SWzZ5mQ0n
z2i/ccTN8xNntZLm00T7tzQ+s9HdpSl5DhHtb+k+an9ikDTPU0O0v5F1xPSt
zaR5noPh+bfoQ+TzD7Or5P+Ql2cn89z1oanGECdxeHb79T5W4vCs8je9Zsyy
lXm++iVfGZ1B4vC8bnu+vikettoWKakL51/JpvmHF2JcX7nHn/MPB0T7M9va
fjn4LoE8zxTtjzgSGTlz72zy3EW0f5NrG/tVl3uS5xqi/fP7jYopUVKa58nz
+93+7pcDhr4s04Q8XxHtLzgwO/WQY3PyvF60/2Py08bN20vzPG53CnZO8ZDP
P5jMLhinT3GQeb726+9L/M/xmsThOezfAlPUSaVlnv1/fW8kcXi2LV6glM5K
4vDcVWH+oYZovzG/f9SEc8vIc+6s3+2vmfPvK5s+48jzVdF+M9Oyb06va8fG
aw5a9wa+E48M9Jbm00T7a4zqNiv8vS959hPtb9G7xaDaGn/ybCfaP3335cYf
NwdI4+IGhc11VvL5h9/fZ5eTeW661my1PkTi8Gz/K68uK/Oc8eu7J4nD86Ff
+6hIHJ5nDyt01pgln+e5pjD/sF60n88/hIr2l+32YVjmpH7k2V+0v0qLAVeN
yxqTZzvRfgtnXZatSW1pPk20Py1xb9maRg15PijaH1Ik2atm0UbkeY5of8ei
5mETh0rzPHMuFuia8slR5vl3P5Q4zadNLvCvfoXE4bnpr+srcXh2q1sgO89H
4rTPw6/rLnF4NrlWOFydJJ/nUZp/mM3aT/PDov1mhfK09/9j/qGraH/797PS
z22rQZ7R/lf+wQtaFqtEntH+575mN19r65NntL/K6v3veq5tSJ7zifanFuuz
LnCLljwH5Basa+jjLPNc89f9KHF4tt9VcKK6sMThOd+vOCOf58n4p2CScbt8
nuf375DP8xyyL1hSFySf51Gaf2jK2g/Pbqz98Gwn2j/2xp7o3StU5BntP/N6
VPuY9XbkGe3PdE36tud5TfJ8TbQ/uVvM8uZ36pJntL97r+npRWd5kmdTN7Ni
umvy+Qf+nSM833haqENKuHz+4QjbrwyeNywptFbvIJ9/mPvr/pI8wHN4s0Kv
8o5J/L/NP+Rj7YfnDNZ+mrdk7Ydn7Ae1faGqTYvmKvKM9s/bXWXj+XJq8jxH
tD9Q46lf4OZGPkc5zI+/b3wpmzfg35PC56ANpuUXq6/KeI+Hi4rv17+RrXsZ
wcqD+1ct9qi54b6M91SoZyObr8B14e3EdQllvwvXxVxh/cxkVh7XZQzf50Hw
wuPZvjHies1mvxd8GPtduF7cDzj3A95boZ5/mR9cX76OGtdXifPvInF9C3y8
fs6g/ia7LgUVOJ//wfXCfJGvc2+HfPEL6Xp9FfM/Cyt1S13dIII8dxLtMRPf
icNnMfF3K/Uo4VQ/MYA8oD21jhUxM4mpSBztmZc55M3cAypa1+Qp2rNya78+
94IeUPwxLLxqW1GX43OhQMi7kXMb0nonzINFBkReHh27WwM/mIfh/nl8QD3g
jfs43+jZpY70fBHxwXHRSpu3hWsSRzz5tNKtp93+GnT/8vVXuI6co52y87zE
9eLrwXC9OMf1Ulo/JtvPUHjmHL9Lab0cXw+G+sFPdpr5dcLZrlQP+OoCdwdq
5vuSf77/BvxwDj+coz2c0ziUcfjhHPFHtp+tiD9/5/L9aWl8xPfNE35k+9MK
/5zDm1L7eXxA+2X79Ir2/53L99FF+2X75on2y/bdFe3nHO1XimN8nT/6A4+r
uO4tFXi0wvz8AIXr2JnVAw8/Pv257wF4bb5fmfBTldUDvoK1B393G4v/qL8d
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
6qajlZppVtD14n/3/wBGIbAD
     "], {{
       {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
D09reVjeWk7t2jNdHz1v5AP/B73KEBc=
           "]], Polygon3DBox[CompressedData["
1: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
fb8no2u2icn/+V58P+IBjkdLdMo718FJcFOXvPNdLnEX/oJ/0aOgH0MO5f7J
URfnna/ohRyFpo7WyBWTP+Jf1AzUDt3g2GiNQS9teWbtQQ1ILUiN1Sa6prmC
3l90rUPNRe2FBj8z+pnhljrB7+KOpF9rB8c+34Rc0D59K74JuaRd8LeCY/DV
Y4O5h5wA1zQKzhXUgNSC1JDtojkIrqoezE1wGr5dKZjrFiQ9WSv4W92e9P5J
wb5HDMEVDYNja07S08cFcyc1KrUqNWl7ze3Ws/+g97NO1ifvGpVaFY3aIbqu
QYvQQ3lO407RuWgH7xzfTvplJ9+s6JxcLe+cTq5unvTPO5lzGzme2pSalNxf
L9Vz67l20TmFXLUxc65pEN07eSnly/rR2urFpKfIafQaV2XOdeRsfLdJcC4n
Z3YSfjvpK/wG/4Ej++etmdHOg7Sme7RmRjujubtGa260Nxq7W7SGRkujmc+N
rhOpF+n5oNfWJS1DTl0r36qSd/+LfEhepCdQNeVz3iU1QJWUzzvCT1rzQYk1
BFrip6QP0An5aI6Ca04L5i44iNhsGsxNaDBy3THB2oweEr0kelT0R+kZ0Tui
ppkZXTP2SvloSnStTi+T/hx8tSrlq9uS/qOHTS97ifCi6BqC/E7/lP4YOY1c
GYNzHTma3HdYcO6mxqiZ+OC86J4yvWV60HdH52RyayE4V1NzDUh6cVZ0T3t4
0p/4PjUztTM99wejez70ftYLPx3ds6F3Q4/nmeiePL15etyLo3tmA5M+RW++
nvL3ssT/9MDHpHz+UHTPnN75YuHbonvy9Obpqc+P1q+Dkv4k9uh5459V8+6F
48NwPzGBb8NRcEcxmLvgALQGmxFwAxrlWsHfM2sXNMiVwj9m1iaDhEcK/4AP
Fc0xY4UPZOaegXCk8PfEdNGcdY3w/sxcBqeNFt6Xmev4xnzro4K1P5xALfdr
Zq64SPgq4Z/QKEVz3hjh3zJzIRw6Qfh/mbm1P5wt/B05p2gNNk74YGZtBmej
zUoHczkcjTYrFczdcNgk4ZLEbdQccPvRwbXIADheeC85tOiaYx6+HlyLUAPA
reWDawM4HW17KDPXU5PA/eWCaxV6UPSi6EG1jK4Z4NIKwbXEEn3D85LepG6k
hkErlA2ubchhZXV+x5xzGz1C+jNZcO+wUfS1N2TuL8EXcHnb4H7ss9H9ybOC
+5HsMdH/OTu4v8mexQfkipD6p9G/tS5zP7BOdH9qbeb+1t+iue6VzP2nutH9
pxcy98PWF8yVL2fuX9WO7l+tydxPoydG/2115l4ZPe+PhDsH93vZI/iQXBbc
vyXG6DeXS7FHf5J+PD0Lehf0LLaRS4Mxv0HvjhqJ335M9zMyb06Gm3mGg6lf
wLPR46TX2TW4P02Pfotwl+B+NJoDrdgiWIuQA+hvtwnODdQEG4VPD64VqKHo
PzcLrq2ood4QPiO4tkLT0O9uHqx1mkZz578y9/duTfm1fN77F6dHc+ebmfuD
p0Vz+z8z9y/xKbjlP5l9jZqIWuyPzLVSvxQf32Suffuk+P8qcy3aN8X315lr
VeJzsvAvmXsv56d4/DJzbd8rxffnmWs1NBK5973M2ql3ygdfZK5t6YHRz/kw
c28MTTJU+KPMWgXNQO27JbOW4B3Q68TneDc8M71RfIx3QY+zTIoH6pWVGlfX
u6oo25e3z6ExWufsi/A/Wu61zP1qevD05t7I3Js/JVqbvZq53zw6WN9Rz+wi
5oP1LZpye+olsRdVWTYh+Jr0wtEY/BYxgU5pk3OscE10CfqE36LeIp7REGiJ
BzL32/FrfJhngrvfyvysaE60wqbMWpQY+yPVY8Qee3o7yUfR+zE/pPzUPeXL
H1O+oSYg//+c8h01C3z4a7SepKYhP/6U8jUcDd/+kvifGgg+KVV0PqQmIH/G
ovPpmYk/9kT3VhokPcceLHuz+eC92f9G94oaJn33eeKnNolvPkv5vnXil+9T
Pu2W8uuXSQ+0S/zBni97aT9n3gv+KPpb8E3Y69sSvZ9ZSHqOPV721p/PvPe7
S/iCnGtk9OTW6G9TNunHfdF6mRoRvfFt0h+dEn/uTXzTOfHjF+l5z0p89lXS
H+0TH36d+LlD4stvEj91THz3nfCMnHsM8NmniV9aJb4jJ1OPN0t88El0L6Rl
4ityPv0Gaga4gD169vvLRO/do1HQLqcEaxc0GlrjyGDtBv+gjcoE9wrh78XC
FZN2Q4+h7ULqpaBpNgg3DtY69Fj3CPcK7veyR74D/wveD4Sj0LjUAHAXe97b
8dfg/UX2tHcL9wzen2BPe5dwj+D9NXqUaM3Dg3uXaM4lwpWDtSiaDu1XJVjr
oenQWicGaz32pPnbixrBe9VoLrRbzWAtBkeyd8ceINyJBkMLnhCszdB09L6q
Bms9NBxrTw3WdvxNB/uFfw3+Ww96ZPTS6gf3ztCk9NrqBWtVNC+9pbrBWph6
i9q3QXCvDg3KfmHZaG2KJkYbf5p5L5mak358MboWhRPY24Jz4QpiiFjCh9Bu
HwT3dtiv+DD4bwA2pV4de3HU9aVTvcA8MUqsEtPUZsQ0sX1JzvUGNUTl1B+m
tmBPF333Wea9XmKa2Cam0ZbU2MPzrr+pval5JgiXiq6FqInQl7sz10pb4PUS
1yxcnxoK/bcrc21Fft5W4n49PYgeKR98krmWICaIDfaM0XZcj3tlP2RrcI2G
3t2TuXajhkCPfpy5ttgbzMVw8s+p390iM6fCrfQt/r9/ka7H++XdUXP9mPc7
4l1tz1yrUZPR+92WuVajJh4uvDVzrfxz+i327J9KMU/sE+NoX3pY9LJ2Jn6i
p0DtuDlzr4G/0aB/Qx+HvVd6ZtSK2xJ/wW+cy98M7QzuydGbo0+/KrgGLpf4
idoYDcLzfxe8v1sxuvagBtmXenT06nrk/bcI5Dxy38S8tT17FvztDXvC7GVQ
v7ydelHsjfE3DNSH1Ins7f4frse3bw==
           "]], Polygon3DBox[CompressedData["
1:eJwt1nm8TnUeB/CH5143yyCMNcu179d6CRPKFsqaFjUUaRGXLBcpRGiVqBSN
imimmVLZKkvTPtNMzTRZQoRKy9RMyyBa5v19nfPH5/Wc7/v5/s5zznnO+f1O
/lVFQyeWzGQyT0iu/CYvkylrY2g2kxkmG9W1pE1OJjNXPUfmqj/Qs932zwZ3
Ma6Fer/sZBnp5qOV+v3c5Pvom2of+aUymZrGt7Q9W99W3z2spwZrwW5iW9hD
rCnrxZazd9mzrAk7jy1j77ANbK9sVp/wGx1YI3Vjfefqu4/P58+wlmwAW8n2
6NvKWrD+7GG2m21hzVg/toK9zzaxBqwbu4u9xf7A2rCh7HH2IdvB2rJhbA07
yHayHPaluqtMZ5ewEuwzdWeZwi5iJdnn6rNlKhvB9skO9S/OoStrqT5LXzu/
cSufx1ez6qw5m8U263uQtWPD2Vp2iL3MsuwLdReZxi5m9djZ+m5nr7N1rBT7
Xt1LzpPL1PWlq7471W/q+72+z/2fr6mryGDWjn3B3lRXk6pyQZw/e8t29biv
9HXU95EcUNeWS1l/9Xf6dqsbS6PYp7HfOMddJTKZ0T5ryFP8sN4PfdaJYzN2
gPpXeis5vqvYlTJZfcL+9tluLlfr6xu/y7aqz5A86afvINtg+5T9d9RXW31M
XmGVZBZvY+xn7FV1ZRmkry37hL2srigDWQH7lv1L3UBGsZ7sU/Zn9ZlxTVhr
dpi9oC4d15o1ZkfZS+qy0oc1ZUfYi+oy0ps1YStZdcdVVzbxn5xHvnRxDe5Q
v6HvSX3vyXNxj/IDruNi447LB6yZjNXXR08rYwfqWcX2shdYaX1t2Ty2jf2O
1dHXgS1gO9ljrDZrz+azHezRmEzYMXUnuVE5PDeZSwr0TYr/R15Rl5aSOcl9
FvfbBnVd6cwWq18zdr2xzdn57CG2i21m/3F876rrykh2Dqusr15Ocg/EvfCi
ulMcs+tU6Pw3+65X3FfGvuf7+nKT73oY+z+2V91Uxthfb/Y926NuEvtjvdgh
+ac6X65g3dX/1vcXdQ0ZzgrZV+yv6ppyEevE/sv+oa4nl8ecy75mb6tryQjW
Oe5n1tOxLmV/Y0+zH+XXbAS7j81XN3IuPdi97G32pzi23GQujDmxyHe17Otj
2aannPT1XTM95Vlv3y+M/4I9zyrZ31nsBvYku4NV0NeHLWKvso2snL5y7HK2
gs2MuUpf6Zh7WBEbHfd9nLO6rUxko9TH4hlRt5dJ7Mp4tuL6qwvT+2VMzC9y
PL2HYp4cq87zuz/GsyaL2fi4D+RndXeZzSbEPCQn0jk25tOr41mNXnUbmcB+
G3OQvK4uFXMd6xDHK7+oe8jNbGKsbc6tjM9z2Rw2yXbZWC9dg5HsQTaLfRP3
PuvJbrFZpP5STqZze8y749Qfx/+uLpAb2BXqM2O9NXY8W88WxzlIGTaALWIz
4p6M68D6sQVsWlw7OYOdz25j0+PaxTPM+rOFrFi9OzdZn2OdLvZdA+dV0e/W
tH09W+er2/Xsyk3WnFh7pvmuvr4K+qrYHqtvte/m6akSawO7kc3VuyTm8VhD
WF82X9/UdG7fla4JsTasNO5k3Of6LlTfqW92+vzm5yTzQ8wTM/OS9eg72x2k
ozytPhrPl+3WMt7Ykeof4p42dhC7i90cz4veBmxKjGP3sqqsIZvKnmFL4/6J
ZySbrDux/qzX8y3P1ddHfau+KXFe+pqy67LJe9MD8ezHb2eTdTXW+GvUB+Ud
dQUZwLrFvoxtYuy1bC27P9Z9VpeNZo+we9g2VuxaxsvZBFmnLnA8g/U9qm+/
vm36TktFNoTdw+bE+4bexuwatoYtj/vH2Bw2nC1hk+N49R1Mr9/17IJ4P2CN
9I1jj7NlrASrw0axVexu1sX+qjqumVIqjkOd0VdD32X6HlAuimdIqrNL2f1s
obqh3nNy0nfJmNvSNSCbk7xzxrvnOPWe3GRdO+432hvbMP4jqabvEr6c3Zbu
rztbEtcgngd1eanMxsSzavxcfT/F/84uZsuMXRDvEPJ3dXnpz7rGc+o89qtb
xHGwfnH9WEdjp7Pn2JpYA9iz6tOxrrA66lNyKH2m454cGL/LjqZzXcyJQ2Ie
Z0eyyTw52/jBrLVjHuQ3VrN9+l6K/1bfEPYYO8C2s1MxH7PB7G52S8wj8R+o
u8kMdl08G9GbTd47i9m1MT/YX2tji9gf2SPsiBxO5+eYEwelz8In6bMWz9yw
vOS9aYvtk473B1kU8z/rZH8z+EZjn4g5kRWyYvY8Wxv707udtYz1ztjdek7L
R+lcHPPfhfoK9X2t7yspYPVyk/fJN7LJu1q8sy3VU02a6Zmp3qRvRcyH+lqx
iewptiruP/ZpuqZMZsPY/wH0VI1Q
           "]], Polygon3DBox[{{1757, 943, 761, 760, 1136, 1564}}]}]}, {}, 
       {GrayLevel[0.82], EdgeForm[None], 
        GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxFmXe4VsURxs+ee779jJqoUTDWiIgmFoKaYkwsCCLWgAp27IAo2EuiqAhq
iCg2VBCQolKkiCDWYAG5XIqgpml8kqiAKEjHKNGY9+c7z5M/5s6e/fbs2Z2d
eeedvS0uuPzkPmVRFHvoT4P0lKoodk9FcYv0XOlV6ttBslTPn0qfLn2J5EO1
u0jP0JiOkv/o+QXpuyWFpJd+W6FmV+nn9Hys5Gs9T5M+RvKl2vfpt03S50uP
Ud9RkjV6fky6reQztYdLHylZqfZdGveJ9GnSPdV3uOQPat8v+bf6L5ReoL7V
ajeTXKl2O8kGtc+qvI9bpQ+uF8UP1X9ALoobpTvEemZKf1d6lWxxtn5roeef
ZI9l79+XTJCRWkiv0Zjr1X908rfP0LhljJH+QL9tF/Y5U8+7acz+obEJv/VK
tjP76SG9q+RjtR+RvkuyXO179c4gtW+WbpRuLfkVbc3bXu17pY+TXquxzSWj
1R4VNlzI2iW/1vg/MlaynWSk3qlJXyrdJD1PUpeco3F7SreRvl26s+S/muf5
5HPlTB+WvCjZVo+vSK+XPlzjPyxtG84af9kj2dacAzbkLKZWbmP/jzR++/Cl
OZXPaLB0P+lOkq/02zA9fyF9kfRlcdbY6hLpw8JWQ5Ptg60e0biN0udJP1x5
bedK99bvR4T/9JX+jWSz2oMq+9eZ0tMq+9490kMln6v/Aullkqz+y6T3rBXF
EK17tvZ7dbL98d3Lw1fv1pjh+v0g9Y0o7Z+c6c2V7YFd2POjag+L9VyVvOYR
cb7E263Z671UUkU80sbnr9BvO6rvWOmrJD9Q+7hs2/QK+0zXuN8m2+06/baz
+k6QPkl9N8XesQG22KVwP+MZt0+MoX1L9tm/qX0/pvYc7alRepRkvtoLsv2X
74IbQ7P96u/Z8/SNb92Q/Z0Ts8+tR5zd29hb0krtTVrrBM3ZXN/qle07HaQv
yo6VdtJvauxiyV56vizbp46R7p7te+2z7dcYtu6Zbe+js+OA97eQ9NHz0+BI
3TGyOOLkrOxzai19ovQNyf4Hns0J/3+xMo4Nke6fjHsPqv1AZfzrjs8mY9Bb
ar8Z8fmQ9PbMDy5ln/vxcfY7ZONJc+nFlWPm7MpYBF4yP3iwi2Rp4RgEZ8Df
nfVOH/xee1mv/nWx94fUv5XsOSR7/cTvN4XXDhZ/T+0NlWN8hPTesd+d1P+M
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
WPw/UBRQhQ==
           "],
           VertexColors->None], Polygon3DBox[CompressedData["
1:eJxNmHnUVlUVh++93Pe8lK5WIiqiEqjYpKmZpa5MAbOcUlFAZkXFUASHRM0K
ySmSJZoLKBVkBhUQHHIOEVAQRDBbWpaVzCB8CGJq4/Osff7oj/29v33Pueee
s4ff3ufrNGh492FVURT7lUVR83sBf/bm9wP0deA+yDDwycgYcD9kN/hl5PU6
RNyWd/qC705FsR398+g/BY9H9uQDTZ7tD36JOdPBHzB+F/hhxv6FfjTyCHgh
zyaBG4yvQ28DGM9vW57tYOxe1jiasXmtiuKvzaLo1ow9befZtxm7g7nPMfc9
9F+AuzI+mPF/on+T8dt4NqGMObeDVzL2OHhPxreiT0ZWoR+KPgXcpRk22IZ+
JO8vA38W/Ahzltex9kjw95B7wSt451PGz0ZfWcU7ncCP1rHWeehnob/E2Dxw
T+Qc9DfRF4Bn8vsGemfWmFXFnr+E/kQdZ+mRYu1VjM1PceYj0TfUYYvX+F1Y
hk03g19F9tBe6CvAQ5GD0XehrwdfXMfYqcivwBfVcbbvIveAFyMzwNOQF/U1
Mhs8E1kK/iLf/zrr3c9+5oLH1uFb31ni2lX4dqw2AG+oYi1jYJH+95vghcYB
eI02RN+HNfqDH2DN1ugPMj4nhU/0zSc8mwr+Cc++Cr6NuTs5/3h/i7DBKvB/
ebaT36XMXcbcv/BbMvYC8m4V67q+Ptf3d+X9X4W+INtjN/pD2d9bmNMe/Ub0
x9HH+Q1jDf1ZcC9kM3oH9Hl1fMNv7YX8DbzGcxbh8zfAg5hzXRkx8RvwrTx7
towYNVb1zz+YPyf7bzPP9i/incfQP0YmVuGDYeDzOeMPGFvGs0fBl9SxV5/d
B36L5/9h7rnob+uLKmx5lD4Br2XO1pw/Q8DnssYCCYI83IUtZ1Qx1xg1Vu9m
zq4iYuIV8ChzBLwa/CHzNyCb9BnPBjJ2u+cpg0OM2dN41g18NXKVuZ3C/r3R
B4CPQlrkJfT+KfJnEeu9WEXcXIj8FvwkMpGxNSnsqn3NLf3fnr0v0dfoy5GX
q7CHtnotRZ6aU+bW6cgp4GuRa+Qy3p/NPs9E747+SiP20hX5Pvo1+qEKG2mr
pYz3zHx5KnobZB37Pw+9N3gx4+eDv4Ocgv41ZGsR7/RNwRdyTS/0fu61EbiL
HIM+wjjjW89UsZ8zUuTq9ciPwBcg3cEJaQfekjlBPjkH/XBkYxF76AP+FvJv
9IHoF4Nf5Xv9Mh+cmeLs2vhD5vwaPLUO3+gjc/35OmLpIPTnwNOsGWXEhLGx
jPXaFREDxsLyRsSvcbwR/SS+cbzxV8R+uyInlBHPcks3ZC/5BL7f2ozzOXcu
+ruerRF7Pw05m7EH67C1Nh9dh73bgN/je+uYvw2ZWccZL5S7Uuy1T45P99c3
85+2XYHeP/P7WejHIp8U8ewi8B9S5JE26AXezPrzWX/fIuJjJe8PMFbMwRR8
bi3y2SDwkkbU27Wssb4Zeg/GTnIPKXygL25CRqSIcWP9iSpibxXzOxTBgSNT
cPB9jO1Thv38/oFF1BC/t7oRtdgcHZX3K8/Jd8PQH8KuLbx/OPrxKXw0ow6b
aJtN6DsYPwL9BMb3RWrwFr7RFryW8RvqqNGHNCLGjfWhyOAUZ/SsX0A/phmc
8jvmn1FG/ujvE8FDkEtS+GsW44ehfyOFD/XlQTl+PY+xYsx0QX+/GTEqp8gt
h+V+wXFjS06Sm+T89uifNoPzKmtOihgzhtyDe7GmWFuM72ObMce5m9D3TuEj
fXUl8sMU55Er51dR835vjGTOnZrtYx9jP9MZfVyKWmyPZK/0FvJOrlHTjD9j
MvcUk+UfOQT94yL4bFGKPke+np6CI+SK4docPAl5gfHnq+AOuf2X4NFVzNff
l9fhQ31pT2Vf4J7stcyxSXVwirl3XIp693SOtw6cdTF4TBn9nvHoWAtyT7bf
M3XUR2v103Xk6udY46k6OFKutMe8XO5n/q11xOyPU+SMuXNLGbr+s87pc+PX
nDQ37cFuAO9gfFQd/cPQHG9T6sgpc8v+4PQy8nNArj/7gWe2itg5NPOLnHRy
inp+Rc7HO8VIpyLsoV3+nIJrtZm2s0f2PPawvet4x3f9/uQ6+mtzxfg3D3rW
EUvGs3Ftf+Z65pd59scUfGZMGpsDc39zCM82Mv6nFHxszL+fxz2P+TQh92+t
i8gH+zE5ydplzpv7cp7cN6tV8LP93WeKqIHWc/nV2P9yrg/G00f2Q4y1NKOm
aE97LWvNHHti9AOMhzo4WC722VxrSR31wHpqPXG+7cWJ/zdurbFfsGZo70YZ
fNSSa7ixvzP3dgc2one23j/As5F13GP0mf2X9VpfH1xG/9AO/akqalqLPI0+
u4r6uNveDxmDfieyPdcoa1Vn+acZ9eAAa1Pmf+uzsdYp12v7Oe3jfPuzHnXk
5nrk71X0ePZ69i7a8P46eo+bkcvyfOudHGP/Zf/meeU/+813UtjD2DM3jR/r
m/lrHsttcvtHchL4Zym+7Z3Mu5k9vvXE+mcd9M5i/ngHurSOnt/aJ99Pr+O+
ZrxIa/brP68j9nbm/Lm5jrNvz/e/61PUKmuktfLqFL2dNdZae2kKbrcHsRe5
LkXvYo8rv1+bovey5z4mxT1Je2kDee/1RtxfzA1rkT6XW+VYY2FZ7u3kS3nz
shS1x578iBT3y4ll9Fjm55UpuNIe015zSAoutyezN3uyDt/o81vq4DC5TA48
LvPZHVkfl/uh0WXw90TwTSm4yx7LXuvGFFzlvdH73BUpuM87ZpdcC8dm+07I
/pNbzSF7yeEparX9l72yXGds78j3Jc8rtxgTg/N5OpbRY1ifpqS4f3gPWZ3P
Z2/gM+PP+/BjZfQoxoM1S/t6b3gzRY21lu5RxX3e2mjv4Znt/zbWEXv2+Pb6
9gjy3cOtwl/beO8rZdhM/rfGaSvvZW/neuja1mzrj/W2o/eLVlGrjRFjxdi1
N9C+cpM1w9rh9+TOTrkfsYeROzrmem38ybXmmP2F/td+2tHaYY01drzHr0xx
Hu/XrXM+Ga/moj2s/bbxLhd4JxyR413ukoO9z3gf8H8j+qBvjm+5QQ70fvE/
hVdTCQ==
           "],
           VertexColors->None], Polygon3DBox[CompressedData["
1:eJwl0j9IVWEYx/H3Hr231UAJdCmttkCwQKccXGpQdJGWkKZI0NU2qc2IzLS8
laL4/0Lq0JBBLWFEg86pi6SICpraFQeDPod3+HKe3/d9nvec855z5UF3W1cS
QriMLNZyIUyXhLBD1mRCuC9vYJ4rcg3cbbkxF+vU9ZSGcE2uQ9Eek/IUbl4I
Ydf1XF9B3xyK8iFfcP0qf8GouRbc0feZX8ItPW3ckvVPOOQOuBoPOSy/wR/u
N/fWtdnsd24Zx3LebJn6JfpxST7lB9Wvkrj2F+18q9kTa/9Qb78D/hn6sG9t
1rs/tLYqr6CFeyePIKNe59aSuMd7+42qz9RdqJQ7saDuRbnzeSSveo+Cfbe4
I3sMpA5V2Xivc33j8g3sqse4cdR5vh96ZsxOyE1m7+q5inL1a/ceQrWe61wF
l0/imaVnd1Qav/Ug/5zLcD9Rye3JM9Y7zD3GR/VTVFnrkdfxoSSeW3p+6Rl3
5+J/8kTfYvrO8i9M6dvUs232Xvod8SKJ981m4vf4hovZ+F1qQ3zm/3nrXLs=

           "],
           VertexColors->None]}]}, {}}, {
       {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0slOFUEYQOH/4jxP0RggJG71BXwOH8EHgCcAN044oDiBCIoyK4qgoDKJ
XJAriMzigMSFGhM1bl1I4leyOH1OdVd3171dB46WHCnORMQAhkXqaodvnOWi
dRE7da8+nhdxAidxCqfxYn1EOZ/BWZxDxj3nuQIX8Myci1yJS7iMK9hlXta1
q/oadhtXcTWuY49xDd835wbXog5/1kbc5Hbnb3E9buMO9rqngRvRhGa0oBX7
XGvju7iX7k/PxgN04CHCnE7uwiM8Rjd68AT7XX+afhN60Yd+DGAQf63tOQ+l
/yY92xqHOYsxPcL5npHTo/olXumxtAbOpTEm9Di/5olkTOrJtE5+w1Mo8Kwp
42k9zTM8ixk9x508z4XmLfCc8Vue50V+hwX9ng9viFix/g/6IxadX0pz+BMv
4zMOpW9nP3xP+8NfVun677RxMIIdcpAP4pe524279U+9TXfpH3qr7tBbeNx7
2/VmndNtepMe1c16ox7SDWlvutdSo15/1V4fdfpL3v/PFzXa1DjmUKTX6DJd
qNMnLtUFmdX9/g9D/HQs
         "]], Line3DBox[{453, 623, 624, 259, 453}], Line3DBox[CompressedData["
1:eJwl0LsvBFEUB+AzGGyxiaXRbbZV2KgF0SOxLVEoSVZNoVDRqMR4LhoaOspN
FFqFeD8SQaX0H/gmW5x8v3Pu5J7cqcwv1epJRMyochoxyApHWOUER9PW+SQX
OMtlLnKdK8y4wVPu8IpnvOFAZ0S/Jb/qXn/NYZW1Rzzk3/ORu3ziHp+5zxce
8JWHbKg3+YjvPOYHT7jWFjHdEdFj363ZuFyUm/KQXJAv8v1ssDc/74oocVPf
LSfyqpzKf+6sy1/89pY5+U7+lKfkpnvGeGlWtDvTl1g1OzcryFtmP/pt7y2z
L2n953+0ES7a
         "]], Line3DBox[CompressedData["
1:eJwl08dzjHEAx+GflI3OECFRo4axekvyRvS2avTVo64Soy+ijUOOTvIHIKPd
WGUwjCgHB4fMcCNcndwMZvC84/CZ5/u++76bdzdJef3huoYOIYQPKjGS/M72
vBDWa4PW6UkihGm8y5FcqYGFIXx0XGM/4kIu0GN7Ku9wBP8WhLCCbY4jPuB8
ztNDewqnF4Xww3XD7eV673w173Mu5yhnT+ZtDuMyvbOreI+zOUuV3uuP95pk
33J+KJfqrV3J/qpXqeev5USllNESzVCZ8ry+gzM1QYu1T4vi51Vfr5dyu7Zp
q8Zrj/Zqt/Jd04ebtEWbNU5j9Nsz7mJvpbVRbzzjABa7r5iD1U+vnR/EX+5J
xj87/v710/FYlqjK5y5w3wH7kBp0UKPV6v467tdq9XRdOXtpp1bppmuGcK0q
tEajdERX/U0c5TEd11PXnmCh9znJU3rmXJYJ507H3xnPsNpzFdln7cjuaDfa
nfjcPefszvYL+7zdxa5xXVdecHyFF+Pfg3Pd7Et2rd3dvhz/zu0e9id/u9fy
Q/jM62znDX5ho++pzGf4pq+OXzJSq/vaHOf4ii3MsZktbGIzs2xihlmmmWGK
aUZMMcmIFYn//0//ABuwVy0=
         "]]}, {Line3DBox[{453, 624}], Line3DBox[{1311, 1553, 1678, 1684}], 
        Line3DBox[{1313, 1676, 1679, 1677, 2044, 1846, 1312, 1690, 1687}], 
        Line3DBox[{1325, 1499, 1867, 1324, 1498, 1866, 1323, 1497, 1865, 1322,
          1931, 1764, 1321, 1930, 1763, 1320, 1929, 1762, 1319, 1928, 1761, 
         1318, 1927, 1760, 1864, 1317, 1496, 1863, 1316, 1495, 2045, 1691, 
         1732}], Line3DBox[{1327, 1765, 1932, 1326, 1766, 1933, 1725}], 
        Line3DBox[{1328, 1767, 1934, 1329, 1768, 1935, 1330, 1769, 1936, 1331,
          1868, 1500, 1332, 1869, 1770, 1937, 1333, 1771, 1938, 1334, 1772, 
         1939, 1335, 1773, 1940, 1336, 1774, 1941, 1337, 972, 1338, 1870, 
         1501, 1339, 1871, 1502, 1340}], 
        Line3DBox[{1342, 1775, 1942, 1341, 1776, 1943, 1343, 1503}], 
        Line3DBox[{1355, 1505, 1874, 1354, 1504, 1873, 1353, 1952, 1784, 1352,
          1951, 1783, 1351, 1950, 1782, 1350, 1949, 1781, 1349, 1948, 1780, 
         1348, 1947, 1779, 1872, 1347, 980, 1346, 1946, 1778, 1345, 1945, 
         1777, 1344, 1944, 1851}], 
        Line3DBox[{106, 814, 107, 815, 108, 816, 109, 817, 110}], 
        Line3DBox[{1357, 1785, 1953, 1356, 1786, 1954, 1358, 1787, 1955, 1359,
          1506}], 
        Line3DBox[{1370, 1004, 1369, 1965, 1796, 1368, 1964, 1795, 1367, 1963,
          1794, 1366, 1962, 1793, 1365, 1961, 1792, 1364, 1960, 1791, 1363, 
         1959, 1790, 1875, 1362, 1958, 1789, 1361, 1957, 1788, 1360, 1956, 
         1852}], Line3DBox[{1372, 1876, 1507, 1371, 1877, 1508, 1373, 1878, 
         1509, 1374, 1879, 1510, 1375, 1880, 1797}], 
        Line3DBox[{120, 828, 119, 827, 118, 826, 117, 825, 116, 824, 115, 823,
          114, 822, 113, 821, 820, 112, 819, 111, 818, 636}], 
        Line3DBox[{1385, 1518, 1889, 1384, 1517, 1888, 1383, 1516, 1887, 1382,
          1515, 1886, 1381, 1514, 1885, 1380, 1513, 1884, 1379, 1512, 1883, 
         1378, 1966, 1798, 1882, 1377, 1511, 1881, 1376, 1726}], 
        Line3DBox[{1387, 1799, 1967, 1386, 1021, 1388, 1890, 1519, 1389, 1891,
          1520, 1390, 1892, 1521, 1391, 1893, 1800}], 
        Line3DBox[{1400, 1527, 1900, 1399, 1526, 1899, 1398, 1525, 1898, 1397,
          1524, 1897, 1396, 1523, 1896, 1395, 1522, 1895, 1394, 1969, 1802, 
         1393, 1968, 1801, 1894, 1392, 1727}], 
        Line3DBox[{1402, 1803, 1970, 1401, 1804, 1971, 1403, 1901, 1528, 1404,
          1902, 1529, 1405, 1903, 1530, 1406, 1904, 1531, 1407, 1905, 1805}], 
        Line3DBox[{1415, 1536, 1910, 1414, 1535, 1909, 1413, 1534, 1908, 1412,
          1533, 1907, 1411, 1532, 1906, 1410, 1974, 1807, 1409, 1973, 1806, 
         1408, 1972, 1853}], 
        Line3DBox[{1417, 1808, 1975, 1416, 1809, 1976, 1418, 1810, 1977, 1419,
          1053, 1420, 1911, 1537, 1421, 1912, 1538, 1422, 1913, 1811, 1978, 
         1728}], Line3DBox[{1423, 1812, 1979, 1424, 1813, 1980, 1425, 1814, 
         1981, 1426, 1914, 1539, 1427, 1915, 1540, 1428, 1916, 1541, 1429, 
         1917, 1542, 1430}], 
        Line3DBox[{1432, 1815, 1982, 1431, 1816, 1983, 1433, 1817, 1984, 1434,
          1818, 1985, 1435, 1918, 1543, 1436, 1919, 1544, 1437, 1920, 1819, 
         1986, 1438, 1545}], 
        Line3DBox[{1445, 1548, 1923, 1444, 1547, 1922, 1443, 1546, 1921, 1442,
          1990, 1822, 1441, 1989, 1821, 1440, 1988, 1820, 1439, 1987, 1854}], 
        Line3DBox[{1447, 1823, 1991, 1446, 1824, 1992, 1448, 1825, 1993, 1449,
          1826, 1994, 1450, 1827, 1995, 1451, 1085, 1452, 1924, 1828, 1996, 
         1453, 1829, 1997, 1454, 1549}], 
        Line3DBox[{1460, 1551, 1926, 1459, 1550, 1925, 1458, 2001, 1832, 1457,
          2000, 1831, 1456, 1999, 1830, 1455, 1998, 1855}], 
        Line3DBox[{1474, 1579, 1146, 1473, 2013, 1842, 1472, 2012, 1841, 1471,
          2011, 1840, 1470, 2010, 1856}], 
        Line3DBox[{1552, 1469, 2009, 1839, 1468, 2008, 1838, 1467, 2007, 1101,
          1466, 2006, 1837, 1465, 2005, 1836, 1464, 2004, 1835, 1463, 2003, 
         1834, 1462, 2002, 1833, 1461, 1145, 1577, 1578}], 
        Line3DBox[{1576, 1494, 1571, 2041, 1675, 1493, 1570, 2040, 1674, 1492,
          1569, 2039, 1673, 1491, 1862, 1568, 1672, 1490, 1861, 1567, 1671, 
         2018, 1759, 1566, 1670, 2017, 1758, 1565, 1669, 2016, 1757, 1564, 
         2038, 1668, 1489, 1563, 2037, 1667, 1733}], Line3DBox[{1703, 405}], 
        Line3DBox[{496, 444, 1722}], Line3DBox[{1704, 378, 1734}], 
        Line3DBox[{1705, 382, 1738}], Line3DBox[{1706, 390, 1746}], 
        Line3DBox[{1707, 394, 2046, 1750}], Line3DBox[{1714, 354, 1849}], 
        Line3DBox[{1715, 355, 1716}], Line3DBox[{1717, 356, 1718}], 
        Line3DBox[{1719, 357, 1720}], Line3DBox[{1723, 1259, 1701, 1730}], 
        Line3DBox[{1724, 1702, 1688, 2043, 1850}], 
        Line3DBox[{1742, 386, 1860, 1847}]}, {
        Line3DBox[{919, 1095, 1145, 904, 1080, 1991, 889, 1065, 1982, 874, 
         1050, 1975, 859, 1035, 1970, 844, 1020, 1967, 829, 1876, 1005, 814, 
         990, 1953, 799, 975, 1942, 784, 960, 1932, 769, 947, 1260, 2044, 
         1262, 1261, 755, 940}], 
        Line3DBox[{920, 1096, 2002, 905, 1081, 1992, 890, 1066, 1983, 875, 
         1051, 1976, 860, 1036, 1971, 845, 1021, 830, 1877, 1006, 815, 991, 
         1954, 800, 976, 1943, 785, 961, 1933, 770, 948}], 
        Line3DBox[{921, 1097, 2003, 906, 1082, 1993, 891, 1067, 1984, 876, 
         1052, 1977, 861, 1901, 1037, 846, 1890, 1022, 831, 1878, 1007, 816, 
         992, 1955, 801, 977}], 
        Line3DBox[{922, 1098, 2004, 907, 1083, 1994, 892, 1068, 1985, 877, 
         1053, 862, 1902, 1038, 847, 1891, 1023, 832, 1879, 1008, 817, 993}], 
        Line3DBox[{923, 1099, 2005, 908, 1084, 1995, 893, 1918, 1069, 878, 
         1911, 1054, 863, 1903, 1039, 848, 1892, 1024, 833, 1880, 1009}], 
        Line3DBox[{924, 1100, 2006, 909, 1085, 894, 1919, 1070, 879, 1912, 
         1055, 864, 1904, 1040, 849, 1893, 1025}], 
        Line3DBox[{926, 1102, 2007, 911, 1087, 1996, 896, 1072, 1986, 881, 
         1057, 1978, 866, 1042}], 
        Line3DBox[{927, 1103, 2008, 912, 1088, 1997, 897, 1073}], 
        Line3DBox[{928, 1104, 2009, 913, 1089}], Line3DBox[{929, 1105}], 
        Line3DBox[{930, 1106, 2011, 915, 1091, 2000, 900, 1076, 1990, 885, 
         1914, 1061, 870, 1907, 1046, 855, 1897, 1031, 840, 1886, 1016, 825, 
         1001, 1963, 810, 986, 1951, 795, 971, 1941, 780, 956, 1931, 765, 
         1862, 270, 309, 563}], 
        Line3DBox[{931, 1107, 2012, 916, 1092, 2001, 901, 1921, 1077, 886, 
         1915, 1062, 871, 1908, 1047, 856, 1898, 1032, 841, 1887, 1017, 826, 
         1002, 1964, 811, 987, 1952, 796, 972, 781, 1865, 957, 766, 1140, 
         2039, 1248, 1139, 1258, 1159, 1206, 1860, 1271}], 
        Line3DBox[{932, 1108, 2013, 917, 1925, 1093, 902, 1922, 1078, 887, 
         1916, 1063, 872, 1909, 1048, 857, 1899, 1033, 842, 1888, 1018, 827, 
         1003, 1965, 812, 1873, 988, 797, 1870, 973, 782, 1866, 958, 767, 
         1141, 2040, 1249, 519, 520, 390, 1279}], 
        Line3DBox[{1041, 1905, 865, 1056, 1913, 880, 1071, 1920, 895, 1086, 
         1924, 910, 1101, 925}], 
        Line3DBox[{1148, 1147, 1146, 918, 1926, 1094, 903, 1923, 1079, 888, 
         1917, 1064, 873, 1910, 1049, 858, 1900, 1034, 843, 1889, 1019, 828, 
         1004, 813, 1874, 989, 798, 1871, 974, 783, 1867, 959, 768, 1143, 
         2041, 1250, 1142, 1160, 1213, 2046, 1309}], 
        Line3DBox[{1273, 771, 1934, 962, 786, 1944, 1287}], 
        Line3DBox[{1274, 772, 1935, 963, 787, 1945, 978, 802, 1956, 1288}], 
        Line3DBox[{1275, 1234, 2037, 1135, 759, 950, 1863, 774, 965, 1868, 
         789, 980, 804, 1958, 995, 819, 1010, 1881, 834, 1290}], 
        Line3DBox[{1278, 1195, 1247, 1246, 1138, 1245, 946, 1861, 764, 1930, 
         955, 779, 1940, 970, 794, 1950, 985, 809, 1962, 1000, 824, 1015, 
         1885, 839, 1030, 1896, 854, 1045, 1906, 869, 1981, 1060, 884, 1989, 
         1075, 899, 1999, 1090, 914, 2010, 1295}], 
        Line3DBox[{1282, 754, 1240, 1241, 1239, 2017, 944, 762, 1928, 953, 
         777, 1938, 968, 792, 1948, 983, 807, 1960, 998, 822, 1013, 1883, 837,
          1969, 1028, 852, 1973, 1043, 867, 1979, 1058, 882, 1987, 1293}], 
        Line3DBox[{1283, 1256, 1235, 2038, 1136, 760, 951, 1864, 775, 966, 
         1869, 790, 981, 1872, 805, 996, 1875, 820, 1011, 1882, 835, 1026, 
         1894, 850, 1291}], Line3DBox[{1284, 2043, 1286}], 
        Line3DBox[{1285, 1259, 1268, 1296}], 
        Line3DBox[{1292, 1972, 851, 1027, 1968, 836, 1012, 1966, 821, 997, 
         1959, 806, 982, 1947, 791, 967, 1937, 776, 952, 1927, 761, 943, 2016,
          1236, 1238, 1237, 753, 939, 1303}], 
        Line3DBox[{1294, 1998, 898, 1074, 1988, 883, 1059, 1980, 868, 1044, 
         1974, 853, 1895, 1029, 838, 1884, 1014, 823, 999, 1961, 808, 984, 
         1949, 793, 969, 1939, 778, 954, 1929, 763, 945, 2018, 1242, 1137, 
         1243, 1244, 1305}], 
        Line3DBox[{1300, 758, 949, 2045, 773, 1936, 964, 788, 1946, 979, 803, 
         1957, 994, 818, 1289}]}, {}, {}}},
     VertexNormals->CompressedData["
1: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
Wt5210YrdW/E8i43QKMEPQt3dGVLn6XDJiethN60ii/pZnAp9n35DC/2ulP+
6HEB4nmQFQv5najrY2L4z37MFzn3/Nv8bJzah476VhniNt84uUV4rwXoUG09
OR//ltDcJNpCKgeUAtkCDqzHwPh9uMV8PMnKA5/47QqEIPDsJUzFihty8tk6
5vubFZc53VC3CmhPK5rlPZ1GN/KmF+z2YZOFuZhbG2oTvHwrwLAGqT1ejHf6
0hhC1fkuCblbqX/Ikw1DMfhF3ejVxD2vujkg/r57vc39pqiUoOdai5urt2bt
Ratanu5PfCu3dL72Yrvd+6kGUczn0Z0CfMTqJd1K6y31WQ80z8eNJG5XI8aN
ZD1WHzNuLxNTd9ySn6L1b38v7X/jBqrbzHAJI9hocG5YIycDnPYIXdAtv2K4
IlNzBN0v2vltuT0NmH9ZtdDfT7n3rZRsexCTaunBhp2t6K7xwKIOHfSMF7tw
aOv5FMdws0SUkE4457WLOXNZ1ht1dKj6GK+yQjsIum3+8pq0S14HeTV3Pk8t
kkRTBB6dvp0zk0IW23ws/pgQOdWSPgfXOHu7H12HqbpN+TWGEceBmY33l911
pMR2nXB9le5PPI9LdTR3s+guzLkvrMBz7Qj/n67zj/hHQj7Rye/yiaYFnBr0
qerQsc61kjF29egsfFvgqFb5yakzici/1adJZHk4KhwgjJ/dlsx7TK4gdIrb
T2HCEN0n6LliP1+2S9ZptMJNfYrdAqFvBK4b1tiuvV0Gw4rtjmyUIb4PUX2t
SFroDBNm0GxEpSFPjA+5oNB548MlcuzNiLO46HpiflZ7yJ1zLu96ck6t8Vb/
1PH3i3MwOyrb8CAwHjXPpAjuGMlCb6oW9anwjqtPueaPXF+PJ69iu420CeMt
rjSG5dRNB6T/Sm1ZoLAOqiHo2Wlvzxq6TBllHqhbNXlDeCkOiiE6g4m77CBG
msF+NiOJGJe+xWv5UAEDB/bibjbj1jfEPDgn7QPHjn4kw4RNSUzJK4n83dtk
f+Gi8Zx7kx23h4T+OXEOkevWpzgGGGH8VtrV6KU32k3QTUb7k/J42TnEMxb+
qY9GZSmfhdSQN/S8ojR63GiRkXWbeJ4+fIpJfourCJYdtVU4fDNxXmO6L9SW
e5UTs1IRkz5pR3y/p5nfeuO+oxSY3L7arqlgIj+r07VbF0gwbWY59x7Kf04+
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

      "]],
    Axes->True,
    AxesLabel->{
      FormBox["u", TraditionalForm], 
      FormBox["v", TraditionalForm], 
      FormBox["\"\"", TraditionalForm]},
    BoxRatios->{1, 1, 0.4},
    ImageSize->{360., 281.487264522269},
    Method->{"RotationControl" -> "Globe"},
    PlotRange->{{1, 13}, {0, 10}, {0., 0.03885218035640922}},
    PlotRangePadding->{
      Scaled[0.02], 
      Scaled[0.02], 
      Scaled[0.02]},
    ViewPoint->{0.1958349894525185, 2.057032970998967, 2.679601465354372},
    ViewVertical->{0., 0., 1.},
    ImageCache->GraphicsData["CompressedBitmap", "\<\
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
zObKAANrsKb5hUzv8l5JVP53e3V3q98Ui0He9kzEHSPKOyXPxx+tr69nq+62
nD179m7jOpKWHjxr+oteIzzUDt3YITyIpx0vHA3unN22uegD+84So9bVXQtW
rVp1jf7uYygHT4/KBVd9vdHRfhR5NKD8K954t9nbn7jYA/vOhqrYNmuW26xW
q+8BoHcvN2ozCcA1PBZzqgcD9K954z3Yf59cECotaSYbn0qxqzo0NFSxaNEi
tpqz5vPPP2dLWd8LKzs2I0M2LnJSL7Cj1cO89XIHiYL44f/5X7O9+bZf22p0
3gHgJnMk8yKH2q2XW5X0P2w3+4Myp+CnnWjLA4xF8DVigGw+DmTT43FVDHUq
zp190K3LM9tZG394GMgZbe6Zh3ed9wdWfclH23lsmac1B+3ND+I0xo9So9u4
sLsyrjgW2x7sJdHQp3NSGz0ySHv/jUzz/t/RavnBt9nZ2dn2dvdTsw+e7/0p
neaBTXebExhdBQxxG2eW3U+bS38/betL5tqMlLht4kNPPPP/U5zsKF5w32jc
iAdShzWNfLS3DZyVOsiUcamHcnt7//u9hUJu20O98PzUwVKmq/tJIZxmD4s7
ur1NeVKFTy25x7oYll+8Q076J0/dHrtt8nL5W5mGvg9FMtRtA7PN8lNLRtJ5
uZvADmzR/q38NzLbfsZA2fSsozrKfS/UM0bx7Ui3jYTHE3pVNlp5i7EEZby4
8HsDxWibj6Guqt73jyzGzjPdXc3wAGMkE9/GoiGGOjvVRi6Ba+xuUnAg9e/k
cUbBuA2vbztWQN1xJuoQzmEz3TAayUM52dylALqvhzvaD7UMK+Qe2lzToRCG
gfgTckH3HIjBfe9YBElDnVM6LIYPLxN0z1EY6r0N/tTsiC32Xcm9DCU39LMB
wGYuYsQjI3cPAJuiu21+48BW69+Sv5HZdpfyuyN3xkOPcobyW3Z3OUIa7Dju
pvqtYHDn+Om+BWWI0Y1t+o9qBmzk9zN0o/UzhuQOcc7Ikl935wbGFJd7gcGg
deUin5E8TD6WGP1WptEHmbXzs8VoWBHS2F390IXzU0Dh1nss5vSMdoPJJYD6
Yr7RfnJ0uM9pjBY8NmKme+ti77xNLjkpB8nwh0DvVkZl1AzayFJ5ow2O3PmG
m/HqGwYdSdJ1uB7mz6MFyJ0vzeYju2OBxnCfrpYDc1hzt4aaBZbrWo4hKPLd
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
3N/IwI5XUrD1xURseTYWG5+K5Mc5PB6OtU9GwF76vpLeVzwdieXPRGHZc7FY
+koalr6Vj8VvFZDEskli6ZhL0vuBZDmLjp3xuJjn+z3J63uS1vckq2kkqxlU
Zk72wYLJh7DqUTFfye0pbxx4fh+CX9mHhDf3Iet9MSap/94Fpd9thm7KBpRN
XYeqmWvRONceJxetwenl63Bu1UZ+3EV7IbE6B2+YNgdBsy0J+R6FUB7RojjG
jNIcCm2U9b0y4x1szfHeyLG/zJRCZv0npoyivv5WVl8m92KYPXSweJSi3N2A
CvcyKibU+Z/h2qr2qkX1nhrU7KbiKVJOFRvy0XT4NOp316Leoxr1pKf6neWo
32Gia6/fXmb3Hr0aUL+1FHXOAvu6jSrUbihE7bp81DjkosY+G9VrMlG1JgMV
9hkoX5sBi0MGTKuSUWUv+gmmjTnUprkwbslDmXM+dOtToXfMhGmrGmbXYpjc
tHT9epTt0kK7rUDgtr0YFtJ2hWc9OctmrpfS3WUo8lRT3KalY40o31mFyh3V
sLiKfkyJZwm0+0zQexhhpOs2b6HiYoKR7suwrw76w4Td7kqUuuihdxH2Qr+l
HAZXpjeKQSkW1G2tg865FrotNdBuroJ2YyVKNpSjZL0YwNGQVtSkGdWKUiiX
lqBwsQaKRRrh4X6HnPkqZM9TIvPHQqT/KJIOKQtUSF5chCQ6PGGZDnGLtIie
V4zIHzQIm1GEkKlqBH6jhP+XhfD9VNQ59H4e9n+QDy+Slyd1vXa+lgLXlxLh
8nwsnJ6OguMTYVj3aLDo57yC1Y+JR8dWPB6M5U+EYNmToVj6TCSWvJSEJW9k
k8LysOD1TMx7JRVzX0gghcVg5lPhmP64qDeV1DWV1DWVlPU9qWoalRmTD2Le
5ANY+aiYgrX98b3wemYPAl7Yg5hX9yD9bTE2qp3iAu03m1Hy1XoYpjigYvpa
NPxgjxPzV+PUUgecWy4U1rZqO3+vWb0Xhg2BUG1JRP6ufKgOa1ASZYQ+q5o6
0LW9KuNxifRuTXpwlRn7VHbL3Jjbhlbl5PXqneT1T/KjRpsyUeaUA6NTHoyb
84nOBbA4F6E+qAU1B5pQTm6nYrseldtKUblVmNZy+0w0kNuqcTWhhuhYQ9tr
nLWocSpGzeYi7rJq2edNatQ4KkUs6pCHavtslnpcnWn3JqpWpqFyeQoqliai
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
oa8arqxmidyI9I2WyQWm/+v/B33uX1M=\
\>"]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PlotNo3", "=", 
   Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJztvXlcTs///5+QKEuhpFBJJVu2LHFdl73sS/tCi7IkRQhlJ7KE7PtWRLJW
luwpkqWihVKkok1kSZb6vnjN43le7zmv6/e5vf7/+cftdr/Nba7pfs55zszz
zJnRc/OZ6KGooKAwSFlBoe5f/++frlGkoPBB+qDrzsJTVSckd/s9q262+L30
8dH3PXJif4n48tlvbmbH1pfxfM+GcZ6Woaoibv/MOSg7Vk3Ei/K32YcatBRx
v49JnS1DW4m4wp9/OiK+qYnZ01jvdnK4nog/bZk6INSgvYhrtZl13DvbQMSn
GDRoZhlqKOLhnY4uMrA0FvGyHgPf1NZ2FHF4rnt1U+3s7CIp75nn8MxzeOY5
PIOH93h446dZGXkGv/r2yGGz4HfkGVxNbWzqCZ0i8gxe+W1F2p5ZBeQZ3PhJ
XI171zfkGXyC7swh1/vlk2fwxA2+3Vf4vybP4Hnzy9bPev6KPIOPW9E3obvN
K/IMfupbvlrl4zzyDC5r+iE4RC2PPGe4pUhnZ38VeQav+rbGr83OAvIMfiRm
t/ft56/JM3i7FfYmO3UyyTN4QbfEFbktH5BncD0nycWt7tfIM/iSghErlUPP
kGfwjldaKxjYHCbP4EM8x8ZaTd5KnsHbqCtPS+y/kjyDe/ZMdLv2bC55Bj+s
22zxlS7u5Bm828YnQ18MnESewZv28NPOqRlMnsFVvR12PFzYgzzbfC5bFmpQ
R8Z7Bi+qeTnohGsWeQZ/lfXIubd/MnkG37baqfH4pTfIM3hDvQO5U0dHkGfw
9sbphR+0t5Bn8J5XZr78aeFHnsHdl48ZGnjSmjyDqxp3/76qVx/yDO4w7MKr
7Mea5Bnct+eCvJg5VRJ4Bre6efZQQLsMCTyDR59quD6gVbQEnsENJmYpnfEL
lcAz+Egn9dtTavwl8Cy79DHPO1tJ5Bmc9wze7s2aZuZDYskz+JgTsiOqs0+Q
Z/AjHtHvPXdvJc/gOucm7uzW2Y88g3/QLk93l00gz+BZ/Sp7lgR2Is/gCj/H
hqao1iPP4NMz8hL3qWRL4BncZm6MgdvHc+QZfPyWoIHF4WvJM7ijz/Cb4Vt8
yDP4pIqJ20d+9CTP4AMq9nrVv+5Bnk0Wf5X+9sR7Buc9g/Oewc8WNN2s0W0j
eQZXV7g1UvNJIHkGP3nHpeejIVPIM7ihj5/Znp79yDP45UNqfiW5zcgz+A7t
KqWq8DcSeAZ/5NFrwc0TF8kz+MUXixu67FhDnsFvfSyuGGEygzyDv8988LXe
NnfyDD5Yt2X3gAVTyTN4nlf3miD7qeR5/cFf40IN1ESewXnP4Lxn8ClDmlu3
/Idn8Co1WdjxbDfyDF47cep4Z89R5Bk82rSe7qC9huQZvOmoLdrbR/2UwDP4
zsOm92cVPCTP4NPXGTQKaLWHPIObLJw3/+2dOeQZvMZQr22HclfyDG46/82d
3TZu5Bl8mNpk5+kq7uQZfG7PtBVDAtzIc+2ff81FnsF5z+C8Z3DeM7iJYfDh
uKaO5Bk8uuZjZ88HPckzeBMd7VijZi3JM7hL0tCSVf1KyTN4QUxJvlb6FfIM
nlIwQ7PSbTV5Bjd99q4i8dNU8gxuKGsV1n7HZPIMHmg8/FrZNVfyDP747epP
h2a5kmdws/mG40JKXMjzPFfFc97ZGiLP4LxncN4zOO8ZnPcMfsTUKmtolgF5
Bn+8ackW3/0K5Bl8vU2H/ofWviDP4MVNatRuhJ4kz+A/RjU4f+r+fPIM3vXh
orkzK1zIM/jS62qjc087k2dwmYFb3PZRLuQZ3HJ8S/N9Gi7kGXzv962pvzpM
Ic/Fd+q5ZMdqiTyD857Bec/gvGdw3jM47xlc1+/9bsPRJRJ4Br/Qu3V45/6J
5BncPWpMr5qfe8kzuPL+XaM0wmaSZ/DluubVjXwcyTO4453QFsYDBc/gmTlP
WxQ1nkyewXskrHbdl+xMnsH3Ploa1+yFE3me/Kc+HZFncN4zOO8ZnPcMznsG
5z2D857BX9l8Otb3YQR5Bv/sX31+nP568gyek7m0bvfxjuSZeK+QJvvu2pJn
cGMfP0PZOCfyDP6ykc8goyJH8gy+94fKTqujjuQZfIVP3KivmQ7k+emahrd+
t5f3DM57Buc9g/OewXnP4LxncN4zOO8Z/NiikSvT1kwnz+CToucpnzxqSZ7B
x8pWf7VWtCHP4JJxBhYv7zqQZ/A+AQeXZPy0J8/gmbd6n18fY0+ewZOsKw83
aWpPnsM+1e8baqAn8gzOewbnPYPznsF5z+C8Z3DeMzjvGdwzdsz1lH94Bs+K
W6X77koP8gzeQmv+zoYm1uQZfPnQvEfFSXbkGXyGjf3M71I78gxuXpXsv/S7
LXkGH1LVe/czP1vy/Hd9+iLP4LxncN4zOO8ZnPcMznsG5z2D857Bec/gVkFf
h23J7USewX88tB1+77oVeQbPrBrx2fqTDXkG/6U4JnxGuA15Bh9hGGj/c5oN
eQaPbbDHp36NNXluba38rra2vcgzOO8ZnPcMznsG5z2D857Bec/gvGdw3jM4
7xk8ooFvYbcjgmfwSd0Sc5+PsybP4NZjUj+nG1qTZ/LzKuxupyor8gze6lLl
2IATVpKYNSs3/s53lB1Kzgs1+CidGa2989GDcin47Q7phyxDf0qzvu8L0NlZ
QNxpuvIy3+wMyjuB8/k6XEe+/OcpUWUGlooyeRzt0QlZcj9cUi5VXaK1LdSg
oag8OMrP7x+scVDhnbT5ozs6CgrNROXBUd7LNimm9uZr6eHsbxWx3s1F5cFR
/ozrtoOzp72Qdi7pGv973MaXB6fyx1ZNMlrwTHr129SdBpatReXBUT5h+uF7
K+amSIc32DcjO7aNqDw4yhvnRtSqtk+Wlqyf3tYyVFdUHhzlL/y85NPqYaLU
NLTuOgNLfVF5cJTf1kOtaedp8dIFew5+/H3f8OXBUT4n0qGy6+lb0muH+zlm
x3YQlQdH+aVZ616eeXFNqhjx7G6st5GoPDjKzwl95N2+1RWpxVmfrqEGHUXl
cZ/zHOVRz44dJVGyohi6P8H5+xD3f5H5h8YGD5/T/QYeeHjskfi1qXRfgUcf
eqGkf+Y23T/gP49MmbetJIruE3D95Peq9/x30f0A7pgw1qN27wq67uCjLAof
rAibQdcXvP6Bl8+mt5lI1xH8RucuWoOz+tL1Ai81q9h+ar0uXRfwqZfrzGk8
tT75B39nuq6lTn4JxRO6DwNmqJ5bFE2eUb6sd1wDA58Uiufg/PObbF3RTUGh
niyig32h8YWr5BNca4Huu9LmEXR9UY/7yPqbiurfoTiG8ohXuI7g6U2U2n6b
cp/iVUyrz5uzYxuKyoPz5Q/9uZ5NReXB+fJDn9QYWYaqi8qD8+WvmtbJivVu
KSoPzpfv+uc6txKVB+fL/z2e0RaVB+fLt/rTX7QRlQfny49wrP8w1ltXVB6c
L6+4USnMO1tPVB6cL3/tWoNAA8v2ovLgfHn0dyiP+xDl+ecd5VEP7meUz880
sRi+zFoCjvISdUN3t1ShP+Xfi6F+vn/E/c9z3P88RzwBVw+ODrXoUkLxBLz5
qc7lYb3eUjwBP6hqbpTWo5DiCXhCU+tVVnfeUDwBn55pN2XX6XyKJ+CvDbqN
cHr6muIJeI9VdRQOGLymeAI+6pN2u7fbX1E8AV+/3uD8Dp1X5Jn3Bo7yL63H
X7gwK4984n3NzX3OWl8aFpBPeu+zJe3xi10vySf4i/DWvb+vSCWf4KPrNB7U
c0Q8+QS/1//j5bwX0eQTvMFd32HOjsfJJ7jBk57awc93kU/wG00+74wwCyaf
4JOKtALvyBaTT/Bw+5MW5aUzySd4VNubXml9Hckn+NNPm2YM0hxF3sDnKga0
yQnuT37w/mV3sZ7h8NMJ5Ad8aW3sipKUizTeRvzEeBsccZLniIc8R9zjOeIb
zxHHeI54xXPEJZ4j/vAccYbneN7B0e+Av40plXX+axyO8vx4A/MRnmM+wnPM
R3iO+QjPMR/hOeYjPMd85N+5nohjPsJzzEd4jvkIzzEfkdd+jB9OzknU7jI8
jdoPnrHSaYD+w0fUfvDo7CHlI5/ep/aDW+v+qj2rkEDtB+/0WOPyzarb1H7w
duWqA17U3KD2gx+y8G5Sr/AqtR/8kW7vzhKfS9LB2y9P6WD5Xdqqat2hbX/F
O/xd/adZ2Px+Tng+cXX0T+/sRiIeO35Lqnd2MxEfMiUxzMCyhYineP/0z47V
FHHnwB6jfj8P4DtuthoZqIDxf1vi4xVmft9wqkx6bfSTb7W1usQvncnfbHS8
VKpoNdMtO1af+JqVX0YWZ5VILf48PwbEezgkuqX0KJGGuB3uHWpgSDx52YBP
ISeLpc9mmB/yzjYiXhi3eaapWTG1x7XO480KCp+lh+qlDi4dc57aA95WZbDb
0yEnqD3grfO3lRi3O0TtAd9mOf7wsQvbqT3guTcmZgX5bKD2gH+dVjHeruVK
uo5NE34t8ctOJJ9n7NRXWYYqiDwnzl/a8ZJ3AxF/FVryxMCyiYj/tO1k/jve
8TzY07WJgoKGiGvM3/U61ltLxI+tehTtna1DXMnOuVDVspw4/q7zgTN0TbRi
pK2S6gwNNRCur0+qb6yebhnx94GhU0aGlkmz3qyLfhuSSf7BAw/OmvZpbwaV
R/1zuxv3KHQ7LZ2csj/qd9xE/WpjlLOe9Csljnpk2ZeqhtxJp+sI3m946MsF
CulUHvVHPr9Y/rTRMWlYZh9Ny9D2VH+X5Inj/+qRiKOeXZmj3zWb+IzuB/AT
X3o2Hhb9lMqj/lIN19KVU/dIS3LTlhtYdqD6t67u7dW8tJg46vEaqd422eAp
3VfgRTLdrneOpFF51K/6ZNCRD9lbpKZF3iW1tcJzkaCsoBfgXUwc9byeeCJ4
b8c0uj/B219J1Kkfl0rlUb+Ju47+m5FB0gXlylbZscYy/r4Fx++ePp42VK9u
MXHUfyFkdGqRVSpx1F9lExy+2GKJ1Nh/9JVL3p9EzwU4f3+2npOhbBnaUdQe
xCvU36WH3+x71vEUr8CfKLkOM7l1hepBO5t01nww9msK/W6psnKP0LD2stDK
2/f9k4qpPPjiIw+s56sJ/TLitlVpuP7jf+S1aJ3PnR9Fv+cFKI95pZb3wdnS
ghdUHuMizCPQv2NcNKTF97tLpLdoXIp1F5hHoP34e9F+8NF30yqyY6uJY54i
z7+8vBk/fkYc4+tBP8VzjA/5ehD3+PLo13iO8SRfD+IkXx79IM8xPufrQVzl
y6Pf5DnG83w9iMPy7lueY/zP14O4zZfHfc5zzBf4ehDP+fLoN/+d64rqQdzm
yyPO8xzzEb4exGe+POK5KP6w+QtfD+IwXx5xW9RONt/h60G85csjPovayeZH
fD2Iq3x5xGGeI84g7tl+6TMo/ek74vzziOcUcYznlC99HiX9HZfwnCIOSKSn
Pwy594rqR9zYs+HIyOCT/sRRz8/qAYMOdI6hOIB4dTxmd1FA4mOqv1mH97aW
oYqya4kvzAMWplJ7kMfg46q8+xztmV077kn8sps0P0Icbj3rQueF360kqF/e
OmG+H0E9vH+Ux+/y8yZ4SI++8zVjcS7FE5RfOzxoZFsFYV0r4nzXaYWaIeMv
UXn4H/J8j4L+lrvE0V/0L7qhWjrkMc3L8Lvf286+OrJdJsUfGi9tdrDocegR
lcfvbh02o+2nnKNUHr+7Pi7IP2fYReL43TM7ZVONN96ieRPq2XVpae+CvI0U
r1DPxfBzJ3s7HCGOepYWDV/XNOc8zbNQT0jdC5EuE+dTvEI9ZY7DtmicCiGO
epRKAqaf1DlG8zLUk3L75oOReyZTvEI9+XkF8W+WLSaOevJOjfTs5LSd5nGo
x+FxruWIkcMoXqEe39n5imd8PYmjHr/ZI6eZ+q2heR/q0ZyisszkXmeKV6jH
p83rTlahE4mjnpHmb732SxbQPBH19Fu81ODOK3WKV6hnQXHvbV3qS4ijnl8T
EzL2x3nSvBL12N+3qVRS+yZBvEI9Guu2OFReNaI4hnqsgyY1+FxoQ/NQ1NO8
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
OM0ju43xV9HvrtlnNvRN5kcR95lsHnYjpErEjU1mmlfn/iDe6OqEiCy3jrKQ
HEn3NnbC39U0zsLY9U5Hmf3mZd+ODRc45pudNX5dHz5O4MgjTbHZUfbP8Rt+
l18nDM7ni8D5ea688cl/bae8v1deHJY3XpJ3P8iLb/KeO3nPqbz+Qt64Tt59
Ky8Oy4sb8uKMvH5N3vhT3vMlr7+QF/fkxUl5/a+8cbK8OCCvX5MXt+XFeXnj
BHnjeXnxSl7/K6/fkddPyRvPyJt3yIur8sYJ8vpNef2svHGXvPmRvPgvbzwj
r9+XN06QNz6U1x/J67/kjbvkzXPljWfkjWPl9afy+l9540N583F54y554215
4wF54wd541h5eQN5+Rl58wJ58255+Rl583d58xF5eQB5eSF5+QR58yB5eQl5
+Sh5+RB5eQ95eRV5/bW8+f7/Nd6Q14/z4xZ545//Om75v/IPfF5I3vjqv+Yr
5OX3/mseQ14+8L/mN+TlD/9r3kNevvG/5kPk5Sf/a55EXj7zv+ZP5OU//2te
RV6+9L/mW+TlV/9rHkZePva/5mfkzVPkjcP/r/kOP85ft29SkoLCT9F3Z3jf
xPNzCm9HKCg0EufntUJbKiiI15ng/QvPh140baCgoCXif9/f2qJ9pa7+eV/Z
lvj4dvntXCa9YVxYb/8ywHWCiV++tNUnsy+1y4T19vuW3lzhce219KlU6X3t
MvG6CLzX4HnIxvSi2mXi/bvgDXFygJf7+N/7RMEb+DnjgCHZH/PJG/jM0dHh
Dauz6e8F78z2d8LfC75z3egmspeh9Lu0/jyw19lR23Pod8GHjOh5NKvtI/pd
8PjaoQdrmt2l6wXeuXN/s5+9jtL1Andu7v1Zedt6ul7g6o/z2nfcNIfaD+7H
9k1C+8Gt49UOnNeX0vWifZlmO855ttaArhe4YZjDjaiuDWkeAT6svdu97dVl
ElxHcNNlS85/9HoiwXUE75rwee2ufuckuI7gt1/UH9qpcIsEPtFfuJfvLppj
/ZJ8gvdYbvD0wa3b5JP2U0rr3L2X7Vka/4A38R6jqtvmMHkmrrB1Z9LOYPIM
fiqyX86kktnkGfzyypoGO1XHkWfwb2zfJHgG39KvZk+kZVPyDL6/LP+nSff3
EngGP7D98PL225Mk8AzuMtRzdLuiY+QZPDzabfyg6yvIM7jT5uDPj6d7k2fa
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
GtSdcLLZYvI8iLVfZVUDadFeT/L8hrV/6HGflDZzhPzPOtb+iDudzVv0EfI/
KRdrLUPDmos8H51Wu83AsrnIs5927cvYcnWR52FsvxG+/9JYVTMn20xdZpUY
9DrY2548vzWrifPOVpPpaf7sN6K3kP+5XPKrvsJyNVmvXll1Z/1qT55r2Hz/
DpeXeMLaH7jE69K0h0/J8yHW/tKBIzWWOJ4jz3NZ+4PvaTr7tQoiz9gvpde6
xZNNp88gzy1Z+zc18Klumu1KnotY+7NSVTa31hHyP1dY++Pb7NIec0/I/wxv
qfi9dpmGyLPmn+88NESe3wXWCTFIainyjP1beM8bChT0LdVbisYJTrsVZmXH
tpCVZ8wd7XKlK3nuMloh1tuxhWxg3Ye/uh8T8j9+bL5fyOUlhrL263xTC87u
FU+eW7D2z22hU3Cl5AB5fsvavyjAOl1pxzzyjPYvfP6tkXahq5BnY+0fEd/q
aaH1FPLsyNrvW1ntaDdJyP90Ze1fOrNLmld3If9zdUG9U96OWiLPG03qfa6t
bSXy7JxbVxIa1krkuRvbD4f3rDC8blpsuabIc2q1oo5lqKZoPHY0StEz20xT
Vl/P92zUTCH/847N96u5vMQV1n7Hk6v6GnW6SJ6DWfv9A01kK7eGkGcn1v7u
n07M7Vk8nTxjPx+nLvGBNZuE/E/tsL/bLw126DMoVchLpLD2R02b93FYwRTy
fIy1v6dh+o3UO1PIs2mWkkO2mY7Ic50/+/xoizyn/fl9bTnzOG2R5/kn6q80
SGot8jz8z/d/rUWeNZvW17BUby0a9zrLyUt0Ze3vExVwe9ezw+S5ZsPf7deM
W3yhbpPl5DmVtb/JqMKUbzNduXmctuzZiMzNHfIchTwba/9GZ4+EtdeEvMQw
1v51BXoxdfyE/E8r1v7Avck3DL2F/E9Yv4aNLNXbiTz/vZ9EW5HnEUeUD3o7
thV51mL7NfGeS/68F24j8hz35/1yG5Hnjb4NEmPLxfmfNDl5iWOs/Xxewo+1
X91hs/uTD7PJ83DWfsN+btrram3JM/abajzYvtO1ofZCno21/8y29mvtfB3J
81XWfqfLLm0UHIT8zybW/leJ0zNLxwn5n02P6jtnf9UVe/5zHXVFnievqH/C
e5+uyDP2v+I9d+td/2OtVFfk+e/rrivyXCet4QKDJHH+R15eYiNrPz+Pm8fa
7/gqICT4H3kJZ9b+hWqHziYoC/kftH/ane757TxtyTPa/777t17KT+3JM9rf
70XHQFmgkP9RZO0Pu9fy/SRvIf9jUaPUO3Sqvsjz3/FEX+RZ64LSMoOG4rwE
9hMT3c8eSkmxUeL8z99/hzj/E6el1Nxyojj/Iy8vMYK1n/fcjbWfny+3Yu2f
6qd0sIWvkP9B+xesm5xwtomQ/0H7K7wibvT7aUue01j7XRvpF31PsiXPaP/I
PQk2FVeF/E/dbsqNLdPEeQmsA+E9P8tvYJu9QJyXuM7WmfCew3c2OOKtLc5L
hPx5vsT5nwUjG5TW3hTnf+TlJRRZ+3nPJaz9vOenrP18XgLrZIxqQkJTlIT8
D9r/1j/gc/hwIf+zibV/4Xf9Li/6CXmerdtSNTtYfpP6LNrQ+/f6DXjzCq/b
bodBqmjdi0vu9qaXvSukMZ9HN93uXULe5nLlwYd3apw3KjRHxF1ZPWMmmESu
+/yK+HGWr/Cc1bzC3SeD/OM77vs53Tt0cHtN/v20t5zNiS2Wlu553/LxsXwa
7zVi615KubzKCla+z4wGT360eEXzxMX8Pi2MN1zy9+9aYD8rdl02cn8vuC/7
u8bmtS5UjX5M6214P+DDOD/g7qye9cvnpS9wfEAcfnSPl61MX3eO7n98d7z9
6ZZ5T2/m0vWq/+XpvVCDH9LjdluHfCtLI89KjL+Y2HqCaVQMceRtbtSpeNxg
1WnyjzzP0WrX6uykbeT/O8vbbPK+ZDdwqD95s2ft6cH2W4Cfxux3PaZ3vjD1
vgX9XWhPSNs+lw/u6UAc7ZHdv/Gx/jUFWqfUn7VH3zMpqJPHS4oboex+HhTU
a8yVkAG0fgn5K4+EuiefFVyUwA/yJ1N/2Z/tER5HeaSLLE/CxxnkhV58Kr6+
szSJyh9g832+PPIbiEsov5bNW/nymKfz5TF/5MtjvsmXxzyCL495E18e43m+
PMb/fHmM6/jyGMfy5TG+4stjPMaXRz/Ll0e/zJdHf8GXR//Il0fc5ssjzqM8
7h+Uj0ozSn/cRcifI56HTw7y6KFlTRzxf0CXYbOulFtRvBWdH8qeO6zT8/e7
eiDmbAk9d+BFFm8Ty3Pf0nMH/mVckmeP/EJ6XsA/NG+2WPn4K3pewMvXdI1z
7/eK/i7wqnE1/dxi86g9WHeXkh0+Nzf7LtUPfjwh5FxoojPVA56VMGy3y5ZB
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
AwG3GW0=
     "], {{
       {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxNm3n8VdP3xu+55+59boM50aBBqVSI0CAlUwgNZr5f8xTKXESDWUozMhQS
mRtMmecx8xBliMxRKklIfZ+3Z3v9fn/s13rO/uxzzr777L3WetZan6bHn9l3
QLlUKvWslEq5ZKNqqXSi8NFFqTQ2lkotslJpjORJ6rtbf38499+nCz8kfJ7w
Y8IvCl8q/LLwe8LnCj8q/ILwIj3jHrU2ah+ov5XkBD3zD8nVanuqbalJXCO5
l9oatb8Sbq7+0ZJ7q1U0p031zHq698/g5/Oc8XrmR8Jf6V1BY+oK11f/KN3T
T21zXQ+RPE3tOfXfJXmK2tPCK/W3U4U3kxyn53wo+aWec5nwK8LvCx8qfKPw
ncLzhN8TXih8oPBY4cnCHYQHC18pvLfwCOHrhD8R/lL4Y8nLNLd6mvdOWuOO
+ltT9c9WfyfhLVlP1lhz6arWSNc1otfzOsmt9bczhC/Q2Nb6+zaZ5/qy+usL
X6IxPYSvUd/1GnOI8CThacKthE8XHiRcT/g//Gbhxbpnc907RLKW+g9U/5Hq
ry/8X+F+wjWFDxA+QriuvkX3zHP9VvJetSPUxqa1raf+LSUPzvz7m0gelHld
Rum3Z3rWjpLN1XdI5vltq2ceILw9e0+yb+a5BvVX1PbRdSvJ6zPjR6Kfx3pP
C/4tl6vvSuGuJf+WwzLvMdbuco17VfIDzf8K4deEPxTeU+N7sMckh6r/OfW/
pf4lur+u+i+U/Dv3M/eTvC54HVjnjTSfmZnHdQ/em7tLtlD/+MzPravrfSW/
4v3qv0D4Nclfcu+1dpLzdX2++hdI/qRWR/0/S0bd+7bk6ZLD9Pcz1F7Qez9Q
30C+u+RQ1kntefVPTLi+7l+cnsPzhquvv9qLGnNLwg31t6651/tZza2txk1R
/35qVeGi7HlPSu9toHEbSvZkzwnX0t9rlj1+Eferr6HmeYmuB6i9pHf9FKwf
0BtL1bck875povu+Sed9ldpvanuoHannXKvxN2leRwiPEr5R+HDhkcKThM8S
nio8k7Op576i6611jo6SHK3+m9W/h95bS897XH0t1A5X/8nqPyydixuEfxRu
qjFvSg4rvM/v0n0H6foK9InGHCM8TvhW4WOFxwvflns/5mq12afqv1z949Xf
W/hS4bHCfTjn6BLhg4WvFJ4o3Ev4EtZEeDe9r6aeMUd9XYR/F+4s2U3tT+Fd
JRdL/lzyt0RXLStZr/1dsc66R3KN2grhuyV/0ZilJevHdbpeLfmA5Fq1VcL3
STbRc7/mdwlfl77vn7o+TtcTJG/X3PbXmEpmXVRSay+xm/rrZN4H7AG+fw21
9TPvl6i2nvAKteVqUW2d7tlBY7tJDtb3el7P6qDvdX50/0XB338lz1C7QP3P
8d005jTJyRpzr+49U/h24RnC/YRv4bezf3PrddZhYz2ro56xg/o2Ee4k3D73
b+yc9vAb0WdwC8nuuudczjLfQvgc4eHCXYTPFL5YuJvw2cLDhHcVPgvdklvn
bae2bVrvHTOv+QF67+7CX2rsr2ktuG6ktWlY9j5vl84+32uyrrswH76x7t1F
+HPsTGbMOeWb75T5u39WsTxcY4cIPyv8pp63u/B5wpei04QHovP4juxv9G5u
2z5UeKRwp2RHLhTeWfhU4YHYAuFmetfbkiewP9R/h/qPF54oPFX4VOGbmb/w
KcI3CU/n3AmfL3yZ8PfCW6DrJB/WXC/iN2jNXwg+g9iofSruv1rj9xW+WHiE
8LbCxwkPEP5BuLGe84bkLmoD2DPq30t4kPAVwp2F+wsPFt5PeIjwNcI3C3+O
LhS+WPgZ4bnCA4Ufx2aiB3T22+u6r+TSwrb8cMmf1HYSPlhysdqOwgdJLlBr
Iryn5A9qOwj3kfxWbTtsp+T7ahtxpiW/V9teuLfkd2rthHtJfqXWWng/yRVq
JwsfK/mn2kV8D8k1hb/xaZJL1A4QPkxyudrR2GbJb9S2wTZLLkOPYdclF6m1
Ee4p+bVaW+H9JX9W6yp8SOEzuInW9mHJN3RdTnb5mWhfCD/s2WjfaXTymbDv
2La6Gldb6zcs2vZgd65PNgb7MiXZKnTLTWq/avzpfFfJP9QGC58i+Xdhu3u6
5GZqG+A/6r46wlF4kHDjqv3OY9TXUK2R+q9V/y/C/1H/UfiDajXUf5H6t6ja
VztSfVuoNVX/OPU3wucQnijcoGr/7FCeWbWfdITw2sK+whmS6wr7Cv0l/yq8
h/pJvqu2nnBnyffU1mdvSn6gtrHwrpIfqm0i3FXyI7U6wt0k5zFX4d0k32EN
hTtJfqa2pfDekh+rNRDuLvkp8xfeS7KkeV7JGRDOhUeim9ibwjfjY+C/CV+v
/guYo/CNwhfybYWvQX+xT6v2P7YV3kr4V/xO3dtMeJlwA+G2wjsG2+lthLcQ
niqcCY9AP+re+ayv8B6Sn6s1E+4huZDnCu8r+QVrzlmXfEXtEuGj9fzXhMfw
TYV/Zy8KnyT5m1p/dI/kKrUBwidKri58bk+WXKl2hvDxkp/w/YR3l3xdbSzn
CH9ZeDhnBJ0jfAH7RPhN4YrwzpJvs8eEO0rOZU2Fd5J8Xm0Q+0fjnxU+G52A
XRI+h30i/JZwwJZJvqQ2jHOn/oWZffcN1OporX7Xem6nv28u/Jdwe+F+0bZu
K85ZtJ1sLjlQrYs+c2v8ND3vC/w33XOT8GfCPwo3LttvqmbWvfeq/9Hc+uMe
4UeE/1DbSXh3uEXZ/KkGNh5dr/49sHeZ7XtTXa9OfiD+4DYav3ny70dF+29z
on9HO+FdJR/SddDfm0l+LtlNLceGJfvGb5us+SzEj839DWcKP537284Qfir3
N3xQ+ElstPAnwt/k3r/z4RbC66Ob8Nkq3sufCv/AGRb+WPhr4asqHjMv9x5/
U3h+bj36NDY/97l5Xfgj4WZl++r4XhPUP0/9i9Q/Svht4U9z69Fbhe/nmdEc
5bFovXsbPhV+aWYOBv86NDNHhouO1ph3JT/Pva/nCL+U+7y+JbwA/SX8DvY8
977oILyn5FZl8wb817Ojfa3WybfvnPw0uAAc6IFo3x4//cFo/oXPg893V8X+
yKeS6xf2H25O/j/+xlr9bQO9637h79Q/rWIfc4Hk7Mz9+IhwZ3wqfMe7kp9+
t8bX1n6eVPF3qVv1ntseHV71PttBeHrl/3yWocF7kvPVIbPvig+EzdlTso/u
mZ44wT16/sWZ9+29wptWvUfbYTs050Ua/6fkptEcHC5eR9dfpHN3VrRPurVk
y8Qd8dXbJL7C356umLPAXR5OdvC8JLvjx+l9s3W9sa7PkVzLmVH//pJTKuby
S/BLo33eVpK3Z+bsGX5f4vXw+9/03h+EVyGj1/Wv6PnCp2bClTKfubuEl2vc
Yo1ZIbmkbP9/adncivnP0Jhlya+cHu1DDkjfFL8R+7umZL71c+azugo9pL4u
kl9iKzJfL43G8Fz0Vu2y1xA9sCTd+5P+Nh9dIVm/7Gc2K1kuSRguDA9uqu88
o+zxMyX/UvuM+ZStO9AhcAD85/XL9qFZh4Xp2y1LvADdgl5BvzRJz+8m2VPP
mJX5mewD7uXbw0fWRMdLmqb1XJrWdEnCzPNP/W2XkvcG8SliAx9W/Fye/2LF
8Sz03rsVcy72PT74PL1nhPDHKUbFHmZ/gluU7DdxVjgzcJJPomVReG0Xpr1R
I3Fn9h/fs2biUHA95v3P906YOfOt4XXL0+9i3C/Rthnex3nhGbXSM+fq+kL9
rVH0nqmV9j1rTrzmK/RXWlv09vLca9wh9xy/SPOEw8Ffmutvf+hZnUve5/Ca
Zal/RTQ3bJ725K9pX8YUQ2hT8jXPiel3MA7OtCKN5zlwQGIBW5VsR5anfrg2
MaDWSe+FdJ5plcTB8xQjYkybxEN576+a044l21n0Fu/ANq3WdSf1t0wxwFVJ
r61MY5jDvGj9FAvb0N/TNybOszYzZ0c/EZ/EtmJT4OwtNaZz7rG7wOdy93VN
vJ7xYPR2NcVYaEXizj3T+rOf6av+u4YpvlQrOFZAvJTnozOJn6I3mdc6tVYl
25G/E/47/Q3MOO7Ff9grxb7WI/bA3tXfW0hmurestnXJepg4LL+VWBl/I66y
dYqBsOZwgmszx/3g4GDiDFPTPkK/wQ14HlzhxGjdmBXux6Zhy7Bv16VrOAPP
hkMQL4Uf18afjObxNfGHy54Pz+0ZrDNvrzjWgA55pGJdyFqjD7Pctq2ce13p
Z22ZJ7Er/Fz217D07u65989jFcc+2OePCr+mOeysMbfAh6LXEttXP3ieCyvm
7jem9/ZPGC6P/UVPZ8GYvi8q5kvMBf40JY1Bz38WHc+rUXhNZmnsVfASbBWx
DzhU2TpxbYo7Yv/vjz73nH90wghd19P4+oVtBTaDuZ6R1pw1fTDpbfT3zIrn
XtI8R+rehvCCwt8IX4Q5XUWMVP311N8id2y/ZW4uODF9xy7pXfwe3ntJwtgU
bOUdcMfoM4TPMDftg9tY18J7qmF0LHQQ5yR4LXg/MZzXo/2JyfzewuvZOJqv
/hPvivaJxqb9+Wb0t7k9cdmxab3YT6xBo3QvZxbuO1trcZuuH5J8Q22M8FzJ
d9VGCr8nuSD62cwXHva4+k7SPH9MMVhisc+o3aC/PSv5ktoE4ZextYX9NHIa
8OxRad6s4bi0zuPT2YV/P6l7Buv6Kcnfkm5BxwyI1oUjCn/TYWn9+b2MZ00O
SD4MPs4juv8iyUclz4j2heEmb0X3N4mOoTEH4oc9cuvMJyvWDUPTeWY833hq
9PlkT3Ev+R584ffhgblt7jPCP+LPZeb1NYN/K7HJfXLbl6eEawd/E+KX6LMh
6fevXzUXGsyej84/wFvrJh8J3+lq/f1J4ddy88vnhd8RHl44j1NTY5agvzLb
ffjiC9j6xCOeEH41N1+8T3hO7lwVua01wT45v2NXzeXAzD4PuYEZmX1FfAhi
PMQSiRkSmyFmSCxxcDDPws8clLjbY7njTMSyiNcRiyKGRhyPmBNxPOJpxJCI
VRKfJOZErI+45YXC9ws/Ljw+er3bVM2zH0Lf5v6+8L7fJPtHc41V0XsGnY/u
x4/l2+6SuD5ntRx8/tEDs5KOQpehu27gXeqvm3T76Wm/EWcidkqMDj+c79ml
aj2JHu1cxbA537MumjfP4qzl5uuz2ee5dQJ8YWU0R0aXd9S9xwlX8K31jJOj
/cmBwZwa3dyJWFG0b/u9ZB90bOZcEvE24oTEPImNEUskZrgB8QPhXsIbEs8Q
7s3ZgusLn0L8kD2t65ZVxwPuYE3UPzraT2xddWxgmvpn547xHCZ8onDdinMQ
J+WOCR0ifLxwUfGZ4mzVqPiMcFY2F95P+PDceT3ycTeElDdLdqla8Xnh3AzX
HF7SdSvNobFkX/Ufo/5Gwn2Ej05z2Ef4UOHNOJPCh+Xmb3Dnj3PHqA4VPiF3
/OlobHvuuM5JwucI98qcKyQHRuyql+RRueNhvYX/kzvec7LwucJXR+cAH42O
CZ3C/s8dc76g5PjtldG5PHJ6vTPnMcnnxTTnQ3LHbPYWPih3zOlYbFf6jcdh
Y3PHyU4QPit3bKaH8MG540PHoFNzx9hOFD47d6zuYOHjcsd+9hLumzuex7r9
N7duQc+gb06I9pO/jdbJpyXb0SVxK/IWFwbvSTgjOVF8bnIEK5NPiG+Iv4nf
iZ8Jr5mR9AbcC54Ah4Ebce9XJfvp+Ou8m3wta0Pe6/LC/exzfGZ82456f6/g
Z/cJ7m+U4jLY27uTT9Yw9eNjkw/mfBCr75C4wD+5odzfjhwZ+Wy+EXF4csnE
Q8gRkMvH7m+dbD+4VeJo8DNiC8clzgv3nZrsBbFKuHkp+W9rkw+zrmyfgLku
is65ol85eysTj4ZPr05xgD9SXgV+Rlzi+7JzMT+U7Z/hp21cOG/NnuWcoLNn
Jr19SjTHJaZF3Gs7tc3UpiQuNz/aF8En+Vzy1uRPfBodTyGusmFh/wM/5OPo
GgY4A9+beF2TFLPrk75L+5QjxkfHrsEdmqeYFL46/cR/WJuWiePALRiHnWYs
GNs/Ol2DW5ftl+O7opNbpbVFb7dNPKJVeib97OEWaQ7EeuG6f1XMZ4n/r0zP
75d8EubF+B5p/8DlOui+58vmmy+UfV42TfYYfspvJZZMnAF7OYg4UDD/u7Ni
vtY28VPm1Srxu3plc194Lt+EbxNSP/ddWTjHBrc8MPjvm6Wzyvy3TOsP/988
9bPft0h7vmGSy9N33+b/Pb9BejeyfsL/rF9aQ3L5cLa+wX1w9x7CD1fMcXcW
fqJiPrd3cPyB5zOXf3hN+kZwSvZJjSSZMzxrg6pzVxfxG6N9WnzbjaqOqw4R
nlM4J9cXu1o4d9sHG1g4V91b+PHCObyDhJ8onLc7GFtaOLfdS/ihwnn3A/H3
omOSPP/GwjnCndX3QOE89z7C9xfObffANy6cpz9A+L7C+e+9OSOF86m7wGUK
51A7C99VOM+3u/D0wrm6PYTvLJwL7I5+KJxH7Co8rXCebzfhBwvn5vcVvrtw
LnNP4dsL5z53Fb6lcO62k/AdhfOg3TinhXOHHYXvLZyD34tzXTgH3EV4vej4
MHmTGYVz9vupb1bh+oP9hScUts07oP8L29HthccW9iHaCf8WHOsmn3Vd4fqD
9vhIhf2JHYVXBsfAyeuNKWz7t1N/hr9Uco7mxcK+HTmyX4Pj5OSeVgg/UHJ+
sBwd3yYHdLXamtz8vYnwd8QTCp8TctLsa3gj9SjswY2jY90XwysL51A7qG+S
cMeKc7UzC9dM9BTeKDp2zZ68onCueqH68ui86jnq2zA69o5/Tmx4AT4Y/pX6
55ach4KfoM+IvVSi89fn0hddkzOIvEp0Hc55hTkwfBHeiH7fI+keYl7o1G9S
P/ofmwoH4Jyhh+B+6FR0GOOJlREvwT8k7vVzdPyOM4fOwJ8kJzIrOkZBPOHO
aC6NzkNfwoXJj1MXR8wd35g4AvyaehJyiDtUzW3gLfB08uDUKcHt26Tx2Ghs
Q+/g2Me/cX1iJcSAiEkwN3QwMRi4Nnlw8pXE7felzqlqPYPORxdtXzUnZDzx
3g3Rq8G1OG3TGrKe6FpsAu9F12Ir8G2wrdOi+eyYZOMeLlxbQ46VeObIZBOp
mdsqrTmxshHJ9u1cta/DOs8LrosjT02edorwfbljGhOSPf1IY8aUnLOGm70i
fH7h/DBn4XWNrxVduzVQ/a8W5njkH8nLUGdGnndpcP6L/CA8qGXmnO9ThetI
yDtTmwiPg8/hl5DjwOfYqHA9xW5V57yoSyPXTL6as/aE7vs6eP7kHL8NzgGR
l1wYXP9ALm5JcG0kecwvgmsFyel/E5xLIqeJjcCmYLNGF/bjt9U71wVzTzjo
Z8J3lqy3Pw3mFOj5B4P9cGoVZgT72NQkUI/Iu97RvT8Ec6jDNP7HYA5I7nJW
cI0HfveCYP6CvVgdzH/Jky7GhpWc3/w9mDuT0/wymKvyG78K5sXYkUXB3PMQ
bEpw/Qb24rHgOhP0Lbxps8x5+SvU37NkXUetBHU1Q9mnVec70UVHacyysuN4
dwf77dQtfB/MEw/VvfcE+//UPMwJrm9B598f7P9Ta/FAsJ9PbcYNhWtKqM34
Q/0vlpyDnhnMR6jxmBtc+4Rdeyq4dgu78GRwTRe27I3gGjBs3CvB9WbYoNeD
68SwKW8LX1+y7fgwuH4J2/pEcN0XdvCD4Pol7CY1mtTDvKX5vR9cV4OteTO4
3gab+1ZwHQ627+ngejPs3fzgWjhs/SfB9VHY9OXBMRDy3dTpsiff0/OXpT1G
XhveulXmOopng+vTsJUvBtfaYYufCa6FwxZflbtWZ66e85z6ryrZLr8UXKeH
TX85uH4Pm355MIdlb18WzDe3Eb5P+PiSa2CoowGfmbveFJ4L34XP1stcW3IH
3L5ku0m9X4PM9SG3qP+gkusiqN97Vfd9KTklmF9ThzBR+MiS7fWtwdyWOoTb
grk59Qmzg3ko5+LmYC4Jp7wpmAOCp6azgx2/pnBNWxvhOtF53qHqWxtcU0Rt
xt/BOV/qRogZoXOoJ6Fml5qr1/XMkbqmrq6tnnFjMHemjuLR4PolbPG1hWME
rBv8n/WhJmRYcDyHGoZJwRyc+ofJwXyWGpKJhWMB1CmNC+bRxACmB/N66oLg
5tTmUotF7SM1kNQjUbvE2h4L/wuOGVLrMq5wfIS6plfVP7zkWql7CteZUZs0
NDo+QE3xqOBYBH4RNUeMvzZ3HRM6/xbhyYXr6qhHoq4EP+GT3HWAxAmJFw4J
jsmwVmODeT31MxOC4zP4YMOD41rUY4wJjhVQb3NJcIyLGo9rg3PN1OeMD47J
sCbXBOd8qeEZHRwHoG7n6mBeTn3OxcExIr47dYxwSGqEz42O+5Erhgvhh+Cf
vJfsAr4TPB07vEnVtrlGstXUllOfjD0ip0ANMDU5+Ar4DNTQ/ZNPzRwnIF75
csn14Nh+8nb4As8UrotF58Nnia0RYyMfQU66QbC9gy8znhpyYmKcGeq60c/f
SF5aOL7evOo8C/FqfLxpyTcgp03dab/0G6gn5zx+J7lx1XlxzgL5DDg++Q1q
GYm3bxocMybX1F5jny5c04k+p0YTTl0Nrjkn/oMeYC+Rj61fdS0B/hv8lBpO
xrar2lelXpwzRc5iUnoXvO6X5CuC4XrLks+H77dd8pfh2dQL4zfCWcmvEruf
U3YsH/7ZLPXD8WLigfQvTnyR3PHM9I2IjfZPv531JIZALIFY6oD0LfCNGgX7
SozHv8UfI5e/NM2TmnP2/9cV7zFqtOtVnT+Du7OWnYJzlviQTxaui8UWc545
1+hqcs/koKnpouaBepJ9gnklv4/asWrVdTD4XfxfALr324pjSeRh4cz8Dwg2
pEnV9RbEtPhfBv6/Azvyk2QpOpaID1Oj6hodfDb+HwR/7GfJxvgPmf1XalQ4
L5wb6k/47cQG8JvJc+JHE2fmXbyzUnWNDlyD3GHTtCepX8NXJwdIvvDfXDF1
0aemtV4bHR8g5oyPTQyMPCt5gY9Yp6rzK8RCeH/NqmuS4CPE/jZNsQ24ARyB
WpRqdAycejPOJjEwagv5PxTqgnhurLoeCC7Dvq+dzsG4NJ5cRKi6HggeVETX
tFAX9z9JSgle
           "]], Polygon3DBox[CompressedData["
1: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
sr6Csd/oL14SW/QJ+oalSmKJPkhftAftPvAzddb3C2181Qac/wa5TS984aU6
178n+BHwi3XW/+7ge8FP19lvL7aJFRty/I3Y3pQDgbcA3w7ehXYX+Ik6z2+l
NtqaOYD50VNtrndt5o+Qu7WJ/euArwPP3Yt/0c8Yr7cGX2Us4nyj6G/VS759
M/gX+l8z79YqXGKw+R34DPDm4NuwP9/meawPHtlL/qFvXg98PXgY7XbwI3XW
807uYWNhHX67Yy/nf6gOn5qnjZZiTDQ27sbYPdifquMPdgXfDX6yzn75yv2h
HsLYViX+5n79Bb//GHN74Af0B+DHwfOCt6vCOeWec7gH1XOa6H+/l8Qqc7sJ
wPOXxGJjprFzSfDRVTiV3GqJkucrB5GLLFAS243hxvJ5SritHFYuu3TJ+pCT
yE3UqNSq1Iiu118w1vQl9sovXmuj1QzFdgu218GngzcD39qLn9ffqyncwdjV
4M2wz07/LOyvtom1m4JvBs/VS/wxDsnf/sv/4dj3wf4Atm/BV4P3Bt/fC++U
f6qZ3NRE41PrU/MYE9t2zBkh1+J+fpcLN9GTzNHN1Xcr0U7Ncc11fSdyaWOC
78o1emmdNeXa/a6LZ16z1z4IPKiOjz6+RCOVz6uxyd+PbsK99Zl/+07s74Kf
r/LujXnP1VkDxkJ93LN11oi+b2CJrzZfGauXNe5alz+fgm0yxiatEzOOBe9B
m6AvmoDagDmGuYZje5ZoBGoF3vPuJTnyXPKrvuTOZ5ZoXevTRiv5zU94th/3
51pOLvntvzUn33VJbqimpbalBvgec9/tjzaoBq0WLQc/uI3mvmzH5w5p47P1
Tfoofblr6Lo6nNq1ZQ5xbx0fb24hZ7+tzpqQy5tT3FcnRphryMHNTcxR5OZP
d/zR/OrQjq+6t9xjN7TRNNU21Tyva6NJqU1tBR7RRsNSy1KzurbNGnwUfEeV
tbmv+mdfNLdvStakvkSf4lo1p7i1zpo119BH3lAn59J36qNG1smR9F3umevr
5FDuJfeEWsTF3Xrbpokv1Ce+28aHqVWqqejb9MlX1clx9NX6+Cvr5Dj6fn3g
Fe79Kr7RnO/+OhzMXHAgeKI6nOJofUWJVqQGqRY5KfbxsU8BPrJEk7mg43ev
YJ+ZsbH7wsnk2jPSxuyLD5D7qVk+0qRGoJappvkAePEq51eje6iJRqV2d0uJ
dji4L3x4lhKtckLaXvRvLtFO3dPGR2PELd3z9vnfWqIlyrGOK4kZN3fP75s2
PkHfIOf8sY3mM6Jbf64fNZ5ru+f/cRsNSS1JDeij7n1c0T1f3+/33fs4t3s/
xpCHu/WgdvJntz5HduvdmGJsMeaYu8t57+7W709tYryxXh/2QxtNXm1+G/D1
bTTe+5rEF7XfaUv0PHOwG7v357O9Xg5ZUsMyhk1fpbY1MW2Dvmj2Z9GfijZ5
FQ3oKfO3ktrAwuAn6U83IDWJBcGHcS1HlGidatK+z0NLaj9qrr4/axLqjK6h
g0p8ir7la8ZeauKv5uqu96aS/FCtTc1ti5Ka2FDO81p/amVTe01VNLAvzSVp
U4AXlUOX+HPrZasaM0v0vQVpS3h9JZr8QuAl+6LV31aibcupT6D/aYl2asw1
XqvRv9BEs9C/qbE/5zuv4v+s8aihmX9Y+7HGYSw1ppoPq5mc1OV/5j9q3Grd
W4CvAb8AHlKnxnQieIEmdQDXtGtbTi+3dw+4F85qo29bW3u4yxnMHY7r9r/X
Zy1Ajfyk7vqtNajZn9btP2sHaqaHl+w3tXE11UNK8s8nm+Tf5q897C83iQnG
BnMScxP3lHtLTiI3mbpKrVLNwzzQfFBt5kHu7zHu707s3zF+l3wLfA34g47j
yfXMP9VqjPnGfvNNtRzXk75A3dr7fYPjh9apCZ7fJp7d22QN7ddxErmJ+oB6
h+vvwSY1Umtlaki3NuH8akv6H2sr1pQOAP/Rhv+qdb7YRGNVa3WNHd4L51q5
jZ4uF5unq7GswPHXgOcfEM1DffWeEs1c7dwYsV9J/H6+CYeVu5rjmOuYY5gb
meOZ67kmXZvmeOZ6+ndrTWpscp6CfduS/W+tx5rcPu79AanxLA8eXpJjy8HG
Au9ckoMNAC/Ul9zM/dxro8dODn6lSQ3vvSq53VwDUhOwXnxvyfNTN5KjbV+i
Mag16PN3Kcmp1m9TEzTXWrzLAdzT7u3FupxdH75rican1tcDb9c9r/ub7GH5
mPZbmtTQ1QZdE64Nc4QdSmpC1oasAV3ZpuZj7cea0RXg93qpSbtnDu6lRm2t
Wv3u4jbfBPhtgDXVc9rUqK1VW9O+qE3N2dqzNesL2uiP5srmoOai1mCtxapf
q0daE1cfVC9UD7bGba3bGviFbWpU1qqGgq9qUxO2NixHO65NDdpa9PLgk9vU
1NQ75cxyZ/2ftRFrJH+U1MCtha+A/ZQ2NXRr6erH6pPqleae5qDql34T4TcD
8sNj29SwzUXNSdXfrXFb614OfFKbbyD8FsJvKM4GP9pLfv5EJUHGt4APAu9a
Ra80R368Tg5o7iw/er8vOdDXJTHKWPV+x5d+4PjhdWo0H3br++YmMUxt2ff3
aJMYY6zRp+hbrEGpBz5hzlJH8z2ojX6gvmMObS6tT9G3qMnuSP9X5t9RJ4f+
nvlfg0+so7c+qt9hjlqbnGVYt3/ubMLnR3Xr954m3xzIb77l+PPr1KhebuMT
9A3W3D4r0V/1RWq0arXuD7UHayTWShraR/Q/pI3Ty366q0kNSS1v6l50SXO+
zYyP4J3r1EyHd/zb2KSu/mKnyTzS8VPzDd+J72aJJvqXa8y1PlaTtafvNtYZ
H42T5uD/qZPTm5v7jcoldXI6v13RR/g9ghxA3zGkhLvKWeWu65dwSTm53FwN
aNNuv6gNyfld202TXGBQyfco5iDmImuWcF9zAHMB65neu/VQv9Uxh3Bt1k1y
i01LcilzNnM36+1/f39R5XsC9WLzVeO9cd/vX6xtmu/4myuW5Hbeo/fq9yKj
qvhHvz/xe4yfq/Adv79wj+kbJmyy99Yt4XJyOnMPY7ixabwmsV2eI995qcr3
BeZE5kZqUPpHcypzK9eAa2F18AVVOLxc3pzFvd02yWXMmQ+sozHqD/y+w++T
9LfWq8053fulSS46lPO9UCXnNPdUMxvW+RP9l3te3zV2E1/wz5LYbI5lrmWM
9nq2bxK71yvJtczJzM3kFuZ+DzN2mLygJDcz5zH3Wask1zHHMddZG3x5lRzI
XEgfp2+coInv0+foa8dv4ov8HsL6pfHO/F692b1sfFN/lzPKHfUX5rdyLmsR
8zXhYnKdIV2+P1MTriM3Nf8YaJ5RkiuZI5krrQz+d5U94F5YpYTLy+nNteQK
5kJyktHpL1+if1gzsHawakkuYE5griVH93uBeZtwd3NKvweYu0muuWHJXnXP
mjvqY41dg5r43o1LtABzZHNlY5SxbvImsWsTOVYVDUEt4aU29buNsN9kbCrR
FtQU1BbUIx7t+Jj+25zX7xvmaZILr1GS+5gDmXua8/p9wlxNcmHXnGvvH01i
k5rpmnU0TLXU4Z2/maOJrzIGGWsnahKbrGfou+VL1ivkLubO5ih/1vHhcuH+
Jr59ZAmXlw9sTX+lEt+kJqM2s0KJb/KbIb8dMqZaD5+tSayVA/g90CxNuIGc
Su6+ZROutVyJlqOmY61C7qy2oU/dnf4G2G+qkiObK8vZ/X5jziZcXg789/cx
TbixHMTvjWZtwk3k7NZylm/C5eVQM1apJcmtjMHG1jGbxGZr3ta+1VDUUsxh
zR33apLbqgFcDN6kiRYlBzYWDO64sTVva99q9n6LaE3c2rg1C79VVAN2Lbmm
1LfeL8md3pETD0iN2VqzNRa/RVTzVfu9r0rtRY1TrVNN2FqIGqdapxqotQI5
7wxVaktyYfMHvyGQUx/SS83Z2rMau98ymjOYO+ijfb/GZLnDfk1itTmbsWlw
lXzQnE1f7jFblmjMas1qrmr35vTm0ns2yfWnK/Ed1pTlj9OXcE1ryvJ/94B7
4Zgm3EbOZm49fRMuZ03D2GKMkQ8vU6J/W/Oz9mfNwlq8eqG1DDUQtYF/NdFG
zBfUas0pj+iFX+uL9cnm23IGuc/GTbiE+arfofxgTQ88Uwl3t6YnH3ikTT1n
VeZfhf3tktzcbybfKuEwcpHVmnAbv3Gw9vR5f759kGPINXZu8z3GmyWxzpj+
Rkm+43cSfi/htyavlsRKvxl5pURfsNas5io/k18cgm3xJlzw9ZJYaUx/raSG
8UrHF+VjcuSh9Kdowp3l4FuDp2vCzdUb1To/5RoH9+LDrq4Tg/Rt3vN5dXyc
z8Ia2wl1nom1N3Mw47far7nZNCX1YmO/ub85rLHKNenaNCc13u3bJFf1+ze/
z/GZq1erX8n91HT9VkNNSG1mWBOtyBxhK/C0TXIHNSG1mh2baEU+Y5+137T4
bYuakNrT1k20IjmvXHSHJlx4hhKtUs3S2rc5h1rB1E1yEXNBtQp9zuV1NCm1
q52aaFVqAWpd+hzryBt161ufr3ap5uRePqiJFmWur7Zmfck6k5qTe/vAJlqU
PkHfoCb0XkkN1Fqsera1UWtE1ooerVI7/XtNNdGsXWtqVu7N/ZtoWdaYrDU9
VqV25venak1+b2N9QY5vbDZnk/ubw8q/rOWa25pDbQmepklupWan7zmgiZY3
X4l24b1YO/t/v+n6uA==
           "]], Polygon3DBox[CompressedData["
1:eJwt13nYllMaAPC373vft0QodVliKlmHmVKyJtokRdpIaVUppZKkPVSUUigS
bWqMGqVlStG+0I4o2uxcEg2jmcGMZuZ3X+f9476+5/ye+5zneZ/zPOfcX5Uu
fVv0KcpkMjtETlyfz2QaZDOZ0cWZzEPa62B9djN7go1gb7FGrDl7mo2O/qwe
a8zGseFsM2vImrFJ7FG2jd3MWrEp7HH2DmvC7mBT2Xi2mzVmLdlk9hjbxeqw
+mwUG8jWslvYnWwae5J9wJqyNux5NoG9z25kt7Gn2Ci2nd3EWrBn2Bi2kzUo
mclUYh1ZJ3FAu668m9hY7WHyNsm7gTVkY9ggtp61Yj3YPDadfc7msiUe8mKx
v0Qm8512LXGVvG2it7xl8v6cS8cXsy1ipOt2Fvc6/ovxXhXHtP8oHjTOfuN1
0qdaqUzmAuP95nz9mET+s/Y7+lWVV5GfJf4kzuXH/G0ir4K849q/E4PlbdBe
L0ob/xx2lqFqyi0ld3vMD29qzAnxnMVR7dbiOjY83g3xvXZtcSq7Tbu5eF/7
G/2rGe9f2jcbbzQrzfayZ+TuFQ+ze8Rgx2/Ie1P8qr1du5L7q6BdPt4F0UDf
Jny845HGeNuYV7Cr2WB2H1vOJrFX4vmy3TH32kfEYuM1YZvYiLg3cYLjxqy2
/DH6VmensGbxXNkEdhk7nd0Rv4NNZn3d41i2lW0TJcxHDXlnsDbxrOVNkbdV
+xzXLcfKxvclLpd3Ib/HcVt5c+XVZBew7uxONifm2DV+1r5OfGaM7+VczkrI
q8vqie3aJ4ll5vAefc4Uo7SvzKZnFs/utHjP9a3uHrvEPckdVCLNb8x5HG9h
b4sT9L013jf9++jXV3wd48m7hg3R7uP+Xo9vn5/NerEO7Hl2nbx67FH2IFvD
KrEhrrHK+G+KE/WbzTY53liU3sMd2hfFNfRppO8qY/TNp/f+B+3q4gp5W2Nd
ivdTlBQV2HF/X+JrjLW6KF1rZz5dJ673hniRfcbasXbGfjG+VfFDyfTuxzew
TkyV94m8jc5VFpXE+ewBfcqVTPdwKObY7yqrfafzJ4rS4nTnSjs3R/8Vxnpd
DGW7tM+PufPbbpD3upye2pXz6fzyojR/MY/nsZqxJstbLq9HPs1JzM1bYnJc
P9Yb508WZcSZ7Ey5L4kf5fxQlL7z+N576zuafyDvbeP+xu5jY9getoUdZy3Z
5YU1NuZtEWvBahbmcgB7jTVnNdgj7AG2MNY/Vquwf8T6vLjwfYxj+9hHcR3t
fuIJtr847T0l4rey/8S3HfPLerMBbKK8j9m7sUex/mwCO8h2seJ8+pbimzpV
VPQMLnL+AXlP+nuIvSMvK+9BNpl9UZzWnliD7mfj2QG2M5ZPdrG41vFNbLVz
/bTPjuvEHHqeO0Up/WbEGuZ4jxjo3Dbtw+I1xzl9s6Jz7E9x38ZZqv2ycY94
LnexkWwdW8p+Zu3Zw2w9+yv7hXVgj7ANbBn7lbWNe2ErYl9gP7I7WD+2mM1l
h2Mu2d1sLnuOHYq5ZF3i3WTPsoMxl6xzvDdsCjvASvh9x/yun8QR1lXO7aKv
vEXy5rBv5LWLdYOtZAvY31lr1pPNZzPYF6wZ68hmsWfYPnYb68Rms8lsP2sT
c8KWxJ7FvmUPsXxxeqbxbL+NscQkee+yjfJKxljiKfZerO2sVPTzO/b5DR+J
cfp+yEqy97V3i/FsX6yJ7Bf96oimbAn7Qsx2vLQo7eGxl08XBx0fKEr7cKxD
FcWPMde5NG6MH+9HvCc7xCR5B6L+YJfFXie3v/tbIH+346qxN4sL5T3q/Of5
tE6tLErrR6wjB/NpnO3a28Qs7Y/yhd9UlN7DeB8/FeWN+7FxKmbSGjZFnFe4
TlxvT3xT+bSGbC5K62+swzXc379jvxO19O3F9ufTM3pPzrtiZtQu8X0YY2js
C/JW5NJ1Y81cK6et9pj4/XKqsDNiTYz3LfYwXo53dtxS3yej1mPnswGsO5sd
dWfUIVEfsY5sWqE2q5xNe1HsSVO0G4oq8Y1qd5E3Pb4t1p4tYDPZ3qj/2Lns
fnY3m8FqsWLWItYdNoJ1ZN2yqWaI2mFC7EXi+qjJCvP2prwr5eVYK3YjeziX
ap+y2VQ3Rv34dOyh+rZlL2hPlLcnahWeZS1ZQzYyl/bzomyqmaJ2mqD9+3yq
R6IuWRv3rt2IV3Xcn3V1bmbUsbFfxJrHurFZrCvrw9awRezrXKqvhmRTnRL1
yibtHmIo2x5rnbyf5HWLGpNtZivY0VyqRXtlU10W9dlq7T/Et5RN+3Ts16Ny
aV+9K5vq1ahbl2l3FwPZW9or5f1NXqdwtpzNi/c01jV2O3uZPc+eMH4ddhrr
wlqxifLqsorsXtaeTWXXs/LsbtaaTYoanVVgXdnt7CnWkw1jO9gadox1Yb3Z
KraQfcmuZSez9jEfcS/s6qixWDt2KxsbaxN7ln0V+xs7KdZD9hz7mu1jZQr1
8y3ZVGtEzTFfu028H2yG9iR5W4y3NJ/Wn1iH1sWcag+UN8Xxl+xDeSdGPSRK
ZdMeFXvV6Fyqx+tkU30edfoM7WaieuHdvV/eq/H/FrukUMNFrfxK/M/ELi18
01HXzYv/rWKO2bDCdz4/l2rCatlU70fdPzVqfvdSt1ALRH2wWl4f/ljU9vGu
sf+ya1gZdhdrxsaxS/T9X3Gqc6LeGcaO5lOdG/XuhrjPqPXieyjU9/F/Uvy/
dC8bznbG98H+EXso68AWslnsQ3YVy7PWrBF7JOYyvq3Cb+vHVsacsxsK63PU
NKvYpfkoHlK9FnXbcNbLeCPYrpgj9k82POoB9j37hJ0W/1exaewwO8BOyae9
K/aw2my9c4OiJpb3guNv2UF5p0Y9yF5kR9ghVpYNY9PZd+xjVo6NYDPZUfYp
Kx97PruPrY79kn3l/v4PsCX+DA==
           "]], 
          Polygon3DBox[{{1663, 780, 779, 857, 1220, 1664}, {1677, 798, 797, 
           947, 1232, 1678}, {1878, 1094, 917, 791, 790, 1671}, {1694, 719, 
           718, 1286, 1287, 1922}, {1681, 801, 800, 962, 1234, 1682}, {1666, 
           783, 782, 872, 1222, 1667}, {1659, 777, 776, 842, 1218, 1660}, {
           1886, 1124, 947, 797, 796, 1675}, {1841, 1017, 834, 833, 1207, 
           1642}, {1881, 1109, 932, 794, 793, 1673}}]}]}, {}, 
       {GrayLevel[0.82], EdgeForm[None], 
        GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
           "],
           VertexColors->None], Polygon3DBox[CompressedData["
1:eJwtlVlslVUUhc/d9/731gEUeYA3wzx0gFbjG6JR44QxYRRKWymCUNFKrbHo
i6DSJs5RyxAjhMkBgg/GRKvRmDAEo1ZFH9T4JIYQFSWIiMTot1jnYedf6+zz
n2HvtfcZ19k994FIKa3HKljUUuoppdSGfVhNqVyk1A0+hu8kE44xtivzTnAD
81ezQANjg/BJzP8YzCc1llOqx38v/gPw8wxOhrfB18HfgU+EL4a3wgfhY1jj
CnA9/46rS2mYsQH43cyZytytfJez/jnG7gBvwTrhZ+FzwJuxZfAz8NvBs7GH
4O1YX15jGd9NyWs3YEfwHcbqi3xHfBvgl8GnM38F899l7Ff4JHgrvAu+Gz4F
3hE+4ydwBfN3cC//bwCfY71/4XeCV+Efi63EN5KxMeCRhfeaiX3H3Bb4UfB5
/PvhD8NHwefx/+ia4/sR/Df8Oypebxv8P/g/8A744+E9FoPbsXXwDviovJ/y
vSTfby4kwD9gb4KfD59X/78AfjZ8lhXw58A7sCvhJ+B7wa9hR+Ej+O7D+llz
FnwheALnHU8OC8bWMn8suZ0KPgg+xZzTnPdv7B74NyXfdxr+OuUbPj3n56Lk
nDYW1sgc+F1h7TTVWaO6z/tV79eAdlrg6/F34esJ62MReJ7iCW6WLsDzC+ut
Bd4D3h2Ot+64C3x9ODY/w28EtzGnP6yvvzjvWvh94f207zXYrJJzovyqXvTv
5dhP4Lf457OSNav/ZcIDee198OGSNX4W/HRY64rRM2GNqXbaw9rbFI7VacZu
C8dUsR3I+e7DmuDz8Y2vuaZV2xsV86prQrXRj72UNXZD+J8L2iu81ithLamG
VQsrw7X9Z97vUM6X9KtcXsrY1cSiCX5x8p1n5PspF5/DmwtrYnRy7JS7b6s+
207mza5zze3R/cO1qDH5pP9yzXrR3gewyeAzFcfiSNbLNOYsD6/xo2qL9Z/C
9wt8K3hG2f9Kk1MK61O1wm8XuHqaeteqcK9bUDjej8LvBw/jfwJ+nDmbqz7b
xtw/T4FnMueS5JzqvoPheCpm3eEep17XzNihqs93Vckx+Rr8cjg36inqLV8x
9iT8BHxL1ZqXnk+WXQsLC9fKY8xdk8+ntTXni6r/l1al+S+rjrv2uiWs5bcr
rvde+OrCepXWP835a6z5PVDNab8Jhd+NIcYmFo6BYvFgvs/2is/6XvZ/wNjS
knOg+0mDL7LXI2Ft6j6qZcVU570u3EuVE/WxIcZaS46Bzq8cKpd6sw5XrfEF
4R7Ul/Wl3qM9tbfeHPXupeG36KbI/QB/V7in6y1aEu71e8K99Xv8b4TfPL0P
isFB8M2R+0fJfUAa09vSGdZeL/x4yW+m6l89cVG4h6lXak2tnbDXw/Eayuf9
o+L3ULHUnXV3vSGvhvux3hbN0VzdsVK4J6s3q6fvzD15RH6ft+UYK9bXht96
aVRa1Zut9+TWsB6kwTXg/wEQPvx2
           "],
           VertexColors->None], 
          Polygon3DBox[{{1274, 255, 592, 669, 1369}, {1794, 574, 560, 307, 
           1735}, {1749, 1296, 1379, 657, 1748}, {1795, 621, 658, 1296, 
           2111}, {1364, 582, 618, 305, 811}, {1837, 1006, 810, 229, 1733}, {
           1689, 233, 1284, 1285, 1921}, {1199, 590, 667, 356, 1272}, {1363, 
           578, 580, 229, 810}, {1795, 237, 371, 641, 1823}, {1271, 355, 650, 
           649, 1367}, {1366, 646, 645, 243, 1269}, {1365, 644, 643, 241, 
           1268}},
           VertexColors->None]}]}, {}}, {
       {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl01lLFWEcB+BXW2yzBT+ApGWZZlZqq+17ttmeZWVWZqUtWtq+22Z72r5r
Rd1FEARBEARBFAhBF10FttA36KbnpYvn/H7/d+bMmTkz07esurgqIYTwm3Yl
9hc+2uUPWdMphN56SmIIieZfpJr7yFrbcvQ6WSgbZJFskiWyRVbG48l6+Vae
lJ9ks/wmW+Uf+VL+le/i9zuHkO34yX6zzZzZIYQ7+nPusonspBAqZCEbyTJv
kGNZzyBzuRzDOjLNZXI0axloXiNHsZoB5lI5klVkmFfKEZTQ37xCFrCcfuZl
Mp+lpJuXyDwWk2ZeJO8zmRTzQtnCI+7xgGc8pJinTGQKk9jp/xgqp1LJNHZY
Gyans5nt5hlyODPZQi7j2M3FeP32uSS3kuo8Dsvx1HGZctuvyCqOMIF6Sq1f
lU1Uc5Rj8TjW98hmZrGN45yIv2/bXnmN2fH8aIj/abz3ch/XKYrXEq/L+il5
mv3cYE68ds5wlgPcZG689/avkY2c4yC3qLA+T9ZyngscivfW+m05n1208oTH
LCA+8D/ppX6XhRR43nqav+j5erLepufpPfTPeneZ69gf9W56jv5B76pn6e/1
LnpGfKb1Ib6bFN8BPUf3iIc3+mDdLuG13lGmG17plkNafC/0eJpfbcxN+P+O
/gOHT2SY
         "]], Line3DBox[CompressedData["
1:eJwl08dOVFEcwOEzDE1FUBxHUUSwJ4b4Ar6BO3eiCyVRY0zAleEFjC9gfAHj
xsSGvaPYCyrSGXpv9oZi+U5YfPmd/7l3zszAnYrq2p01iRBCNwVZIZTpXG4I
xdZnOcd5LnCRei5xMCeEy3qFq1zjOvvt39Cb3OI2d6iyf1fv0cB9HtDIQx7x
mCc8pdr9z/Q5L3jJKw7bb9LXvOEtzeyz/05baKWNdjrY61qndtFNhh5q7Pdq
H/0MMEit/SEdZoRRyvNCGNNxjrg+oZNMMc0M7/nAR3a755N+5gt7zF/1G9/5
wQF7P3WWX/xmjj/85R8hGUKCLJJU+BzZmkMuKXOe5rOA5eaFuogC0ubFWkgR
K8xLdCnFrDQvi+fE11JiTsf74jVWmUtiWR2ZS3UNZZSa12p5/Gxx37xO17Mh
3mPeqJvYzBbOxL+zh24r/eYWX7PSesC61XpQ23RI23VYO3REO3VUx+iyHk/O
P7sTmtFJ7dEp7dVp7dMZ7deO7BC2ea/C+P+OZ1rvIu2Zbzbna6POxuc7nqen
NaMntUmPa4PWab0e0lNapSd0hx7T7XrUeSnnV1qnvGdRYv539h89Wn9k
         "]]}, {
        Line3DBox[{1413, 1583, 1935, 1412, 1582, 1934, 1411, 1581, 1933, 1410,
          1998, 1848, 1409, 1997, 1847, 1408, 1996, 1846, 1407, 1995, 1845, 
         1406, 1994, 1844, 1932, 1405, 1580, 1931, 1404, 1579, 1930, 1403, 
         1653, 1716, 1652, 1402, 2073, 1651, 1714, 1650, 1401, 2103, 1658, 
         1773, 1657, 1774, 1399, 2086, 1656, 1769, 1655, 1812}], 
        Line3DBox[{1428, 1586, 1939, 1427, 1585, 1938, 1426, 1046, 1425, 2006,
          1856, 1424, 2005, 1855, 1423, 2004, 1854, 1422, 2003, 1853, 1421, 
         2002, 1852, 1937, 1420, 1584, 1936, 1419, 2001, 1851, 1418, 2000, 
         1850, 1417, 1999, 1849, 1416, 2074, 1662, 1770, 1661, 1414, 2087, 
         1660, 1659, 1813}], 
        Line3DBox[{1443, 1588, 1942, 1442, 1587, 1941, 1441, 2015, 1865, 1440,
          2014, 1864, 1439, 2013, 1863, 1438, 2012, 1862, 1437, 2011, 1861, 
         1436, 2010, 1860, 1940, 1435, 1054, 1434, 2009, 1859, 1433, 2008, 
         1858, 1432, 2007, 1857, 1431, 1221, 1665, 1429, 2088, 1664, 1663, 
         1814}], Line3DBox[{1458, 1078, 1457, 2027, 1876, 1456, 2026, 1875, 
         1455, 2025, 1874, 1454, 2024, 1873, 1453, 2023, 1872, 1452, 2022, 
         1871, 1451, 2021, 1870, 1943, 1450, 2020, 1869, 1449, 2019, 1868, 
         1448, 2018, 1867, 1447, 2017, 1866, 1446, 1919, 2016, 1668, 1444, 
         2089, 1667, 1666, 1815}], 
        Line3DBox[{120, 901, 119, 900, 118, 899, 117, 898, 116, 897, 115, 896,
          114, 895, 113, 894, 893, 112, 892, 111, 891, 110, 890, 109, 889, 
         108, 888, 107, 887, 785}], 
        Line3DBox[{1472, 1600, 1956, 1471, 1599, 1955, 1470, 1598, 1954, 1469,
          1597, 1953, 1468, 1596, 1952, 1467, 1595, 1951, 1466, 1594, 1950, 
         1465, 2028, 1877, 1949, 1464, 1593, 1948, 1463, 1592, 1947, 1462, 
         1591, 1946, 1461, 1590, 1945, 1460, 1589, 1944, 1670, 1717, 1079, 
         1669, 1816}], 
        Line3DBox[{1486, 1610, 1967, 1485, 1609, 1966, 1484, 1608, 1965, 1483,
          1607, 1964, 1482, 1606, 1963, 1481, 1605, 1962, 1480, 2030, 1880, 
         1479, 2029, 1879, 1961, 1478, 1604, 1960, 1477, 1603, 1959, 1476, 
         1602, 1958, 1475, 1601, 1957, 1474, 1095, 1672, 1718, 2075, 1878, 
         1671, 1817}], 
        Line3DBox[{1500, 1619, 1977, 1499, 1618, 1976, 1498, 1617, 1975, 1497,
          1616, 1974, 1496, 1615, 1973, 1495, 2033, 1885, 1494, 2032, 1884, 
         1493, 2031, 1883, 1972, 1492, 1614, 1971, 1491, 1613, 1970, 1490, 
         1612, 1969, 1489, 1611, 1968, 1488, 2077, 1882, 1674, 1719, 2076, 
         1881, 1673, 1818}], 
        Line3DBox[{1514, 1625, 1984, 1513, 1624, 1983, 1512, 1623, 1982, 1511,
          1622, 1981, 1510, 2038, 1892, 1509, 2037, 1891, 1508, 2036, 1890, 
         1507, 2035, 1889, 1980, 1506, 1621, 1979, 1505, 1620, 1978, 1504, 
         1127, 1503, 2034, 1888, 1502, 2079, 1887, 1676, 1720, 2078, 1886, 
         1675, 1819}], 
        Line3DBox[{1529, 1630, 1990, 1528, 1629, 1989, 1527, 1628, 1988, 1526,
          2045, 1899, 1525, 2044, 1898, 1524, 2043, 1897, 1523, 2042, 1896, 
         1522, 2041, 1895, 1987, 1521, 1627, 1986, 1520, 1626, 1985, 1519, 
         2040, 1894, 1518, 2039, 1893, 1517, 2080, 1680, 1679, 1515, 2090, 
         1678, 1677, 1820}], 
        Line3DBox[{1544, 1632, 1993, 1543, 1631, 1992, 1542, 2054, 1908, 1541,
          2053, 1907, 1540, 2052, 1906, 1539, 2051, 1905, 1538, 2050, 1904, 
         1537, 2049, 1903, 1991, 1536, 1159, 1535, 2048, 1902, 1534, 2047, 
         1901, 1533, 2046, 1900, 1532, 1235, 1683, 1530, 2091, 1682, 1681, 
         1821}], Line3DBox[{1558, 1687, 1238, 1557, 2066, 1918, 1556, 2065, 
         1917, 1555, 2064, 1916, 1554, 2063, 1915, 1553, 2062, 1914, 1552, 
         2061, 1913, 1551, 2060, 1175, 1550, 2059, 1912, 1549, 2058, 1911, 
         1548, 2057, 1910, 1547, 2056, 1909, 1546, 1920, 2055, 1685, 1545, 
         1236, 1684, 1822}], 
        Line3DBox[{532, 478, 1712, 418, 2093, 1732, 385, 1711, 414, 1731, 384,
          1710, 1927, 410, 1730, 383, 1709, 406, 1729, 382, 2099, 1708, 402, 
         1728, 381, 2098, 1707, 398, 1727, 2097, 380, 1706, 394, 1726, 2102, 
         423, 1705, 484, 2092, 1725, 422, 1704, 540, 1777, 496, 1703, 1926, 
         537, 1775, 491, 1702, 534, 1789, 1570, 2085, 1701, 1636, 1793, 1010, 
         1700, 1635, 1765, 2110, 527, 1766, 433, 766}], 
        Line3DBox[{1654, 1578, 1649, 2109, 1786, 1577, 1648, 2108, 1785, 1576,
          1647, 2107, 1784, 1575, 1929, 1646, 1783, 1574, 1928, 1645, 1782, 
         2072, 1843, 1644, 1781, 2071, 1842, 1643, 1780, 2070, 1841, 1642, 
         2106, 1779, 1573, 1641, 2105, 1778, 1572, 1640, 2104, 1776, 1571, 
         1715, 1639, 1792, 1791, 1790, 2069, 1840, 1713, 1638, 1398, 2068, 
         1839, 1772, 1637, 1767, 1924, 2067, 1787, 1768, 1633, 1825}], 
        Line3DBox[{1788, 1569, 1771, 1699, 1762, 2101, 1923, 1804, 1568, 1741,
          1698, 1761, 2100, 1760, 1803, 1567, 1740, 1697, 1925, 1759, 1758, 
         1802, 1566, 1739, 1696, 1757, 1756, 1801, 1565, 1738, 2096, 1695, 
         1755, 1754, 1800, 1564, 2084, 1922, 1694, 1753, 1752, 1799, 1563, 
         2083, 1737, 1693, 1751, 1750, 1798, 2095, 1838, 1736, 1692, 1810, 
         1809, 2112, 1797, 1562, 1806, 1691, 1808, 2113, 1807, 1796, 1561, 
         1805, 1824}]}, {
        Line3DBox[{992, 1169, 1261, 1236, 977, 1154, 1260, 2091, 1234, 962, 
         1139, 1259, 2090, 1232, 947, 1124, 2078, 1258, 1230, 932, 1109, 2076,
          1257, 1228, 917, 1094, 2075, 1256, 1226, 902, 1079, 1255, 1224, 887,
          1064, 1254, 2089, 1222, 872, 1049, 1253, 2088, 1220, 857, 1034, 
         1252, 2087, 1218, 842, 1021, 1251, 2086, 1216, 828, 1014, 1354, 2067,
          1312, 1183, 823, 1009, 2110, 1353, 1311, 1382}], 
        Line3DBox[{993, 1170, 1237, 2055, 978, 1155, 1235, 963, 1140, 2080, 
         1233, 948, 1125, 2079, 1231, 933, 1110, 2077, 1229, 918, 1095, 1227, 
         903, 1944, 1080, 1225, 888, 1065, 1223, 2016, 873, 1050, 1221, 858, 
         1035, 2074, 1219, 843, 529, 1313, 2103, 1217, 829, 1015, 2068, 1202, 
         824, 1010, 1372}], 
        Line3DBox[{994, 1171, 2056, 979, 1156, 2046, 964, 1141, 2039, 949, 
         1126, 2034, 934, 1968, 1111, 919, 1957, 1096, 904, 1945, 1081, 889, 
         1066, 2017, 874, 1051, 2007, 859, 1036, 1999, 844, 1022, 2073, 1215, 
         830, 1016, 2069, 1356, 1203, 825, 2085, 1011, 1355, 1185, 1371}], 
        Line3DBox[{995, 1172, 2057, 980, 1157, 2047, 965, 1142, 2040, 950, 
         1127, 935, 1969, 1112, 920, 1958, 1097, 905, 1946, 1082, 890, 1067, 
         2018, 875, 1052, 2008, 860, 1037, 2000, 845, 275, 1716, 333, 1715, 
         261, 557, 321, 1702, 236, 749}], 
        Line3DBox[{996, 1173, 2058, 981, 1158, 2048, 966, 1985, 1143, 951, 
         1978, 1128, 936, 1970, 1113, 921, 1959, 1098, 906, 1947, 1083, 891, 
         1068, 2019, 876, 1053, 2009, 861, 1038, 2001, 846, 1930, 1023, 831, 
         1205, 2104, 1334, 1204, 1358, 1248, 1357, 1926, 1189, 1333, 1188, 
         1242, 1392}], 
        Line3DBox[{997, 1174, 2059, 982, 1159, 967, 1986, 1144, 952, 1979, 
         1129, 937, 1971, 1114, 922, 1960, 1099, 907, 1948, 1084, 892, 1069, 
         2020, 877, 1054, 862, 1936, 1039, 847, 1931, 1024, 832, 1206, 2105, 
         1336, 541, 542, 540, 1335, 1190, 1243, 2113, 1391}], 
        Line3DBox[{999, 1176, 2060, 984, 1161, 2049, 969, 1146, 2041, 954, 
         1131, 2035, 939, 1116, 2031, 924, 1101, 2029, 909, 1086, 2028, 894, 
         1071, 2021, 879, 1056, 2010, 864, 1041, 2002, 849, 1026, 1994, 834, 
         1017, 2070, 1338, 1340, 1339, 826, 1012, 2102, 1310, 1276, 1192, 816,
          1007, 2095, 1376}], 
        Line3DBox[{1000, 1177, 2061, 985, 1162, 2050, 970, 1147, 2042, 955, 
         1132, 2036, 940, 1117, 2032, 925, 1102, 2030, 910, 1950, 1087, 895, 
         1072, 2022, 880, 1057, 2011, 865, 1042, 2003, 850, 1027, 1995, 835, 
         1018, 2071, 1341, 1343, 1342, 827, 1013, 2097, 1289, 1277, 1193, 817,
          2083, 1008, 1377}], 
        Line3DBox[{1001, 1178, 2062, 986, 1163, 2051, 971, 1148, 2043, 956, 
         1133, 2037, 941, 1118, 2033, 926, 1962, 1103, 911, 1951, 1088, 896, 
         1073, 2023, 881, 1058, 2012, 866, 1043, 2004, 851, 1028, 1996, 836, 
         1019, 2072, 1344, 1208, 1345, 1346, 1291, 2098, 1290, 1278, 1195, 
         1298, 818, 2084, 1287, 1286, 1387}], 
        Line3DBox[{1002, 1179, 2063, 987, 1164, 2052, 972, 1149, 2044, 957, 
         1134, 2038, 942, 1973, 1119, 927, 1963, 1104, 912, 1952, 1089, 897, 
         1074, 2024, 882, 1059, 2013, 867, 1044, 2005, 852, 1029, 1997, 837, 
         1928, 1020, 1347, 1209, 1348, 1349, 1293, 2099, 1292, 1279, 1197, 
         1299, 819, 1288, 2096, 1378}], 
        Line3DBox[{1003, 1180, 2064, 988, 1165, 2053, 973, 1150, 2045, 958, 
         1981, 1135, 943, 1974, 1120, 928, 1964, 1105, 913, 1953, 1090, 898, 
         1075, 2025, 883, 1060, 2014, 868, 1045, 2006, 853, 1030, 1998, 838, 
         1929, 268, 328, 1709, 250, 314, 1696, 707}], 
        Line3DBox[{1004, 1181, 2065, 989, 1166, 2054, 974, 1988, 1151, 959, 
         1982, 1136, 944, 1975, 1121, 929, 1965, 1106, 914, 1954, 1091, 899, 
         1076, 2026, 884, 1061, 2015, 869, 1046, 854, 1933, 1031, 839, 1211, 
         2107, 1350, 1210, 1362, 1249, 1302, 1927, 1201, 1280, 1200, 1301, 
         1245, 1300, 1925, 1370}], 
        Line3DBox[{1005, 1182, 2066, 990, 1992, 1167, 975, 1989, 1152, 960, 
         1983, 1137, 945, 1976, 1122, 930, 1966, 1107, 915, 1955, 1092, 900, 
         1077, 2027, 885, 1941, 1062, 870, 1938, 1047, 855, 1934, 1032, 840, 
         1212, 2108, 1351, 555, 556, 414, 1281, 412, 1246, 2100, 411, 1381}], 
        Line3DBox[{1240, 1239, 1238, 991, 1993, 1168, 976, 1990, 1153, 961, 
         1984, 1138, 946, 1977, 1123, 931, 1967, 1108, 916, 1956, 1093, 901, 
         1078, 886, 1942, 1063, 871, 1939, 1048, 856, 1935, 1033, 841, 1214, 
         2109, 1352, 1213, 1250, 1308, 2093, 1309, 1282, 1307, 1306, 1247, 
         2101, 1305, 1383}], 
        Line3DBox[{1390, 2112, 1368, 1244, 1191, 1275, 1332, 2092, 1331, 1361,
          1359, 1360, 1337, 2106, 1207, 833, 1025, 1932, 848, 1040, 1937, 863,
          1055, 1940, 878, 1070, 1943, 893, 1085, 1949, 908, 1100, 1961, 923, 
         1115, 1972, 938, 1130, 1980, 953, 1145, 1987, 968, 1160, 1991, 983, 
         1175, 998}]}, {}, {}}},
     VertexNormals->CompressedData["
1:eJzsnXk8lV3b9xUyi0ypVEohJEPGnIcyZM48likN0kAhZJ6VMfM8F5JEZNxl
KEkkU+Z5ttlCJNO7sS+e+3qf7udzve/93OPlz6/1WXut317r2Gsda52/k9n4
juqVnXh4eGeJ8fDw8X71Nw1/8n8tnv7F1U/FqgCkXAInoifGYPXA4eBCt34A
2bv4kb0vYMd7Y3eOlTEQjebLlwzsB0L2pLPXQlPB9shFOS6CcRC8eWdBKrQf
6vHmo5+QxMNJczQPKdE4oDxyH6iE90Nw8i2z77fDQYjzsKEe8TgkksaqnYvo
B3LaKmZ5ncdg2xkgS0wyDrTnPzeXYjkhR1nw+EM/MA19ln8dy83SX73eGdkP
WRf4o6eUvKHP2IAqCctPkS9ncmB5NivJPN5FdzDeoT3zDssJqXYrS2G5/ZXO
8lVFF9DLiNfrwnIBY/tdmlju/9WCMu+DA7Tcfso6ieVD+66pGmH5r/Q5I8Bz
6DumFeVWYHu9Vqcf9MlJqI8LjsNxvqeiAX6VcJgg3aP1QD9Ezgpeou4dA72z
3rRUIVVA3HQCEebsA9uwD9dKdMaB7PKM0Cv2txAwxfkg2KITHDLfugoboYH/
66hi1moOtAcqJtz0aoE44ZwQ745JoIpX+tZxNxXyKSK8H1fXA03QM9+8tilg
UzfbjX4UDh8O+HK+mHkPQaevku+xxcBd+nE9u1QfUGD6MFiHKYXEyZTXx6ow
ULI7yDwh+wEQvSLLf9acAy+/a2vFjGEgEzX96rPaLbj9jXlGtOQJRNPyznUt
YCCNWDAq1UUfsvALb4FLFIhdfV8itoIBRVVe6iCNC/CicJYgg9UfuIM6c/av
YcAy7hANZzLAZ4zTqOFLZyj6eJmhCMtNXtzXPnuZG5yC1ooLd9yFlNyczAks
/5XOBMyS+kFa3b/935kbuev4lRMNGoMN4wXKeUBCejKsZuULLI57jeBFTIEA
QevN8bRi6DJkGIhoroRdLenUx4wxkGg6y3ZjNRPuNtsciW7JhZJOZ9aT7RgY
epSqIjAaCnJuxjkkXQngHXZ97vkiBr6fahTxQT8AzUvNSa+x+r3/+qPuBLad
tUzjyqcNDaEdpY7p/W4BI99In4xguWiTVnTnwXNAFh5i91VRC4Sam/xXsPzC
6JoF+amjcDiBi2NO5Qwstx38sIblaRJMdsG2+BDEfcmw6vRheM3kubTOUw8I
C7i19iMH/VpOGtjtgEDarLV13vHmGyF7WBni/2j18B3ifmQq9ucGlzp1q9Y2
LgZJoSCp0SN8iySVrG3w17EcwT5XbJGMteQGiXPxyK7lTf5HdTbZEfu56fa7
LZ6z3+Kcli8GJJEHN1moU8Da/OvLztUXcHE5OD4LO36YGPdLt5FHQMILnQe3
boSBQu7p1vdLGDhz0jbkQIgTWNVWs96YtgPLh4+UQ7Dt6Zn1c9U2NgA8Nuf7
VekXgff9vW8/sDx46rZVWaYIRB7neuTlLQrL48dS1tvPShUWkyNPC3m3fXnP
sO6F668OLK/zwHA8NtOPaOTAiJzz08BZpOhQx0Z/cwXYnZ1oKhBFbg+qT4q1
iHbd6qZu1aLaVwZCkflxnvuswsmI7o9NfaZ+/li6N3AFKTaqQlUuWyOta5sc
KTlX+bOfHwktfT9XpK+CrOL4scV3B7p3kqJO960+CiZiQf6nuPpHdWafUTke
p/wF4Ww8UkesnwCt/hc46rF6duOp01lwuwK3aO5QQJIrrP3kd9bEtmcgmbcM
f6cZGFoPyvIxGYOeep0tBsuT+Uaoc3bLwova2vNpFQjscmxiXW8/T0bUvnHj
I+BUoccbIs8Ajnsjf6xzzXACIoW4eWS/756LcdMYZIqufrO/a34ZrpzVCOWz
bPPxHxVI68qmnnwo4zqpsUjkVaZv46RTGHJ1aVOfT4JVNRPVJgjKd+ZGcKIp
MoXTTX7cwoXsKytyilfpujeZ9JZufN7ec3vpjqOspz+HT/dTb3EdAUPXirYD
SDhtmdbNeKG/uc53L9rceYzV9zdeJt43+Bmr86577OQO7qqQVSSQPff8HtwR
8bIcxrb//jG+giR6TSitoAk7aq8MTqBDvD7fpaOTGr1bBSD4aNjHl4usIPD5
Sst6f+veva+Q1KaCbON4Rq6RVWQne+HqOi8V25tyvagPORLnMBRR8QWR61jc
0MdLRAeTfz8LUcVDUT5qj0e8Jzd1c1ogOjb50gHxM09kz028jRT9pie3+UMS
EinkCvk9t5dvFLbGJ5mebUNahyDqgWL5bbtPhFu6xSYv53c57UU0Mi9J3Jzh
3+LT+t5qz/fTI2tsOh7BT3n/bjr73G/2t0q32OKCtl3OaGz7Te93yt0x5oOR
Xnf/FuZzcOyUath6v5Tlj0QHErPAj+6wrCQ/BujtD1hY55E1bVE+6DWEpkg3
L/7rOFJElrehg9kHLUcu03oEtK40LN4qRtIqNsctW0/C3CPfaIQ9PDLPLcIT
eYiLk/svH72JkryBhERGju2hV0XmcHoKB07hGdwRREVHRkauiB3f0meYgiXv
0aEDqOtXr14l2ce+xc2vympcSiVDoiIj2+4fPrXF56piU2T59iLXrl59YmV4
6h+uM7eA/rHPr8W2uLxF7cbvFGHK4vX97bvg24M3bsxzpGDdULUxbskXaYKO
GU8hA+cOPef92YFkuk9t6GN3A3I5lYqRcyEPT8q6PEUqP2zqRlLZnefC4oE4
1C6upibcRlxxeoZ53TWQuG6EOAYQ3p24dRb5ieOSLYXCd3wlUc8lGT1qCXZs
6ZPyckDOuIwQ2Rt2nd3zGvcWP220evGSJilSdqI27Dsp5xa3sv1E9PEqLbI/
SlYhJp3jn1Zn8susQ5JN+FvcPDd2Q4e2aemQ8OIWpKmT4sjHpHrEZnh5g39j
rejZ/zUJ+WZRRGSmF4Ecwf1+9chk3bgz54AM9vSUt98wQcpxeubr2BN+UTJE
LgQb6wj9OIMs4zh301Hpzm9nUYLhYj59RORb+lyZ1whSliwrvdGtrCc/sT2e
tewEl616dyM/lI6zpptv89qbnHW3JaiRnqev83fMs/7L6Vxa1K745uon5Deu
LbCpD90u+8MUA3ZITQ7HlOVMANK0usl5Ey0pfC3vIkznnI/SaOshozg9R1el
Zk48VkNMS8jk2xo4tuIwhwezoFUxP+rDsh75u+79W/r03Oakc5JYKE08LPf6
fuR2PLHlO3ehLJoS6Re8Gy78ZZuLh8/mhrFTIOi0vuELLMf+bXT2mswaqML3
RF2UbX1JnOCFLON0phDsvFNKqIRoEt7VCfJS3NIz67WP8oLUeWSoiZ3vVPq+
LR1osg/pxdGtlZaLcg+0aW2vx0bfmynQB6yWfpn61CzwX/gBlvgoUhQxEi3r
LIIy2eZv8i4RLVkRIwwnKli9Jo782+hc62BwbrBCdov/1v5p5cJy5RRV1JVH
R8WdvM5u6Wz1+ntkD80ZhBpjWG7cR7KlQ7rIo2E+vIMIoUiuKunU9jjkXFD8
yke5WhpwRIFw5um2bi/ML9HpBOIjRr591Q/Mt7ntuU+lK+cIkFJHUTOlQ8z/
9jqXMxSb1GkqoX7PWz/zv7h3kxep7faKsXy8JPYb35npu3NvLjUSW7966pH+
0S19iG/VyhkKLZY+oWMQ5Fbe1o1KoNTvTvuKmELDIV6dpsNbPKSlKFVDCQ+5
InsceXvu0H+szs19ESu3qnj+r/LqIuM8xbF4SJtzj+XCjW09fxw3bqNnnCn1
E9+xos6zrafkEMO1nHvfxQb4nB+Ffj+4xascEuds1BbF5C6kaYy+PbDFQzUe
LRQsrKFuiidk+TYPQf9BJpM6kxHwPm3BGquzlWdyVo4Y/XpecPx/Pb9HrnPF
ic31FdxOXooKrRgC0ouqX/xVRn5Z3rVHkuYM7XuIC7+oWOkyBN9Mc5dIyH5d
ns0jagc6phyuhZw/ezRqCI46ngk5fuzX5fNIkwQzPxSA+sswTvniITAaX3mf
KfPr8h4BWkvf9LLhWUUg8eGPQxDVf64tUPvX5QelVY2i2p6A+K3bsz8/D8E+
1kPNLfq/Lr9Xuu64dHcCMEQW97s1DAFfO+FBf6Nfl/8pMs9buBgJTy0uCb9t
HALnsSTKPuNflw8ejvugmxICR1wKx02bhqDAGekOu/zr8kMx2X7enwOhc63z
aw22/FyiSvXaXylvd+e+wzX0I7Cu6s0gwo63Ju7kfjD5dXlD/YMTekFekJvv
OMmFLT9woLf3+l8p/yteIUXdb8DuDsQkiprnsfWoX1Pe5/5X6jEd9A5pICuA
tgEtDrG1bmCJQ51IaZ6ACLa0L5RDlSCi0yaUrtMCcYYsq22ek7Bya6WGPPIN
NLxi9JsirQNjoyiyvPYpmLXreK8n/wJUKA4a1OqWgQp5N/1QCgbChR/pq0MU
PHgovcx8PAfq2aRuZ49iwP2oFtEZa3dQu59M/NA6EahfLdI0/sRAw0WbAfv0
23CktZ6mVz4AXJt8by2vYsDeMBiTrKIJVjyIxHMvO7jGJ0/VgI0/aHr8oLfm
AIZtpIW5slfASM39+Xr+6oTwZeoSt2PY9hwQSVNTBur9/FOrWG6jQixd7UMO
Qj8iCsZ+CMKeFNmO9TjGnr372jWjGWSRK9Waa/IwfO0038gHOuB99poqcoWH
5+42K2P11BBgOu+P1ZM/rZVxor8FcXq4up9mYhfcTrH7q/m90ClBtp1PX8KK
z6jpvQflEGl6XOpuGAbmvLpX4hKfQWVCelZyywtYmLHi5x7EwGmU6Blb/Wok
xfOd30eLn8jBjMaN+n8Vr9boFyTLJhq3uL8gfQC56dSf5f9Dy+P9t3/Tv6yn
1+SeJlPsTzHO8lF+2d3b65MfMksVlhPzYjWjxRIxX5j+x3XL34r7NrxNYy/N
hRTmh0Nn58dgnNY+T/1RP0TVfBS+TpwB5vnJs3Y7xmE1T6pPO7gfPp6vG/Hm
TIIVnV0dw4TjUDjMauwS1g/6ecdadjZFQZAWyr6eaBzUPvoe7gnvBxqMKE30
0xDoVKike0M8DoszA34+Ef3gbjJdWGwaCExlNymAZByYHu+YG8Ry2xsLFA+L
H8Ixy90D3li+E9WawxjZDwuFrqVpfJ5Qsufiah6WO6HQ48JYfkhELJ2s1BW+
fA5obcDycef7bkp/5TyLxJGY7jWRM3zs1cAbxpav6l/lvYgtT7T0qCx0Ph8c
o+sudkn3Q0hTp8zeA+MwQknKTPDkAwiJSFb17uiHmdLw7oeFY/By9H7Qe/ZK
UP6mT33uSg88IJ5VWb45AUNCR+Wm8AphT3CnbIJdG9xcqn3CdGoSkHe6tc3x
mXCrVeL2u/hG+KkS+GTy2hSc0BzJYRiNhy4SawpX6k9QfV6v2IcfA1dv+fku
GQUBkvx6lBS7vmhUtSSufIqBdyX6Z3f1uQJ7Cx7fj87XYGzdd2OpAwOqOfxL
xfyWIHsf/f2q2XMYE1d/eGkGuy69nqgsfvIKtLi+c1AzTQQx6iW8M9j16o77
B7qMRzQgJeArpSZlCLQ/xms1w8Z/KXlK2QhlaVC4GMsR4OYJ6Ns2H52x8XBi
jGbmi5oAeCcJUF0KtwF+nj107Vh+3semPsexFPQaeCK6l2rgoCl759gO7Hr1
9MmyL5x5MO2+ZhnDUgrGaGk8hyzML9fb/2lcLsqpVHNwWcyfRajYbO7vN9//
XflspnnlziPPwDGnfe1lLXYda4ZiMLk4An79lbQubskgzilO4vBlCLuf/Opo
aTgCbjWYRGqbWGB2bsM/g13H7ru376oadh1r/rAq1YEmHIKb++WYsetP2sVM
Clns+jMcP+99R/Bj0OLQ50zE8ncKQdQNWH412aAk8rE//Li/JDKJ5Q50KgFH
seuW76r6ZaLRPnCvMrnxAHY9U6qi7K+J5fnHZqSKKzzA6ylPjyiWmydPfLn/
/7D+/N/m7uiyGQmIhpwyjKUnLxqWE1xfswh0Az1yyPmQTgiEmpUsPuVDA+0Z
1yldwW4ItXjfsTM6AMq7Kr4K8aMhwybs2DyW97MJSznI+MAMmzSTN5bPZ8RQ
yQt1g/Fz4Q/TOe5w+WVOUD6W+z52bbHHchKnL1/bJVzAWlRRvhHLzzy9lxyN
5Z4WpAaPwQF4zyl3DGG5M2G76wssF+SgDLAmiwUTc9YzxeXtIMkj395BMQki
ipH7Tp8PgQHO6J1aji3AE2Qc+nR2Eo540rc6n/YFrvY218YLDXD4iRthXtoU
MPL/0PeUdoMEJsMP9/w/gbRPiQ0bDwaaCaoXzzLagZhR3dq3V+9gLE1/nNMH
A3wU+2yDwi0gYuwVSxe8BW1G8YWU0l+vS//ZOL/NymCXaTgIpzC94sF+j9di
mXg7sd8v6cfzasO3EgF9JleNaqwTnpmoFIt4oYFpKnRWsSMIDpEWDS5hy0vW
kre/wn6/JbF+o1onI+H08/SjPZ0j4EnSY6GrNAQrpPpuu2XD4PBntZdSXSOg
nJK2Mx/LH7cPWN4/FwFCL4ZDg+JaQX88auGo1yQwW5GtiXD5gkcbJeFV7Pd7
aWLZ9zj2+0X3IXvFu4PB55DM6yBsPepKNwYWsfWkHtwtTNAUBNaahxlqsLy3
xOgA14UhOFtuNCKKCYT0r4xe8ZeboH7yBsGS2hR4ge2U6hdPuPxcFJKw9fOf
ekB7DVt/UbCRIz4DtvxKGM0Cth4kw8BYHVuPQe0cPzePH9C8OSzN2I2dz5JT
43ex/PCUZNuasRfkW4SRCkjWw4w92eTtmSk4VJwcqtjlCo9UEgLeY+tXZxhf
9sPWrzmFejgS9RAGQutP8WPrCVPP//4QWw9m7EGcg443Ni79iJfFcr5v3/fG
YbnN1+AX/MVOQORpcPb6tw/AzFv64pUxBhhla5g0Cp0gJ4/Jpwtb/4GmwLgn
2Pr1VW2/ftP3hBeBvN262HoUw8kdnmPrcc1iS6dMcAfRo6ud17G8le/ESiGW
czbfSLloYQUPhM3rQ76Uw9MowOt+8utxO/LosF8QxQMYvXD9GRr7uaft7Wry
sZ+73xwVUEHjBhTpTWqW2PoXlfSFKrH1x/C5hhytvwl3vOG61bdiOMWToof3
+W83Lzi9mTi+HnoBAv73pWrT+2C8WTGwJmYcep5JSqB2pEJMSUv34909sKpe
qf1kZgLOnjU4+izHBbSe3qt2wLbzOJV3xidsOyWfn3NP1Rrc+l0OIp4XzMsd
hXdW7teL7X6KvQhfXbbu3/5dHhcv3bsk0YK6zKjxfD2vJTb+5Mp6XkvtY9HM
4tiON4L7FTfuRwkpV1Ot34+yMXlPuxTYjlKU6X8iLdUDz73o24MmJn65j0hN
uNkgYRQHsiuWVlwvqoGrUfLMKw3ML/cRv2r/r/jfSv8/+Z/8T/7/z0N8eiaa
9tqCd1SjzAw2rsqUpjSXCHX/4XrOl6hQmjuMo8p1Kjfy7cqfJDby7Q+p6iqE
Z2LgGX2fwcHhXnCm09d9yTYB9bTMP1UeXYPB5eJnMPEaulvFjJk7MVCqjV6j
vuUGuzhnFRWw9XCW1Nz0wdaj1zP2WZ8yGlrFtfAcb7aAbWLdmfTvk1AlGNcQ
eqZ9K874MiayrnFP/uH4I61LEthmmw57h3inVyJ7IQMovC0uTEATna4UF8OS
2I/vzyPdtf5++6PPcsGu+lko0FTyGD33fAjinpydSBYeARoHhdtR+8vhetyA
J/HHAUgf5TN+VDIKqebPuLMoX4PBrR6HyYtVELjf5qSHOgZCcwXMmETegiTn
AjSRN4HAB9W0JaYpqLV6TcZ5ohwu34GUHegukBYZJorD/i5075W4fWbXK+gd
5n9ws3IIehVKSK1UR2BVgfli59vXcO3xhdWfRQNwdi+NRyjBGER/afTZ45wC
jrHDYVHqhXCIviGc9wsGeMP78ULFX8IrLkZCf/YaMFYoMdTnxYDAzNe1kYY8
iNQ7HUOC1wpTMmVseA8noezWN1lRl0C4WTdlTmidDlp08cGf5jDAM7g/dx9P
Arydbp54LPkWOMFS1bwQA2FhGby7atLgvDp7JT9vA7DXEscPJ09B0tRF7vsH
bSHbJfOJuWc41DZLkL9YwYCHmzi5qLcfnEhyPxB/Iwd6tAgzJ8YwcGKGWEfr
ejQIKOcLEZtWQ9BNJ5N5HQxcqW3ICH1sDD1HtN+teLqD9/4qiaA1DJy7RM5j
BnZwi9rv9Y6gZJjjnFpoXcT2y+3uVFyXH/BZvKg9nfcWViyag4ix7dRLNd6v
GCYHNfQ2Ln4j5vAqnOre5Pp9kt2TQqpVV+G617237/KDocmEXvDeKgZWWlUU
abicQRvtRyslkge3d+0/4j2AAcOp0cjE+7zA4n88dtxdFzge3eBYv/+WINZx
5aWRGvx4RXhVm84NDi9E2Sev39fyfM76VNgCGIKuKJ8eSgdkr665xXcMKIxl
urh274XiDCLPPf0SoIt+E7WeZ45xMtR02C0O9AcNZNRyLWCg9/GJ9XNDgmSB
5eqfRmCibTaaejUO7hKyeeovY2AO0zfZIY4HdM51NvNxnOCm+m1mvR77InED
W/wTcN41ozAp1wBUbG4RL2P5SFNnxxdvVXgpOi17/1oQnP7AXvwZ299bAbwx
mUmDiNJH0pu1LTSwXHZn477TDjEra69QWhBVvqheYiMPgQczz67zSx8ptdw+
nYPHMo8aGK65ge9bLZ/E9fuolocnDKiw+7X5xUEX7Prq3YlQzXrs+upX8ysj
1Jjr9KsfYvcpFMIeyW7P688FtMa8WdMoFwsOJueVAUgLNOzuXR4FNS3t9wrJ
vVvxpP5FQGqaxgR41BSEMMbWbvEiSm9GFDM2jqWNJz7ntQHtaOvCOWxcbZ+f
sHzzV+Iq0Us2/DsSV2BnrZmpDkM+hJk4LJr2YUAxg5ux/9I76GIfDj/kNQSH
qC6eqaIagZssVYKZVu+g4OZlXuq8AbAl+SyomTQKRDHmvTecKkCJ9YR0jn8D
TK94Oh88MwVGVTUrTnqV0HWxwFHk7ldgOWSroKQ5CcJf3HK6LEvhTqBsuGvH
ALQiWguXG0bBnnVl6QpPAYSHzL/tKKuHtLSQDoGSKQh/oHBQ2r0Ebsg3EpyY
b4eaCIYnWrVo8N+5z0yZIxfCXtQvuOX1Q+vFN2LJbWMg/NQnrOjDU7Ai6Xxf
xfMO9KMOXJv1wEBaMRLc7ZQNc10On4upm4EhFRWocmwK/JzkX9+bCoVDl01G
jqUVwJ2bljm7WjHgeEj8TbZHEhxSGDCM/lQH7cJhfh9JMCBepI5irHADpz0z
g1+onwENbeJBdmzcsFMarGoVCYGe49dCbV5UwpGV9Au5jzHg+nDXIWVVCxCQ
vxelMRINSVSuD/qx4/nta83s8/ieYHK24pt1eRGsvdhpl9qAAaqApjcv6i5B
AYVPonbII2g4T30JwY637PADAzbP7oNN6mhHQ0Y2dJh/ufFgCgMkOvEHZYhl
oT/N8prGITtQQdhKm7DlZztvCVzFXAfT3cWJJ8eTQaOoXKYCGzc0z9hZjzjy
w7Ivw/fsD9dggZRk9wK2/K5I0VGTTh346W2ovLAnHK76D46MYuOYXVLwt1zT
w0AtYUFkP6cOCX7PJdfPueokDKu5reQgeOyE2gHah3DaxlhWA8vd9xKNPrpU
DimlPNqMJc1QZ7pDYw41CQNM/UoJ1Cho282+Vsr2AQylZwt38mEAZRzC111b
Bq52MSWyFfUgwTl11yZg6p9u3fIn/5P/yf/kf/I/+Z/8T/4n/5P/O3GzwvEE
d9LhrX1liNh7pUneP34+S9BbL39WzgqysqpiL++fBGm6kPGd4e2QoF8kf6PM
CnIvoKwfME4C95ucCvX4dqjq+shDyWwNAraUJ1cZJqG+kHPyS2o7PFMtnZ12
sQal1/fL79NPgi9eVJ9lZjuUlB3Qqy66D9msqvhUA2jIXrZsV/LuAA0qm5/n
/e8D2TwiprtnEt5wfYtXRbXDR6LhG4cNbSAhfZWfb/ckKI53fV6oaYfuhVIt
47e20CtY4cHajobBltEXVs87YK+MbPiBcFu4eI2pKYF0EiSNWjNf9rSD+li1
0B57O7hgcdxGg2gSCuQy6jsn20Hq+qjcd1J7aGQ+W+dQjwaySAMu2+YOkJ4W
nW8dfgARU05HRXdOQsn5ic/F+B2QQtI30txrD4pZ1GMfV9HwjFhey2xPByTR
vBdXf+oIDN9fcSy+QwNz6Ofwl3idcE8Pk0f1yBGYOL7pUi+iwSPW/VbViQ4g
6F4SpopxAkNk1MT+OxoCw9f054U7wKVCwqywwRmy5fOOPihCw0rGrp2e3J0Q
3E3HbPLRGUR8Kb7twqBhtXLJX0SjA/xuv6Q3MHCBhJZya6UJNDDa1zd3m3RA
NqYq/bmvK6zK94r3PEeDHPWRmDvGndCiRo9fjeVKUfEOi1j9z+sTnvZ364BD
4oH4TNxuUKRFKXe4Fw3vnHJiwoI7QN89NE/C3x16C9g9FuPR4DyV3LES2QnH
iCaePI5yh/f7atZQX9HQWlZhpZbfAR4/x/Bb5TwA5XtO8WMj9ntpJZRIeY/9
XhKtqHpHPMFx9IFeSCAaTvDmVnW0dAJlWJr+B0IvwDf3ST/6EQ0xRvYpwlMd
ECx8+SdhpRckxe5UOPAeDRFnSNjSVjtgf7bH264sH1Cknii95YQGR+bho18Z
uyBFmNP07LAP3PVGFQ5jdWPedWOcnrMTDBmoDe68fAjz+0YJOvLRILZHyMH4
TCeEhSlZJK/5woNBlB7fTTS4CPR7j13uAnGfOQW+i36wbJaHl5+OBjy92zvn
zDtBj2M1UI7HH57emUsrSUVDpIDM12LnThhvV+Tgdw4ElrMtq/aaaKwuZ+Sk
8rvAzQaRRFcHQsJUoy5rGBpGOArdDqA6gTzj+c/DAkEgaFCy3+QxGox7ZZs/
f+qE5fJep8aZx6Ca4pNVKYaGBEs/yqt7uoHmleG7vCvBgJ6Jn83C9veiZUz+
abouiF5yqcavDYb5mSRWXXs0HGn6zr/E3AVjwkTGncuhoKJRma3LjIaGzOVg
NrtuOF9g9kY1KwwWJsyWA66gwZrvp7ShTRdQOda1kRKEQyN+pQX+ZTRo3HAd
n3LpgoIZHuVDjZFAT0fXo4aHhmICQspxTDdEBzWx3BmOAt+xc6qV0mhQ0P2a
cX28CzqOPKbQ2hMNhat7K4Ok0MCSizyvmuqCo6+VTqpXxMHdoLcyt9omAK8g
z/uVdQ+UCE2smXEkgAZzfDkrE3beJQo8vOXcDV0n6PeRKSQAadC+xwv70GDo
X3FYyLsbeHpLbWkSkuD7hQhUb8YETL68aCJC0gu7rhwys3+aDF6y4R/2DU5A
2AWdB4Lne6CIu6SkSD4FLkmII4ztE7CDMCqLw7QHjCJpJ2J/PIGZS7YrLHcn
AMPgSUpr0gtfUvxDis6mwdRjoWNq8ROwb3qoOIKuF7ooGxwXJ9Ihw69BsNJr
Ag6+d30nKNoLh85Mqe3syoSrnOq3IzgmQFXd+/p0XS90CtLHEetmgeCpFpSp
/ATsFu/FvxnRC/c/l2ZR/MyGm4+pSw8fmACuM5ZzBt298NHnyOLlGzkwqZqJ
EmoYhwKUwdBuxT7YEd770vRYLhQzUtBdGhyHyzFH3sdy9YFu/h2HyoR8ED5i
Jzz2aBzYaVGNT1L6IH2oI1oi7jUE+7MeXDEYB/g25zHV2weiF/3GyfcVwBHo
zDe6Og56FH2nhpuw9Zy9cHqMtxQeiQ4+ieweA0Oy6Nrbdv0w8nlo8N1QKRSt
Mr7dXzUGirw3E/PC+oEzWLI/+U0ZXG6cev16dBQMhJI8QsIHgDvFjaBIvxx2
+xuOzGWPQmiLVkBC0wDUPnHPGTlfATdX+MtZlEYhC3/xazEMQqH5/tnHHJWw
h0DGTSFoBBrUuRxIKYbgglyQpmpCBaz+eHGO79QINAoOyPc6DcGidr1N7nIZ
XN+l7uLANgxykh6fD6QOQ6Y5EvMtMR/ayyf8Ed5h8Pz5o025dxhW66UKZfle
QQZ5zmPpo8MgkkkW0bcwDNYxH9o+7s6B299q9swcGQZi6kmMytowFIdTs0iT
taD2Cu84oY/9/XzKuNxGzTcC73IfvWB6PY8wHNG7sM4X8TXz13nbOVRuWe4a
6v7gguo695IvzVnnJrxVwiO1NahLxkiTMtUw3HZIrDXlGgG5psiv+cg4iqmf
O3mdH0NJL6/zJ/sO01blDyDT0qob5/KnBpM3zuV/9Tv+R3nNLYsF45WtfLZz
+jvTI4bwx+sZnfi0+l/rKT1puX+9nv9tHn1/qRE9uM0FZXVOmmn+Wc+f9fxr
1vO3mtd4/+3fP99+pPEXvlLlegduiMhEwAUDP1MR4nGg9rD5cCKiH1pjfozd
cw4GU9rEykEsP5qWdT8Fy+mPJ+ln4AVCJZqgT5ZkHJIPHslGR/z6nvwf5VIr
Vt3fJSZQPfcsN+5BFXvs2PCJCs15JkRG9BZYx2IFmvj7oY2+WVd95zjw1Q9X
nzL+AK0CiuUzn/qAvC31knz/GHDi/J0+4vydAnD+Tt9HtM4XlD0CB71esgvP
38B4vT6l7FsMiCXcvjL9o2erXaIjxGbuBRMQbZHrPrg/E0xJHDojRJrAxUjh
Pd6FKSAtldIJICsFhXwPEmP+j3AyikzJ4gAGWs+QQ/6ZJ2AuG13NeeQFLC2x
p+8dw4BrRn2iINdj6Gc9WJHrHANsYdcHvZcwQFM/E4RvZQuJjPbyVwO9AK5S
ZyqsYevB+SYN4HyThnC+SXH3DyYcIJMBp/oPrJQGl+BUTS3V+vlsqUgB3b2z
p0CsKN7qqZQ0TDDZ3ls/bxV8/uMOkR0ttJwRrKAx4AYJ8uWpdd5be0jmFfcP
xO2NFadBCC3YTPBtnNs+Tpx8VdPejvDKVdY/EllEiK81bzzH9HW57NgxjhLE
1KXnhCpFF3LZddNX4fG4dm9LcySSvTRYdhe/FPmA86/Q833jTX9s67wV7/2p
GLLphAlQWHRhrCqo2+LSPCG7H1FhoH4ePXvuaj7Uel89HE+WAn01Vwuk2zEg
u0BgWE6eAIHEotS60angR9F4MnMOAyo73ypxrQZBSWPDJ3mfQLiQU1yQsYIB
hiufJyVSbYHzA+O72VUrOJp/92kBtj1KNzuG78lfhD14R441TusA8T575Of6
OSDONynnd75JjT+HSGL3HgK7af0zCveYwXjBesMvRfAZOXkUwxryUShzrNMU
Hyr1rmz097TGnvxhvw6kyr7eNVV8ADmELGzwuqZTHOjPecjoN7YFUsoyxDdy
Ux9t2nG/IFM/ZJ6h7/1R7ijEDuejcqDhQGMWtRHC9d0IcVK7iwzjniv/onB+
NqCbB6ktL/6Av+sCsrb213VmPD5RN+3/eYv3jzqJMOFj4G75afR95myoKE57
HuoVAiniwop7pjCwMjjWN8dzF6i0iGxoiUJhP63eXp5VDFgdZP2KqnkAmr2G
UaXZdrBTIoN7/X7CG0N+AaeGK/CQ8+FRkr2XoIkyR/w7lr8VecjR6Iwdf0I/
JgNSRUEfElXW2ymH802KxfkmOeF8k0Ka8pXz6fGB+9aE0e74RcSx98Gmz4aA
s5sjUS9ir6W896nVV2S4edPn5zXFidGmyXwkKvTxSqZjDlJRvanDYmrHeTdX
X4RwbVz88CsfJBDnh1Bx8aPMg316SDY6Dk1Fb4z8wOl2N3q4iqBgL8J1bLGh
lOHs1v2ByntfYtvcmVGF9vnZMvPbvhN/VGfLxnwW5zN5W/yQ8EpzxQAGJvXF
n4nNBoLpZG9DUNZluNl0Pa4dq/N+6U9Gih1qQEtoF1OcbQb5ls/tZrDtRLG0
vHddVYHGlJnyemE5kHh+jmr9vDj2lkyfsDM/zIWXnt9rfQwqqX261/s1hPNN
6sX5JuHjfJOM7K3VDDswyCuT1xolq91I22X0hg5PUhan282rEAX02R+PS14j
Zmqb+nhzKZwNc4hGJkoCZDmf+yKAG5/Fqyc4vNjNkQ5GePd51BgZx+lJUHgw
Dq3Ng4Rava2PtDu3pRuDiFn524unUEo+w5z7Dm3f0yDa75+hxbcXGd8fy0Gd
zv8319nJkT72dMjjLe45aFTzBKvzuettVPeWr8JX35eS73g5gJloJWf9vL6E
vjVoiJQH6l4pkMU8OwNZKzZFG/dhll2yThEdAcU3eK0KRHSw+pZncZ2jcL5J
537nm0QfsxatoNqN/EhFHZ80q0bIqpY2uMsegRKv4Dyk5jFEh84mIt1dm7rd
5NYvOF7pjTTx5JY0v7uHKOH0pA8i9G3Q1EKqP32KaeiSRFZw3PJBoG2gDA/q
2tWru1yVt31jnnXxMK0kUaMiIyMXywdObPHEZ1U07mKUCD8fX/B9tlN/N50N
fFW07tlc2+IB4GOyrrP1tJ1YJp4geNxeesg8N44U5PdvjNuwPRZsY98IoHA/
+UFPQmK4Rb1zo78Hcb5J+yT+0jdJGX9BU/poDdJ5bVI3XaoAoTq6qU+jY+Gz
qdhEpPGujtJ18ENUfm5yly4RzXl5K4SJoWtPy42LSC9OT3IW4iMXHsogH49q
yQk58m7FVe/41Jt2GUIoPM0nrSw9274EXpdu7E4c3oVIFJcRGAee3OK3clX4
JI+RI5kF9rc+rnL8w3VuuGrq4zAqsMVtLfl61vs1iNf6JOPVDkjetefIx6QE
5EjMy43+7vi26Zv0+Xe+SRyEJMsj0bnIWMad7x/kniHqnZv6mLpXPn23xx+J
4LvmjdrhjHTj4u0NwQJGeXVzBP/CoV50i9qWf51G9fBIbsp55MBRKamoM6e2
dC6sZgyRfiCAIhs2WJvi3dZ5VW+h90kyWsxfRLou6dO2b9LhRiabxH1UCJ3d
XmH1s+z/tDrTUR+t8nm8Y4tb1eZs9Je6+C98OfB+8+UwWbSjP82SiCQpXVU+
PvcIScWN20d2AqqcgZYIzXApBYrRCvmI0y1Gu9aK/vtlhIlIVwmvQwZZxHFR
0SWZ6PdnkGtdMaNMfdv+PFlLI7b2OzhQIo8ibE5wb/t17P+049z3Y2WlFsfV
ua8/3fZNmjFoXXpwixLBP25oFBN9/N9G57tnkXaGd4+R9gux0USZ7shp3LiN
Ss7Tf2VsiPqcETtzj/0WgvnNz+epTExfrSyiR0H76ICyyNa45SrKviSnKIDs
ozFeFWrZ9jlJForR4BhYLR3VP4GK+S++SXc8d7aG7R0qdXu3mBWhu82V5wXS
iPOIkYxUNu3w0yz/NjrfM3v2aN/+2C3+Erd+qGB0pHH2kEItK5/uReS39Wyr
Laja18SCCrAOUbLW3I6rVBKfZOereZBqK3n8y1e348Mus8+s4V27EeGgzNNl
udu6ibqGP59zHyslcLCwpo3a9k0alTPLeP4EH8n8SH5QU/rIv73OPHfnipiV
xX/z88H7rb/7EuiXU+yOo/gnmvq8Rb9t+Sa1/vz6QrjtOHL/U0BlWz39lj4R
quzf5a/sQFzGz+eyRW7rluKtka49MlxaL9mWJ8yzHU9mJS0JX/OuikWeQe3+
+Xx7Xvxqf/2r/eC/us6xPoz70DKs/xc/zN5y+VjHUZxv0rZf69O5N22uCxNi
pWxoL93v27qNnffaU23WWzo8f+pODv42x/tv/6bhEy7Pw4PL8xTh8jwk8yl8
cZhQbHz6slOHcwKiB24Z9PX3AguhCcIzOYxirXcIP3FyAFQqXGQMYsegfs1+
XGoUBacoc8/W4Q2C15Rj8vnno/AinYBm0e09fKa+wVtiNwgvPcINHTAjALh8
ywIu3+KPy7dIzJTdZeYNBYp+j8ITml9AdFK7erBmCh4F3OOc/LI9HrRVSkmK
KybAaOAKAUVDPlj63ltiTW2F9u/7BUdNJiHo4CsqNF8F7DQ4pMNr0Qgp5+MC
7PdPwQwuT3L4zV/mSWTXLjy7eVgTdiFXVRIJLKFGuJp0CMttG5NOPX8tAzkh
1zWbFW5Cs2b6wPo+S+frnsVLp4QATeLrc1DIEMSCuN4srf06L7ScnqIR7/4C
orlP2gyj3gD6h//jAy8xMDpjH68RlwyhfBcf6tJlQIuaEUoTg4HlcdNKBB0I
81UmyWRvIuFJrJS33DIGpnc9ZjVOsQF+rhX9CF9PGKEoRetiP5cSs5mXcGb9
y7xEXVgCyft6fmh+vnKcK0oSAi3q7Nb5KvX9Oh2bo6BJW5oRLyQEnXimzRvr
gcjel82eFJDIxfe00PMY5HiMbuQxhDsfSOmmziK9BSbeeLJUUPSse2OfyH+/
IYoy/iuyXG1YGdr3Hbk31LMxznvcY85bXy1CqjpFDVepOpD2hc31YXRF1xVS
kkjkTJz3gUTSEuT6p8158Ufn+6/yEkI9+YU/4yPAQWEQtaCRBHwyEUMGPzCg
KRvg6qYQCLRShiceFPjBTz1ia0ZsHPCLiemIv28DEhUtTKYvLGG0X+vrG2x7
5pYZXka+0YOD4RPCxyV0IDihxWk9/2ONy0us/S4vgc50NNohuwekA6MPhJ6j
hq5Sr5V17mOyu6v76TySYvWM6/Gun8iBsM19X9wx+oiJqBbEPqP44U/hbkT/
zqbfuJ+zNvfTq7mIPsKjr/qqFFF/uanPzxFf2OH8CElSEZwKlo1Avv+W/4li
izy3xxA5r/PcyfqCBTKG+300vVrrZcrFh1B2ff1WitnO//yt4qoyexaChJ2D
ruiZO8JNj+FD4xRjLFbPm4Qsg261NkA3g3hOtdjAwz15yznYzy07NlQq88ME
zEz8XsRM6EH3kAvdPJavHMubPsAtDXvJjmfsYBcF2fedmuvtJHy/mZcQuvyX
eYmR2aX++yw/kY5qKwZWagziwf9+o1+TQQ+4PGzbkPx8VI6f9ReETnpzvCXO
XJTQIH2FaHimp2WzvkBKvm7qECyev88/6CHSL5VmMHHFC6nCrevOpq6M173R
Qu4WO7RnHTPc8svlJviuJfmNBeHVe9Iye1xie/3wDYVXPM2MmvB0PX/x596/
2+9XCIU3Cd0HOSAVPFyZqHADLIMpHefW53ud5ieERwWeWd38kmQtC4ct1ATW
8z/3yuvqlMX4QbDzdOOJU8cgjNR443ftJy4v8eB3eYkL6izPZDxHEOLFcd7U
e83Iaf/vGxyzTFQReqESWc1wR4b6chF25019qnK+07CNRCB33JTeJSr6IHO4
8elLuci/IHITYfKIdaneaYhM4/T82kbVpJkmiFx0KWsEVcmt8clUeCo3mIgH
FWF9pOKY4raebB+y+eWt9yLhFag7XIb8//B1QiHrap6My0nYT1yPMSY9A9eu
qLzd2BeMKzSeq2SGvW9iUf2NtNAabrCR/zHC5SVkf5eXyKx9GqKPaUZmMT2d
DIHlSP6Hlc19x0eTp5EmOUj6vIIxiWIcIjWyqc9xP2PHXCMvhCJxP9ei0l3E
GKeb3+Sr2CRmDaT4crmGcNy5LX/RtA6Wh3RnOVCyQl6fA59v739VEdEDXZ+o
UQ4MznclW7Y5nnYwp4kcBUKNpylNmMX9D9f5V+ux05Jiuu91COCV1+ADtlYi
wKiSbvSXGJeXoOz6y7xET4lD32HlCoTA7uzbvSq5yO1Hm/r0UiXU4FknICJh
tHyqGo8QEpyvPieGKWrnnCUiX8arKOWkh/Tj9KQ/1hgd8VUWmbke+dD0JN/W
uFVXCJV0LBFGgS8t6kfZ9ritSxYSZJUlRlQJWkfrxri2+LnsMZNbF8kQE7uP
+7S8Of5pdf6j697p8ib8W5npCF0aa35j/FNkCY2LA0N1JvXlPkiek3Hc1AMH
hAWn252wgiW80JtIYQMBeay9CjKD40dUT5VW3pZHzlafqZtb4Nne9zVyqI4u
CqDyvupKBuYxbunGTLeTf0Z/QqyaX2f8Pcv2eJ5bOUkT5bMbEShiWmMaYfu3
0flXeYl4RUG6qD2XEd6HNgzTpXeRwd/iwEpmlpadEaJiHX9QOlwaWcJxduc2
myY6CYTBnilch25bn7pZx0AiHQ6UbwQJi6rm9j6iiOA86XWlptLeDAZtWfLt
PE9ZspQn8VcKhE3TXtZN/fi/jc6/2sdJ33zFeXXHLdT4bLef+diNLX9yPP3d
4xeJJZH39FJFMhxCW+MW/5Be7QqhKHJmD4uASuL2/reU9KVpS85q6YU9PzH9
edv+wy3CkpdkpMdLBegb9nh3bfORKoK1tJPECGSHi1MtH/231/lX++VnCyEt
2XdPoeKm7iy/uLv9PgJRC4VaVfFTiBF5eN9Ay3Z8sC6nMf1qTIUYZ2qztfJu
53+6tOiX6dimSp0oXerJ+LbzFWZMpk/3suEjZm+81CPoj/zH6vyrvMQRhrt0
HM4sSK69ObF0F+12fLhzq4i9eCcSXuTUFca1rRshT9qZ1/smSgs1y/a1tG/H
kyVkXmc5ogIoAz6U4V/tgv680dJnaxO/zFeYySVUNlC/g/qaoYqWiGFQCEav
3icZ/mX5X3EnkTuTcjUFQKPDTrOjaxgqNUNib3AOw/7ErjIylmKwn7oVe/fz
IJzkWzAR2DMKp8mN61+LZMPiGOdDpp2j4M1GYcGyewgk7+0Ovr6UCkHnKHcT
7B4DK5oLuuHtA9CGy6tw4vIqZbi8yoe4Tmf1/VFwuEVysG/PGBDtnhAI6xr4
ZTt3k236WTHg/Kz0cH5WvyqvoWYbJnc2GChvRDBy9AyDofF8lrLBH9enPnIS
0y/3CMJnPkY8x9ZzgopSoBFbzyfaXveaCk8golkpWDnZBQnV57M57dAw/eoU
qYvKW8h7OOAJLb1QKjJakT4yDoPdx3/eT3sHTM4kP05YtYH5rK323g40PA4l
5Jmfz4VbNDHCrQ7VoNTOHml+Drt+zpY1TCvKAj7/25GmeG9AWv3JWtMrDNy6
qIg3TBsB9N1ULkOhGWBrMnc0awYDFQed2Ho5nYBqmSA4XucxxAexOt7FzqNi
nN8Cx+/8Fn7QzxROiMnDQc0Iy7prNmC3oE6+7if5Jt9nhJmKDZYzfSM/V+lC
flIZ+7rfAoP3GEdPyC6gkuY57+rJCw2WFOPr82WRysKbM2QQWRSWNH1FsQdm
7+Vu7E+Z2wUSFL8Igp+RLVUQnS12/k97t2K5kILFdKJ4CcKNOqJKix5DpJU2
91NyZUaG19legUdZjmjnngpA3yZyrH/46326xaOlnY6Z1RBPxnvpmHw5rL6U
pc7A/+P7+j/L/2uVrygbX9tHtiK2+p2fnNNlO35yvZs6QoGaF7PSarfaubzt
k8+DUl5N+vJdjIk5QDg8c5vj/bd/2P1IqHSKwcQrcLs9vlY3Owa+LUboEJ9+
GHWJSYifywR2seM0d9bGgDzVL6s/qB/qq++pnS5OAe2fRz4kEYyD1uD1wcjQ
fghNK9e1K/KE9tu8J1+SjAOXl4mdQGQ/HJdWNfX0dQObuHSvT1heWcO7Uw7L
h+3f9t1cdgaENiOkB8s1E77FaGF5yY/Xu3QqisAj58Lhw8LtIHEl+7rPGhqO
EPREDPVpgT6rnGhaYCicdv6ewYmd13TtaoaaF8TA79202xi3E5QYdq6V/5V8
138a/9X3/if/65w7o3V4dncGzN+7lKRYNwR5p3xaSS+NQMAv/F1ZvD8H8PnE
wTSTmjJV4xBE+lsHsxiPADHPDHGsZwQ8W1bmmcHy7FPB4fSXR+A8Xru36OEQ
8KFGSds0DQH/nafiT7D8lJCF9lyoLyyNGsjsaB6CcAJjMmGTEYjao0WiEOYN
Wt7TfsewPIvr9KgBlqvKBLqwXPIAqfCdDQiWM6QG/LT7G/q7WuJ8Vj/ifFbd
cD6r5ThegOM1OE48SUWjy+QHzZGuamJcE9DjlChoPtALFId49vEkxYLhx+sN
yk19EPeQyM/Ffxwu4XxTlbg2fVOZcL6ppDgehfNTBRz3ulxDLNgaBCLJ7FVe
jT1gsbv1QkvZBDC/uB53SdYNyqWIjROOvocW6nGJE+7/+/6o8zjfUQ7cOk0S
t067xjK3V/tYENApuGTOLI/CUQ2TE8FLA1DYo7FDK9gdtEtOHg/D6pNJTiSd
gdWnjfpwvIu5NwR7er65vDIK2oJHbkxiy38XEjx54vldKPE4dzPXvxikHrnR
Ktf/8X6JZN/B0A05ggiaW74U+7khjrYfyrGfiz4hjFcm6AqDCTKYMOznljdL
PWFYHoAQ72DLExbuYOIezjOKXQd617wUJjccBjfhcqMn1wxBz6PmmyN1FnzW
P4O0fsNAs8qE2jVPR3iId1IW86IdbvsQaPjTTUIgbr6I4OYLJW6+CLftSdXV
GEVNWj3feI5mr7ncxnM0iacGjT7eqIB9RfGRF760wllVdjPyvdjxMEpJ0Mr6
Hpo+9dWZ0RZhv/+dSnt0/nX8b//TuHJdpWrHy6eQNzGxcgJpg/Zj+H5q+pOg
b3Zwl4xFBlCzyN5/ojgAxsc9Ly7cHwPlFLJbd84VgUGfbgVVwRBQCR3SFJQa
AarzNXfB5SWcjuiiLOssB5fe4E6uYAxI0ROPnebJAXXGRnyzqiEweU6rnqEx
Amwqbx2u1yeA/4d7I1SoPEh2TFdc6MKA/47y19E9frA3mvnsBeunYJD+NdJj
HgPPcD5yr3/nI8eEO6d+jTunDsSdU3/ElR//XXnLVfnbahFXAP3SJUpEyAuC
JjImLNbzmfmplxyuuoGngHDOsd5ceH1f6N7IMAY+n9wn86XSAnayawZdyY2A
aWo1sofYenLqT+29WqcC2s45ZnGvrSCT54lM3/r5F9Xmvqbae3Nf04jb15C2
bfrImfzOR+7CTNCaDe8ZOOleembw/GVwG1BcW8TWc0MqPIJotymUMUiGpjIm
gg4BGY/J+vMFjBcxQq/vwmeZQ7t00p5Byvhh6rlZDLgclzqgMEEFvAN0gQUT
omASx1a3vn/hw2tLDLBYRFwvM/2gfn8c4n6UbJwX22Vfb9XX7EfEdQIs7VHU
kDP4ZmN/RH/7a4aaxDBqKEjkmunkICQHjiZpnh4FFWIFPavPX0D31cOJ8pJ6
4NwX73AoeBLi4URP+vA7uH1hTPOQ2xBM1bR+diAfAaXVT8pZfpUg4mqXQWLa
DLvaz8fsfz0JMY3P4qXuFwP5y0Q5X/NeGOxXSjwsNgH0C278OekF8EqJW/MO
ZzPItrvuViSdghwNOndmyQQgW2ldWySugkqm+DVyawxQfkzO5RMOhtVC7Z0j
OTkwSKMU82wUAz5fglXjlpNhJKB9TmBvPYReN5KSmZmC+U78CF0ieeBExw0k
EHlBpIBjtt3aPy4u6dk+JtPuTIKOl0U/tdkmoN+174R2f+8vy3uQ545of3KG
3Ydmo3UG0GDJUBto5dkBJsNB3Gst2H2pB/vbsdYR4K5IGut5OwgkEsv+U/dK
wMixgX2KexgWKjD27h/+eJ7hV7zwd88vF+GeXw4RO86xQwA77gVbv9maYNcb
7Ks2u5y6IENl/oLQRW+49GIniWc2GtZousViNDv/8OfamvEenDSxB9LxG5ZO
eNg45VC7j4WsA24EFejnEbxB6D0H+NafG73iHFW//twolUQPY0uQDTjyX5lo
IpqEexQowaaJ9r+ZDs/v+oeEffCDSdlb7dlP0fBkOfLoks0f75duhb+Iq2ki
eM5E/aQanoCiWUoNb6keKB9/euMWUTpY7rugfSdkAvLCD5+nYu2FqLTLUxa6
uUDAXDvI3zMOHy04vd/y9/3DxrPvgMKg+oFSCM8uLJg93gbnzFYiiPgmgfAv
33OBdwr3notf1VOI87tWwvldn8T5XX+x7Avv6MuBd/s5884OlMDxxq6fgnkY
GItZfXfSIwUEG+TwUyzTwemBk+55DAY4Qip/0Nb5gc6IvkS6aAhwi6dYeGPj
9rPHu06n9FvAId3Cg3tEHSC3wDsqf/38se3g3fo8NWB1vqdzM+sy3NWku73+
HquzgQZSamn80KcWnipfLwN22lflN+4tOH8iz12mBYfl3qzVh1wwdCVleuP+
TFjt3ZqMOaTahCNoNYMKOh583oirsYRERnFejQihPOqTRNU3xKpsfCO/VGPY
35w/+RLRaLfPuC7QgAgmbL6XWVjOsYBwxhdxSZ4RZ2TLRrqnNvPAIXtmWtx4
TJHbq8WLqjcCkDXcudIf1fnyX77HEC8b9x5DvVKWmZcMkRDci851YMkA3ln/
qbYZDJw5HWl2xOIx8JiPHeB1CYKrJNVGtlg9Z/RnRhY/2QB0J8yWiVqCOL/C
j/X7ORKXQ86ZKmtDa2TQuOUndbjCK4a3/lzbKPXDZveD/FBrEJV0w4QP6Dx5
P6+3X4U22EMxhgKC6fnJa8OpYL8d9YZuhsE7Fp/rDiLCIrO6rOrjCEHO5rk8
5ZzvhJh0EWK9IJYdp1+B7L6Py5PfuFLNecEPsX+3AyEQjUSe4/Ln2YHEHlfs
LiIT/uIFpLW3t+6xSwglMNY3MiOSnPSL5H7S2+dBr3jgkOeQGPcBZVvF5e37
q38rne/k7sleM3SGwIes4Wf9I0CnbnerEVbPCy45rE537EGVOPdOzh1nCA1n
Qvusn9uK/RjSIrgGhA7FLS1yBmCmnjY0u35vISE4u+WJFOw/m2o7Ry0CRY9V
DTfuaexV1zHPOAT81ekLzNdooLAu5uc6v1zygXHXyVlEMvdt3xjnOBKo2L3R
X16W3ttdHyqRnUtzOsSzbxB+9U0drP33cdHIhSIafvMLa01ByApOzy837S12
jBoi2vtupbETXkG+43QbJL7cU19LhHRmfRds7RHfPq9JptiRtbYPpV4fo6t8
cvt8zUk8Y17sxH4kh5H1qDWz4N9c59+9lxPvt/dySonWcD4j1oE0lpbjQkIW
QOlDSjiBbf/MqPts35QajNZNiNkyXYDgikTn9TxzUMvHCjzkNCT6spRq3DsO
bbzojffW8VepTotHUkJpT7VF2etlpMe4f2Pcvqu1u5bl04vQnzIKD71ajxA+
37w/VsJcUO9tlImotcNomUwsQj29qVv5SfZrS/EPELrOXbNdU2ZIJU5PPXEa
05lpcST5/hd41ia7NT4ZlBvpTpWdRpEKMjVh4ndv6RaQatEseIIBWWE/ls+l
vX0Ph5r8WVeCPj2SWW9X/UL/f36v/R/V8+FfvucUTwj3ntOCa9m8R2+dAaLG
XSEtzHsgQEPg04Zuxz7KHsanhIPMcmuEthTw/anUhm4Ux5uTXGS+IURcTZJN
p3qQKq+xjf4G5O+YciR/iwQlqjrE3XyGdOZu6nDtqLw97WUf5O2LWV9T8nuI
DE6fXcnEZQ1uxsi0BAcq553E1j0xF/egc18tJFDNo+cSefFJt3SgNLdne7Lz
h9hRZeKgltjt+d5ZRnRRzJkUqZvQaX8VtH2OKZl8dUmnlxYxx9Pl9FTg/Lvp
eeov3xuLp4B7b+z/ae/Lw6nuuv5RZCpkqhAicylEA3vRnCYkZGokQmVMpmTI
mAyRKRVCZCoNkmMmyph56mSITCdNSOn3xfc+577P+/g91/Ne9/P+3ve9fv78
XOfa37XX2vZee6/PWmtQWO7ai/DFcN6n03M2D6vxqf/cfI3WEbf1rCaiZUMN
OxMd36Lj9vPrsIzHRs3iVRqyE+HoUqCPQxb4OtRhvbypyssdqRt8CDk4aYpy
cL2t75+KWRd+Am19yvpT0BqR+6fnaDMtuhq5nRDuoeDLv4fSH9k8LEE2zKtH
5eib5mX66hT+DJuCeSPJdRkaomffocxLyWubuHAzdhfrcnRelN9wsEfi/7k+
l/61Dy+NNd6HV1GYdMfOtB6xsnDLy359jjRS589r84L+rzXaoUg87Eg66+ow
tP3XvH7YVc9pXC11QLcZZRZHyp9AnbjebtH5xVxy0EN88ZOMU0HyZD7YsQa2
S0HnthIMme2tnzyk8Pbzo3jNyh+N5b9OfsMl3krJE2Rdv5rdm5sN+RUetVpU
TcGFglfuD5FhQ9cG629+lhP7b6tPqr7G5Dg4anqf5CF6knBshrYOVQagrbh+
OCQu5u3YZIpM4vkHR5cencvKnttX2/2jxTYdRhZHNB49DxMl75Ni7m/5ax+K
EbhuZyjEiVDOnf5Vb7LUP/7Iz/UJ2K3rSOnfXZn26Wv/QxZEUJ0anI6m4FeS
Urpe1TKjq+ZaPsNLRP/Lzql/t57FZN0kAw47EToMDnUz+7qiOFxvZyOcDp8V
FkGRt77e8F9COXdk1ypcsavdgbo0LRNpvLgpcS7mLmJV6JQKfx7NUplPFP3Q
RrmfKDKeyd8cH7vE9U/8mXr3JMbBNwwosXinxtoHFNxTqoKls4cBNe1jfz+O
1vyv0TNVn26ynOnH4415yjUJyzX/mj8V6LrrzuLULUg089h9vQ4Gsh5+RQSM
joysQmmCu/2l1CnrM75x3VdC68/8o+8ImrRaFL3tzMsvCj5LhzoExkVsmSj4
lYGKZ293LUJbzTa2NhQI/VM9/0/RJ1XfczK+Qot2qkFXDk33fGcUE5ok50lJ
vjj2JPgaO7r/wSl3hRBlHe5dfJf/kvZk/iKDRtIRGcq+MRUwOHir+qeKWkfY
GfEHFL3ZSEyKR2T8VtlQeE5AmvTP47kL4a23NnzUjcmAXSNlht4rhkGJ/8SD
oCEiqFg+ftrsmgjp3INh+9cOw06nfV+O9ROBDc8DuovnAd3D84Bkd3uInOcP
gRcreNAkhofIpazd3UsEdc5YNXnHAHCN19misW4YhK0YBlwxfO/TyqPNgdeA
Pc9gnReGqxwN6IjD8DIFkQJimwcUw/UriRjuJKF++vFsHKQnwz115gpcu7Xc
NRfDYzpZnhViuOqvFe/3XHEGITOtqAoM/y7gml2J4ekXasVMPpZDRm/8RJJ5
LwTcrM2VqRyEnOzDE9ameRCTmOwuz10JeRN979ZtJIFdx15eUEmFifdeUytl
XkJI/6MG8xLsPqgne2zzxXBgW35yn1TzQ8gX86+QGyfBbjzf5x2e74PwfJ8c
Whc52fNCYBcyMWlSshfOrHA6Nbt+JiPZbmem08PtUAuZwtVyoMWLuf8YrlQ/
tEzv9TC6vlZpqMZzJdwdNpvLEzncRdcVvqMe3Tn3zYEEtOBpkzN/7x6jG/vi
cheaZqQLwgLuQ7JS/1PXryTglyt5EPPOB8zTS2n3lYRAcKfC500z2Lo9viPV
dKwBfZLZEdLlPY7KzIbnxtGv1vaMvpuNpomX3VZzNCDppHm/QvydsbFjSCA6
xTuSacSchQRJ8+uf23Lc3eijHcx4dW7sD7IGyePepvWz/ttb99ojR/QRS6pq
Ydy4JZnP72VfJhDkJYs67lrSHdJWp+S94nkTG6jyJqJyhla+iOQjpARFT/cy
Utb5uLXexJkVVeT1u4WBtvLLERJkl4pnDHI+IONtd7Q+Sn0nQVErn5zt2ytk
XOu6Y3Yh9l0uKYmdvQ8OkXEZFxLXrDxNVZcfJmRxQiLt3T33RwTgTtPPuXur
Ls7Df0jFw4++L9QtyXQfaazi4bjBHoK+TMzPa0vAcrve0/bIksHlWfRmY3J9
AOaUEmvGUyIET6Fn3YK1lP1TR+v2r4TI9/kBT8/zHt1O8f8fhHCXZiyiQUpa
heytDyl+bKa7eOzum5xIpVos95oyxf8PYS6eWNSXRZ7X9C7OA2JjJHDrqGN5
NnONjDe7Pal2no0XRLjHkLbpkvEvLTJ9s/fNHE0p75ywNWQ8JDxmTg9pOB++
K/yvfPjsRTPKtZkX0dlTENxF0Eaj+HyFd+TrjEcIohq+ojyTTIofyNdqJa1c
KEpYva3GsMydcl7L+PawZestRQXEp2dPjFH88yIBtXJjFXZ0izE/A01T/HOz
BfiT1zzHHeM5g8h47uHpJgFMnjxjnmOja46TcXEfb8XZdyGnsq3SDKclyfh3
prFvs/IfwPnnd6j454OsNAOJ02rILv1Dc8UFir0aFbt02F/KECJXWU4kF1LW
rbWh8Bghlw5pP+1XpZmm+MlmrEsvSK1fhmTPThuPF1L0o2AsDt+8TpPlsbo9
xTKbX+Zpu3xQeuUGMh7qXk2alYcP52lzUfG0g9QGY0wTxQixDr/SD/zJ/7za
xiEUsXlIRWBT/+SqK5R1GPP1sHS3Lwv6mRV9/EQ3xS77FuCdnh1zzW10lyfj
ZlNbBuf8YZy3fIiKtzy1+pvbw5z6/IEH2tlZdym4K1tdRT/bEuTjWn4gR4qC
++H8Wzcq/q1Yld2W1gI6ZPd53bucl5R5FQQ3JttYU/iSlmt+Dtic+7jgedcb
VXtqMDQRNC7FTNgJ9kEfbVvw0rZBsDWMYGUzLoNzVqXP/Wb74PgmDCZ7DUKm
o15N84pKIIitOkYr2Apfl/rGf54YgV/Wrz8pGxQD6bvTxoG9TbA1bSlty9tR
IDzc3BDaQoAKzZKd1Xyv4XduGoGPiQQxOI9xMxWP8cJFrygzqSi4WlX43cY6
E3x/XJ5chv3/rlD1ELJp9gCZaoPt9aa3QVe/P3b3Twxffmgn8FoA29tNFs+e
+cGrbwzrDs++1zWZRqykPQI1Tag9Xt8ezh7o4OnB8E3VOgWhP7aAb5zTcHPb
CQg0pjGdPadk1g4eM9UXhnudZ0Za3ffB7tQsvVk7CuL8xhVU/MYg1qtprmkj
yPilU9qSryuBMUJz7pwq3x6/NTW2Hpn0KpSevkgLMsXzfOOIMSUJuuRsWOQ/
aG7rXAxR5mK7bCJIEIXjM35/xWd8un/F3UuD5rsPMhKaM2His72CbB8JvuJ4
BRW+8ZsuTdKWEsRWIb0++usXxF74Ye67fn/ta0lzGO9r6UOFa+L4It6/9LWk
uY73tfzxp36X7rG5yn/0uyyiWm8W+Hq713mB/WUYJR7yY2OFqE/+EIyHSR0r
utVMxrk4x90jPo2Cl//M3nXJ9WT8VdmzNwrFYyBwiTuL/Sq5bx3N6hir18Yh
gxBYrMvQVkmJ192+nvqUFQ1D3kPxpGXb2sg4z8HTrQFmo2Bxg/POj2sUXvDq
ModbsukDoEbFB9uK88HU3OLbo+s7KH54Na99Qv0InKcahx8fZx/V72Xx3wsu
IP/LBeRcSJ+fqfTGiestgMqOh3A7MlDZMRC3F4FqfCt8/AQqe03i9vpI9V1u
/LuBVPaqwO3FTzVfQXy+QVT2isXt9WIBPVyk0vOqf6Jnmn/4h907+DbVVPD/
Vrk10Ozcs0nwP30vWAhXEXFzMHqaDEGGuwM6Vg+D/XH1JsdhIrCYtTrQ+9wF
v4xjZ16IDYOr23bJMwPYvUDh581m40iwDdq8FkkPQ7xQd1cD5p/zH8tDewpC
oSuxuWv9+mG4Lv7oYw+RCGbPtLaElF+HxMWeJrs2DIPGI1qSczcR/DMXX3FW
9oWKyaSOlo3DYMbsMuneSYRf11JFalZ7wctH65M45TF5Ng2KtrcTwW9J8Jum
KXcorq7k4VQYhpmcfgX7NiLsct529yCTK9xztgv5gOHT/aYOO1uJQBr1DGaq
egI71Lkbajn6wFdK0dCofBA+enhOpllUwDOWrCDBml7YkP+839F6EKoOM9tN
e5YAQaYZyst6wOmGUd5d24/Q35KvU66aC8X+mjbTzu9BMcqm4MjtIRDh5WVl
ssyEoYMkL9oNRKAT1XmW4DsMbwRCD4qsSoTd68UGq7u74Oqj3Wt6d41Acmla
pEd5NMj5vRj+mNcBNXt6jxa9HYFzLeOqhU9CwVTljui4Yjvo3h8ilsiOwltr
K55WzQC4IRT6NU6qDSodzBh2W4zCft5qPq8KL9hzWWVN/uVWMOGazG8IHoUn
qyzh5jl3cFhRNhzL2grv980YH0sehfWqlt7K5U4QS/Sos3vdAjfs11aF5oyC
Wje9saiJA/RIzRiH328BVk//NtmXoxC2yKkoyaQEEi8XpygdbIT7XI+6eL+N
kvd5Gqr9X24H/7tqpnywd7vieFGpCvYw7n9wiJ8EU/g+X021zy/0PvB34X/X
/8VCOH8L05YC+gewXz+nT4fvHaQxc/lwjAxDpVH7c9ODd6EnM5d+x7NO6PfV
Pml/cwQiJRR52dQiIMz0/EPpwXaQk5JKesKA2SXnkpVizQ3oye95+CKhDdY6
K62t1hgFqXdWH+Sf+IBY/w9h1Vet4GotL6HpPgr5D0/sP3/aA3z7g/oPKrdC
eP+mXcG3R2GXoEjLkQBX8A2ZVi0eaIHGWh2LtoxR8DES38Ru4QjxY7rGPU9a
IDFb2n/o+ejfpodlJt8+s3TdAZUK/sJoqWG4d6xSJe89dq9/zebEnnALPgSk
s66SGQYmuorKxz1E+DYyzxdtx/mizThf9KPzFoXKEh+w0ZUrcsRwcVX9WxEY
bnP04IeN5Z4Qucp2+20Mr7n+dG0Ghj+f8mFTeeYOY4w9z3Iw3EY8cHt+78K8
l/8p+O6P7k827o2Bs5eNNrth+ypBSe3NIUxvuxvz9LbIRMHWUCOeVgyfYT73
7gaG/yzzNWXPugluho5vfTA9n1j3ufMHhitvTPFI2B8G+VPA9ATD1fLvRfFh
+lG++SrFTzUYPvfk2XFgevO9y008guH0L2hynYKDYOKe+34pDL8hSuwwwXDN
91vjJ7f5Q5nAijpjDLf9HdfmjeEzWjwZvm99oSrGz8wKw/saCs4FY3h8bNhe
v3vekGl/iO86hh/lOJCbMGsvKh5sGs6DNZQ8QD+01gOqq3KVUjG8eIrr6tNZ
3LdRhVbnKsSsll2eheH385RfvsDwpCefkHCcK7zP0FMqwnDub+fvlP0n7L6u
ztGqNaWFsJNlk4SuaB/Y94xlxXYNQky9Nnf0L5oCgfe1c7iFKe8c7jFT6hxY
WABL+FfVbQ3A9tWmOHWBfaPU/dZp/ui3vhBO1W+d5g//8+Rj+26U4AIKiYr6
pbN8XQ4xnQpsXlpVvm+vlz8GeRuJE9tHO0G01c+W6eIITP15HJMCsh9LR7Uf
bsT3w3ImemvmtwWg2pje0SjcA1vMqt4+Yx8Cx8L4w8vGcyCtiOmHK0MpWMWe
8ThyhQRc5z+V2/c8Bis9pmidJiJsqzdQbl45DBM6hmdEBOOhPDuzw0ngCUg/
0CsgdZOg8vT3NHPVQNDa9qM5+nEiPCDGGXlPkmDvyO2oZb12wPzdz9iwNBTy
+E5c8ZohgSb72OEqQWOQ9bLMyBF0h/BLcfZ5s3zFco2LL0V2QZC0puQHlXMg
lk2onq13wa3TzcA6LAOb6l2cjE20Yf3iT1qz9S5cdwnRJ6lwgn9FSMOYMQLb
WwOls/eFJ16l66dHJ5GNQ3KkfsFaSNSzn6vfwne5ot7F9B1KEr8Sso9uGeQs
4pu7Xzzoba0nuFP8Ru51pOHJyiHQirpzdYLFGSQbF315hdnl05UZqyrMLtcr
W7vkg8qhi4O46qtFLyxbc39r1JtBMB9wsRIWKIaG95t32lyvgzrjQIH+sDGY
dvrKPaFeBCsL99ZtzqwBnlSffYUlY6D5LPlX7PlCkLiZaGvW9QaifkntNBkY
A1f/vqwLriVgLSX71vJrL5SeeM3r5Ldwn+uF8AcJDLHnONJhaGWK4dkVw/B5
TcQ++1EiaP9ijb6YmACRiz4dOysyDJJ7ZP1NPhJBYt99mYubYiEw0FRTTXIY
suM7X1/rJ8KW8KH3dHvCQap6qq8N208qHST79mD7jMLHLJdlScGgWTCcekh2
GNqyezbcfUcEg9JHTYer/KHmvmMWH+bXtU3M3LTpIkK77zeVOMZrcDHtQ4Kb
3DAUzHTuT+zA5HFteuBj4wHt5mPPojB/b52myBkhzN8LvnbHx+LYFVgcFhd4
FfPran4rM7Rgft05+uObbrJlQ/2Zm5+fcA7DLymGdl/MX+W1rEi7npIEUY03
tz/G5nWxeOuNtZj8Q+Lmd2Lj08Dc6OdraYFhMLiVkLx5kAir3rYvbWtPgQuX
1WOnBYcBO6THGDBcF+dVduK8SiLOq6wqvya8WeoevKbhPaOI6WfDTJtYyf+F
b0lVZ55mgfrz/+vxhfRT9vWIS7VYNpzeV5a0C7PjM/bX97oxO/6r4/x/fB5n
Ljrq2S1/G25E9BNWY37Cvd3aDauw9WlwPMRb1PEZXGzRuynU1QH3fIKnPFNG
IAyvn8aA109LwOunndySmMF23B2GoxZteKMZA4Uh3M4NPzG//Z7aElFhMwCH
Xz/Py/uCxMO6y2ew/dMlMOQ2QUcTzhxPC1yqaweuhs0TfRh+XPyEof8tK9ga
QSqQ9nAC5rxuk/LZd3X0wzqcThN0b3VHueucgm/b/G/P8tUjPnF5MoTKwbY7
e6xWxe4BHuA9Prs/RzK1OOi7cALDa/XqG4EycJvv1fgsrorXK/tAVa/smNTB
JdGdL6DPszPzVJov5CY1Kq5vIIGVdkuy/NVYkHETU8gsvA+Go2L0Vt9IoI/X
DeOjqhtWMvBBm89JG+gUMrh67bVATHhgyey7+qX2sBcZ8hsh+ZFyjFj4Rti+
VrZ9jofpslM79RsTGEnbE4gpy2Crt+WcPOdkLvirHOhBVeu6JDWfDyLbzeNz
544awy2RfJ7nSO217QDHpWLkdm3+XfpISw+fkmAR2c4DOa+WnHxKAomm4sbp
53LwbiAu+MCrKLi/+wLn2V8kuM25eSApxQUaUkZV0qddQMD5lWTkbFxD73ul
z6Ed0HIzmd4gSAlmngq7z52DMtNWcmv4of3IF7/8Ag6Iu5w+PccHS1trmyI/
jgp0NnRIKwyivfp9c/J8TVBoL+MvQaOnDdkS5Ago02JeTgtStxVDVBiaOptV
ZL0yBBnifBVm5Ckqnm2EetISmacPnSbzK4Jdl739saeEPK8HvxRir8WTwK30
40kWbN3+gX881LE5DVtvnJtNO2lrNbB57rUkuFuD/qn6gll+3cQI36tPCUeA
t+3yEnulg8CzrD1l1i6WeP0rWar6V/QmGawCnaxg81v8nIjaNNqsTzsnz4gE
l5KGyjvU5LEkymVHLcrfNl+XW8xgd9C+rlSUaZfbYLIoFqWMz8tvxWdSXPfm
Msq0v1swOXUOvf6DHxJ1UOrchBpi7FaKC/hE4TkwMzdtj7NWIBBq1Fyzoyh1
HQ/y9HoXPqCBtQz1VoH942hDSNLc7wOo3pfi8PclZd9aVbsTJOTQfiolIhLz
gc++m/t9i6+3icq3OuSgrX48bVch2hY3H+9b6N3SY4H3yerpmdtbecfJcXAP
wujcOIwjLZ+EwooQY0bWUSHbPJTlOT+v/Fsjlf6LQtDhjpBS67NeyAHnD19b
4D12isrvvYH7q/Usnql5YbmU+JQBbRFdCwl0J7jas6K/keVZ0dgzz9sZv1Pr
wZCH+JxasxnvXkJKDfPfFbh+qaY04TyKN39Pe6nfHaX+YZdW7wl1IxN09t0j
sSS6g+Q6/59sHC8xDuVTeAjMXSzvK0jQZrDzfMDqCDIe3l+ezoPtA+XdEjzi
q3+Q5XllNN//wixDjeF9ZREZ78uaHz+UsfO88E5XwgEGjaYz+m4oBP9uWU6F
lsaSvYjoay+xiH0HeZ2wye+jcxoAdGAvDWlNECXedHiBfcBuwyaHppQoSjzU
ws3FCtsHFH3sF49bWFDWz3kF1Vn/+WjcFq3b92bIcoYalM1991Kuna37kTIy
fiAI50Flbdx4wUmJjP8hz6njshlDKfsIAReTH/nmUngmelz35FdKKaJvRafv
VZ3mJMsvGb5t8O4IFxrd8CYgrJwSh4pcYB8IWGAfGF/+++j54xfIuM7q6bhP
2HdB56eumMZWMl42nts4F+8jJBMFu16R5bc1mZdTUtpl9Hrh9v8wrydi6s9d
L+z7D3yPym5uMcOTG1DXxmFCUNlisvx3mYkRrS1LUezqK+f6JinxrLLi4K9d
p77kb1AcSfHgpsSzZqji3ZvxePfQAnFwmn/49wmKn74IUNgZCkb7ClhaMD+c
08hTYD12H9mO53tuxvM9I/F8z914vpUJVb7VQvfx2Abrq8mmeXDWVMyMNbsH
thc60EkUfISbjis2dmi5g4Pl+/u3dRvA2Pi6AHfKGOzF+RJEKr5E1V3FcvU+
IRiISrYRXLMPnGfijGb1T6dHz8555R5ILWYNn/ROAqMy9oo9s3lnmuXPhpr9
wcqwwSrgdyisWms22IOt5z38Salj/Nag2x+n0xXoAsm5YoUvsHHayr/eyuF6
i9ht1ggpRYwjBZjnP9SkxzyUqMhGZvbON0tEGpB8wvx+6G/9/WRPWyC6T5tt
mCqUhcbwPAiaSsOHypsc4PylWGFZWxvI1dX58BrDHRtf0v1g1AXSKB8jabE2
HOe/bTgbXxbO1zu5mMUAPdw/vHxFMKUe+NMDuhfZzoih2l9yPy/V7iH/X9hO
f1HJdNoJ+xm9C8XrNoOEWdrFWXwNzpdYT8WXWCzjslThAB/BJZNPOjqGsg9c
wM81eapzLeDlIb8BEUo96shk26x3TH9fPSIdGf49NE83QZlAZrW+OzdktuUR
Z7/ry2bBNLaKFdoeJUSd82cGcUv/OT/HFedX1FLxKzgD1H4Fy6ch5raXpcYO
Ecjx87x+TsVy9vJVuqJMAUPRyHQTVITrrTLkRErg5AGUERjfU75OiZJP8VPb
Td1ekcB80+ixdCZFP60VftkiB3+oHLY/afmonFJ/j4vLQE70MCt6cZkp28+b
wq/4d9dr2j9O3CPkQAfFZznEDs0Mo9zAuDn5X+C8C2aqOoTKS36uvGhui1p2
ybg1jOuR+/tsmuhUEyPsRQy7SQNXn1Dq45VU9S0NfqVEyDPocAtsWEWel5ui
46rkl1MqlyXeXM2WpvBMJo9bvXrZsAwt2Uh3dGBA8r9MDwvVrTqO8zGyqPgY
PxMXTXyQ3oti5Ip0+Xgo/SAW7+9xaZGVJzCKquvskqH0ixm7d7XXjrtFJSa9
OZD3A4WP4a2f8xIGlqHUjB1Kprco+N8lvwjO01hOxdOQ5xB56Z4kRthW+IDt
5J94Go2G19R+R3XkWxg/F8x1pvA0Zlx96foSWFB17D2GJou1f7ucR3D+hgYV
f+ND2c8CNrGh/PSfRY53kik4s0HObeVeBvSJ5mLibzcKvtD4zQvwOnK2R7nm
hNEhCd8btFy9FD18x/PjtlLlx91Y+S3OXFUVBJes1zG8rAVCvBlms+97r3Ov
7JGvFwcljhy+9hkEFea8ebPfnTYrFH5fywbRkzMPX7uJA0fPqe+z+Db8PthD
dR8sY/OZ+ZTwCF7Tmh9xM4iFD4rOhFUDJDjBtjzc0i0aGiw9LA3EE8BU3NnV
ewLzP/H7IA/VfZB++Xze2QeqvLPlT6plOWJWgu3HRE1JXT7QavWa41nZCoTY
vXz3A0k0b6cJU6SBNWtD5vRG6/r+4tPwVlT0iSDVXkpEb9B8H6ua8EPnJ2ly
EL3Zlu07aggoI21+/QsRjgW8kHkEy30CiYcSfEFOLo715RAJWE31vxd4nYHT
kQckUkfD4BENH7LE5OTs0lg0+uYySAYl63fbXYbapjN96dg4B/F8Lg2qfK6l
dDz6Yca0oLElT3RT/neksf3m/PrxkzSX6upCOevsv3+xb0Lhz+bzPpYuagXG
8ifIaFn6tfEj2Si6dl7O3V/2ZjP6ByC7+H119Nd90UP8XlCsdOs4Y7ce6nzt
SxR9fYLcl8T/Xzy/NIpP+7sYhMCE5zuVTm8jMEdX9tdi8110NsA28LEmlBx5
YcS41QLuyzhvnM1ro1F8VEm8pQk++/WqtrTug3tXXUVm19UJPN9qhCrfauRe
Kw/mcaAg/eglufe6kDxx/h5kaKxpfni4HBWcjM8QWvEM6Rng55dzY/3KqWjU
wPtx2oEmEJ3B89peFM1cZzx4AaXm6Cgckj2FRvD5TpWU6pvYyqP1ojzi9byU
cz9mqnqr1KMNhJEriycFn1L28414HtMZqjym83g+zk6qfJwHCY+r1c+XImHt
kR+aDDko3G3+u0Z4vsl35r/mmxx+XBTKF5COkrYpv1r5MAW1D87/ntY9PrrG
yR/FOttldwy4opW4/AvZZaE6hOsf/bjBYxGFEiKV5T5V+aARXD/Z7V92elme
Q2IzfQQFH1vUhY/fwnYwQX3qJOqWkZbYzLKHXL/0Xz2nFpJnqexT2pXyt9AB
g/n7Ywn+XvF7yZNdSx+ZEvQPI1UbJkuyvb5yfaky1t2NIh+eSa5j2EI+j+q8
L47XtWxBdqHyEgHnhf/28/Rfreu4TUljP0vlDsKOABHVKz4byfKkq63Mr0uW
JNxM0qr4cpPiF4npBwaI0m9E3GrWNgmrKf3s1hIy30gos6PfBwU96owo97XA
f7OfudC59nfVt4yOcTX7kCBGKOr2ibULHSbz9oevIqbv28WQz6RP09cjlDyp
SQbVQNUWWtQtS2950J5yrjV2znxeQvsxv/TgwcElDBS778fvWSeo7lkrCtwV
funkQrFm0s+SyXY401e9NKaV8u5KT/XuqonHy9ip4mUskeolidyn4PCLysDP
dR5goL3yRDw237W/LW6oSB2Cszw/2OhJ1sBmcJdu9n3sPrNY9odv2fD8uXFK
xuUiyOdPThuKI/3Lder+3fXuFsJp/uHfwu/eHAvkLzhJgI9mVgjsvf90YADD
Wemndbdi91zPV6cfhEtVgLZskYpKbC+Umx/lOHd78L9dPbeW+jU8tGoPwMuu
b3soFxF2/g5Yv+TOMAxVxrY1P7YF1ajj404/akBTxK3GiHVhvUktENebXICP
wX9izVTWyyiQY34lZdPUDqde5nppMY+CAl6n6ytep2s9XqcrgKFOeNFgACRK
vvsG5U1ACNqj6MozBsrXHZK/5V8F1QCFdenY+AJ1J+4/n83vWOC9ohbnz3zA
+TN9OH+GFa8H1UFVD+ouzr9VpuLfKj6WEv7SEQv89Csjpb2zoW7d6XGfjySI
CBxJFBXwg+TsbzfCH8eDomhj8dAUCcRxfqwAFT/22F67Lw1d40ij223dyBtB
zG+YnHsnTxBfrv6+uh09MTCLT65nghE/nbn9552j97W6mA8EFtO03HH2Pjh8
ZJfe7tGF47Z6C8QZozgJHCmqqSCZyMF3f/UwLK0vDWMbJML/AY2Snho=
      "]],
    Axes->True,
    AxesLabel->{
      FormBox["u", TraditionalForm], 
      FormBox["v", TraditionalForm], 
      FormBox["\"\"", TraditionalForm]},
    BoxRatios->{1, 1, 0.4},
    ImageSize->{360., 281.487264522269},
    Method->{"RotationControl" -> "Globe"},
    PlotRange->{{1, 13}, {0, 10}, {0., 0.9524006728623182}},
    PlotRangePadding->{
      Scaled[0.02], 
      Scaled[0.02], 
      Scaled[0.02]},
    ViewPoint->{0.4020190277953035, 2.015183488647946, 2.6883854277932713`},
    ViewVertical->{0., 0., 1.}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", 
   RowBox[{
   "Input", "[", "\"\<Enter an integer number to factor:\>\"", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DistributeDefinitions", "[", "n", "]"}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"**", "**", "**", "**", "**", "**", "Sieve"}], " ", 
    RowBox[{"Region", "**", "**", "**"}]}], 
   "******)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Maximuma", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Firstb", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Lastb", "=", "2"}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"**", "**", "**", "**", "Factor"}], " ", "Bases", " ", 
    RowBox[{"Bounds", "**"}]}], "*******)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Rational", " ", "Factor", " ", "Base", " ", "Upper", " ", "Bound"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RFBUpperBound", "=", "1"}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Algebraic", " ", "Factor", " ", "Base", " ", "Upper", " ", "Bound"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"AFBUpperBound", "=", "1"}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Quaderatic", " ", "Character", " ", "Base", " ", "Size"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"QCBSize", "=", "50"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RFB", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AFB", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"QCB", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AFBSize", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RFBSize", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"d", "=", "3"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LinearPolyLNorm", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CP", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Res", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"factor", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Off", "[", 
    RowBox[{
     RowBox[{"OpenRead", "::", "\"\<noopen\>\""}], ",", 
     RowBox[{"Power", "::", "\"\<indet\>\""}], ",", 
     RowBox[{"Needs", "::", "\"\<nocont\>\""}], ",", 
     RowBox[{"InterpolatingFunction", "::", "\"\<dmval\>\""}], ",", " ", 
     RowBox[{"FunctionInterpolation", "::", "\"\<ncvb\>\""}]}], "]"}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"**", "**", "**", "**", "Load"}], " ", "and", " ", "Save", " ", 
    "each", " ", "step", " ", "calculation", " ", "results"}], 
   "***********)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Loadstatus", "[", "size_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"fname", ",", "s", ",", "Var", ",", "l", ",", "i", ",", 
       RowBox[{"stp", "=", "0"}], ",", "cmd"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"fname", "=", 
       RowBox[{"FileNameJoin", "[", 
        RowBox[{"{", 
         RowBox[{"Dir", ",", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ToString", "[", "n", "]"}], "<>", "size", "<>", 
            "\"\<.txt\>\""}], ")"}]}], "}"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"s", "=", 
       RowBox[{"OpenRead", "[", "fname", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"s", "\[Equal]", "$Failed"}], ",", 
        RowBox[{
         RowBox[{"Return", "[", "0", "]"}], ";"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Var", "=", 
       RowBox[{"ReadList", "[", "s", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Close", "[", "s", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "Var", "]"}], "<", "1"}], ",", 
        RowBox[{
         RowBox[{"Return", "[", "0", "]"}], ";"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Var", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Var", ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"stp", "=", 
       RowBox[{"Var", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"l", "=", 
       RowBox[{"Length", "[", "Var", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "2"}], ",", 
        RowBox[{"i", "\[LessEqual]", "l"}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"cmd", "=", 
          RowBox[{
           RowBox[{"Var", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "1"}], "]"}], "]"}], "<>", "\"\<=\>\"", "<>", 
           RowBox[{"ToString", "[", 
            RowBox[{"Var", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "2"}], "]"}], "]"}], "]"}], "<>", 
           "\"\<;\>\""}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"ToExpression", "[", "cmd", "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"DistributeDefinitions", "[", 
       RowBox[{
       "n", ",", "m", ",", "CP", ",", "Maximuma", ",", "Lastb", ",", "Firstb",
         ",", "d", ",", "AFBUpperBound"}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"stp", ">", "1"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"BasisSize", "=", 
          RowBox[{"RFBSize", "+", "AFBSize", "+", "QCBSize"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"DistributeDefinitions", "[", 
          RowBox[{"RFBSize", ",", "RFB", ",", "AFBSize", ",", "AFB"}], "]"}], 
         ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"f", "[", "x_", "]"}], ":=", 
       RowBox[{
        SubsuperscriptBox["\[Sum]", 
         RowBox[{"k", "=", "1"}], 
         RowBox[{"k", "=", 
          RowBox[{"(", 
           RowBox[{"d", "+", "1"}], ")"}]}]], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"CP", "[", 
           RowBox[{"[", "k", "]"}], "]"}], "*", 
          SuperscriptBox["x", 
           RowBox[{"(", 
            RowBox[{"d", "+", "1", "-", "k"}], ")"}]]}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"F", "[", 
        RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"-", "y"}], ")"}], "^", "d"}], ")"}], "*", 
        RowBox[{"f", "[", 
         RowBox[{
          RowBox[{"-", "x"}], "/", "y"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "stp", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SaveStatus", "[", 
     RowBox[{"n_", ",", "Stp_", ",", "size_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Var", "=", 
         RowBox[{"{", "}"}]}], ",", 
        RowBox[{"Tmp", "=", 
         RowBox[{"{", "}"}]}], ",", "fname", ",", "s"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Tmp", "=", 
        RowBox[{"{", 
         RowBox[{"\"\<Step\>\"", ",", "Stp"}], "}"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"Var", ",", "Tmp"}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Tmp", "=", 
        RowBox[{"{", 
         RowBox[{"\"\<n\>\"", ",", "n"}], "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"Var", ",", "Tmp"}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Tmp", "=", 
        RowBox[{"{", 
         RowBox[{"\"\<d\>\"", ",", "d"}], "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"Var", ",", "Tmp"}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Tmp", "=", 
        RowBox[{"{", 
         RowBox[{"\"\<RFBUpperBound\>\"", ",", "RFBUpperBound"}], "}"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"Var", ",", "Tmp"}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Tmp", "=", 
        RowBox[{"{", 
         RowBox[{"\"\<AFBUpperBound\>\"", ",", "AFBUpperBound"}], "}"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"Var", ",", "Tmp"}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Tmp", "=", 
        RowBox[{"{", 
         RowBox[{"\"\<Maximuma\>\"", ",", "Maximuma"}], "}"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"Var", ",", "Tmp"}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Tmp", "=", 
        RowBox[{"{", 
         RowBox[{"\"\<Lastb\>\"", ",", "Lastb"}], "}"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"Var", ",", "Tmp"}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"Stp", ">", "0"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Tmp", "=", 
           RowBox[{"{", 
            RowBox[{"\"\<m\>\"", ",", "m"}], "}"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"Var", ",", "Tmp"}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"Tmp", "=", 
           RowBox[{"{", 
            RowBox[{"\"\<CP\>\"", ",", "CP"}], "}"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"Var", ",", "Tmp"}], "]"}], ";"}]}], "\[IndentingNewLine]",
         "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"Stp", ">", "1"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Tmp", "=", 
           RowBox[{"{", 
            RowBox[{"\"\<RFBSize\>\"", ",", "RFBSize"}], "}"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"Var", ",", "Tmp"}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"Tmp", "=", 
           RowBox[{"{", 
            RowBox[{"\"\<RFB\>\"", ",", "RFB"}], "}"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"Var", ",", "Tmp"}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"Tmp", "=", 
           RowBox[{"{", 
            RowBox[{"\"\<AFBSize\>\"", ",", "AFBSize"}], "}"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"Var", ",", "Tmp"}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"Tmp", "=", 
           RowBox[{"{", 
            RowBox[{"\"\<AFB\>\"", ",", "AFB"}], "}"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"Var", ",", "Tmp"}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"Tmp", "=", 
           RowBox[{"{", 
            RowBox[{"\"\<QCBSize\>\"", ",", "QCBSize"}], "}"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"Var", ",", "Tmp"}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"Tmp", "=", 
           RowBox[{"{", 
            RowBox[{"\"\<QCB\>\"", ",", "QCB"}], "}"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"Var", ",", "Tmp"}], "]"}], ";"}]}], "\[IndentingNewLine]",
         "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"Stp", ">", "2"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Tmp", "=", 
           RowBox[{"{", 
            RowBox[{"\"\<Res\>\"", ",", "Res"}], "}"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"Var", ",", "Tmp"}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"Tmp", "=", 
           RowBox[{"{", 
            RowBox[{"\"\<NumberOfRelations\>\"", ",", "NumberOfRelations"}], 
            "}"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"Var", ",", "Tmp"}], "]"}], ";"}]}], "\[IndentingNewLine]",
         "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"fname", "=", 
        RowBox[{"FileNameJoin", "[", 
         RowBox[{"{", 
          RowBox[{"Dir", ",", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"ToString", "[", "n", "]"}], "<>", "size", "<>", 
             "\"\<.txt\>\""}], ")"}]}], "}"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"s", "=", 
        RowBox[{"OpenWrite", "[", "fname", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Write", "[", 
        RowBox[{"s", ",", "Var"}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Close", "[", "s", "]"}], ";"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"**", "**", "**", "**", "**"}], "*", "Computing", " ", 
    RowBox[{"Bounds", "**", "**", "**"}]}], 
   "*******)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"AsymptoticBound", "[", 
    RowBox[{"n_", ",", "d_", ",", "o1_"}], "]"}], ":=", 
   RowBox[{"Exp", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       FractionBox["1", "2"], "+", "o1"}], ")"}], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"d", " ", 
        RowBox[{"Log", "[", "d", "]"}]}], "+", 
       RowBox[{"\[Sqrt]", 
        RowBox[{"(", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"d", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"Log", "[", "d", "]"}], ")"}], "2"]}], "+", 
           RowBox[{
            FractionBox["2", "d"], 
            RowBox[{"Log", "[", "n", "]"}], "*", 
            RowBox[{"Log", "[", 
             FractionBox[
              RowBox[{"Log", "[", "n", "]"}], "d"], "]"}]}]}], ")"}], 
         ")"}]}]}], ")"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"CalcBounds", "[", 
     RowBox[{"n_", ",", "size_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"c1", ",", "c2", ",", "c3", ",", "c4", ",", "c5"}], "}"}], ",",
       "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"size", "\[Equal]", " ", "\"\<s\>\""}], ",", 
         RowBox[{
          RowBox[{"c1", "=", 
           FractionBox["1", "125"]}], ";", 
          RowBox[{"c2", "=", 
           FractionBox["1", "9"]}], ";", 
          RowBox[{"c3", "=", 
           FractionBox["1", "4"]}], ";", 
          RowBox[{"c4", "=", "3"}], ";", 
          RowBox[{"c5", "=", "0"}], ";"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"size", "\[Equal]", " ", "\"\<m\>\""}], ",", 
         RowBox[{
          RowBox[{"c1", "=", 
           FractionBox["1", "60"]}], ";", 
          RowBox[{"c2", "=", 
           FractionBox["1", "9"]}], ";", 
          RowBox[{"c3", "=", 
           FractionBox["3", "10"]}], ";", 
          RowBox[{"c4", "=", 
           FractionBox["5", "2"]}], ";", 
          RowBox[{"c5", "=", "0"}], ";"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"size", "\[Equal]", " ", "\"\<l\>\""}], ",", 
         RowBox[{
          RowBox[{"c1", "=", 
           FractionBox["1", "50"]}], ";", 
          RowBox[{"c2", "=", 
           FractionBox["2", "17"]}], ";", 
          RowBox[{"c3", "=", 
           FractionBox["1", "3"]}], ";", 
          RowBox[{"c4", "=", "2"}], ";", 
          RowBox[{"c5", "=", "0.1"}], ";"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"size", "\[Equal]", " ", "\"\<xl\>\""}], ",", 
         RowBox[{
          RowBox[{"c1", "=", 
           FractionBox["1", "100"]}], ";", 
          RowBox[{"c2", "=", 
           FractionBox["1", "9"]}], ";", 
          RowBox[{"c3", "=", 
           FractionBox["1", "4"]}], ";", 
          RowBox[{"c4", "=", "3"}], ";", 
          RowBox[{"c5", "=", "1"}], ";"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"size", "\[Equal]", " ", "\"\<h\>\""}], ",", 
         RowBox[{
          RowBox[{"c1", "=", 
           FractionBox["1", "45"]}], ";", 
          RowBox[{"c2", "=", 
           FractionBox["1", "8"]}], ";", 
          RowBox[{"c3", "=", 
           FractionBox["5", "12"]}], ";", 
          RowBox[{"c4", "=", 
           FractionBox["5", "2"]}], ";", 
          RowBox[{"c5", "=", "1"}], ";"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"d", "=", 
        RowBox[{"Round", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RadicalBox["3", "3"], "+", 
             FractionBox["1", "7"]}], ")"}], "\[Times]", 
           RadicalBox[
            RowBox[{"(", 
             FractionBox[
              RowBox[{"Log", "[", "n", "]"}], 
              RowBox[{"2", 
               RowBox[{"Log", "[", 
                RowBox[{"Log", "[", "n", "]"}], "]"}]}]], ")"}], "3"]}], "+", 
          "c5"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"RFBUpperBound", "=", 
        RowBox[{"IntegerPart", "[", 
         RowBox[{"AsymptoticBound", "[", 
          RowBox[{"n", ",", "d", ",", "c1"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"AFBUpperBound", "=", 
        RowBox[{"IntegerPart", "[", 
         RowBox[{"AsymptoticBound", "[", 
          RowBox[{"n", ",", "d", ",", "c2"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Maximuma", "=", 
        RowBox[{"IntegerPart", "[", 
         RowBox[{"AsymptoticBound", "[", 
          RowBox[{"n", ",", "d", ",", "c3"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Lastb", "=", 
        RowBox[{"IntegerPart", "[", 
         FractionBox["Maximuma", "c4"], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"DistributeDefinitions", "[", 
        RowBox[{
        "Maximuma", ",", "Lastb", ",", "Firstb", ",", "d", ",", 
         "AFBUpperBound"}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], 
   ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"**", "**", "**", "Polynomial"}], " ", 
    RowBox[{"Selection", "**"}]}], "*****)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PolyLNorm", "[", 
    RowBox[{"P_", ",", "d_", ",", "afbu_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"p", ",", "Fp", ",", "cntr", ",", "cntF", ",", 
       RowBox[{"nrmF", "=", "0"}], ",", "l", ",", "r", ",", "x1", ",", 
       "afbt"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"p", "=", "2"}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Fp", "[", 
        RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"-", "y"}], ")"}], "^", "d"}], ")"}], "*", 
        RowBox[{"P", "[", 
         RowBox[{
          RowBox[{"-", "x"}], "/", "y"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"afbt", "=", 
       RowBox[{"Min", "[", 
        RowBox[{"afbu", ",", "100"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{"p", "\[LessEqual]", "afbt"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"r", "=", 
          RowBox[{"x1", "/.", 
           RowBox[{"Solve", "[", 
            RowBox[{"Reduce", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"P", "[", "x1", "]"}], "\[Equal]", "0"}], ",", 
              RowBox[{"{", "x1", "}"}], ",", 
              RowBox[{"Modulus", "\[Rule]", "p"}]}], "]"}], "]"}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"l", "=", 
          RowBox[{"Length", "[", "r", "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"cntr", "=", 
          FractionBox["1", 
           RowBox[{"p", "-", "1"}]]}], ";", "\[IndentingNewLine]", 
         RowBox[{"cntF", "=", 
          RowBox[{"l", " ", 
           FractionBox["p", 
            RowBox[{
             SuperscriptBox["p", "2"], "-", "1"}]]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"nrmF", "+=", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"cntr", "-", "cntF"}], ")"}], "*", 
           RowBox[{"Log", "[", "p", "]"}]}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"p", "=", 
          RowBox[{"NextPrime", "[", "p", "]"}]}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "nrmF", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SelectMonicPolynomial", "[", 
     RowBox[{"n_", ",", "d_", ",", "afbu_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"P", ",", "i", ",", "tmpM", ",", 
        RowBox[{"tmp\[Alpha]", "=", "3"}], ",", "PNorm", ",", "coef", ",", 
        "Ml", ",", "Mu"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Mu", "=", 
        RowBox[{"Floor", "[", 
         RadicalBox["n", "d"], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Ml", "=", 
        RowBox[{"Ceiling", "[", 
         RadicalBox[
          FractionBox["n", "2"], "d"], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "Ml"}], ",", 
         RowBox[{"i", "\[LessEqual]", " ", "Mu"}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"tmpM", "=", "i"}], ";", "\[IndentingNewLine]", 
          RowBox[{"coef", "=", 
           RowBox[{"IntegerDigits", "[", 
            RowBox[{"n", ",", "tmpM", ",", 
             RowBox[{"(", 
              RowBox[{"d", "+", "1"}], ")"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"P", "[", "x_", "]"}], ":=", 
           RowBox[{
            SubsuperscriptBox["\[Sum]", 
             RowBox[{"k", "=", "1"}], 
             RowBox[{"k", "=", 
              RowBox[{"(", 
               RowBox[{"d", "+", "1"}], ")"}]}]], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"coef", "[", 
               RowBox[{"[", "k", "]"}], "]"}], "*", 
              SuperscriptBox["x", 
               RowBox[{"(", 
                RowBox[{"d", "+", "1", "-", "k"}], ")"}]]}], ")"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"PNorm", "=", 
           RowBox[{"PolyLNorm", "[", 
            RowBox[{"P", ",", "d", ",", "afbu"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"PNorm", "\[LessEqual]", "tmp\[Alpha]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"tmp\[Alpha]", "=", "PNorm"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"CP", "=", "coef"}], ";", "\[IndentingNewLine]", 
             RowBox[{"m", "=", "tmpM"}], ";"}]}], "\[IndentingNewLine]", 
           "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"f", "[", "x_", "]"}], ":=", 
        RowBox[{
         SubsuperscriptBox["\[Sum]", 
          RowBox[{"k", "=", "1"}], 
          RowBox[{"k", "=", 
           RowBox[{"(", 
            RowBox[{"d", "+", "1"}], ")"}]}]], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"CP", "[", 
            RowBox[{"[", "k", "]"}], "]"}], "*", 
           SuperscriptBox["x", 
            RowBox[{"(", 
             RowBox[{"d", "+", "1", "-", "k"}], ")"}]]}], ")"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"F", "[", 
         RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"-", "y"}], ")"}], "^", "d"}], ")"}], "*", 
         RowBox[{"f", "[", 
          RowBox[{
           RowBox[{"-", "x"}], "/", "y"}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"Mu", "-", "Ml", "+", "1"}], ")"}], ",", "tmp\[Alpha]"}], 
         "}"}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"**", "**", "**", "Polynomial"}], " ", "Selection", " ", 
    "Parallel"}], "*******)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SelectMonicPolynomialParallel", "[", "intrv_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"P", ",", "i", ",", "tmpM", ",", 
       RowBox[{"tmp\[Alpha]", "=", "3"}], ",", "PNorm", ",", "coef", ",", 
       "Ml", ",", "Mu", ",", "Mld", ",", "Mup", ",", "CPloc", ",", "mloc", 
       ",", "l"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Mu", "=", 
       RowBox[{"Floor", "[", 
        RadicalBox["n", "d"], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Ml", "=", 
       RowBox[{"Ceiling", "[", 
        RadicalBox[
         FractionBox["n", "2"], "d"], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"l", "=", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Mu", "-", "Ml"}], ")"}], "/", "$ProcessorCount"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Mld", "=", 
       RowBox[{"Floor", "[", 
        RowBox[{"Ml", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"intrv", "-", "1"}], ")"}], "l"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Mup", "=", 
       RowBox[{"Ceiling", "[", 
        RowBox[{"Ml", "+", 
         RowBox[{"intrv", "*", "l"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "Mld"}], ",", 
        RowBox[{"i", "\[LessEqual]", " ", "Mup"}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"tmpM", "=", "i"}], ";", "\[IndentingNewLine]", 
         RowBox[{"coef", "=", 
          RowBox[{"IntegerDigits", "[", 
           RowBox[{"n", ",", "tmpM", ",", 
            RowBox[{"(", 
             RowBox[{"d", "+", "1"}], ")"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"P", "[", "x_", "]"}], ":=", 
          RowBox[{
           SubsuperscriptBox["\[Sum]", 
            RowBox[{"k", "=", "1"}], 
            RowBox[{"k", "=", 
             RowBox[{"(", 
              RowBox[{"d", "+", "1"}], ")"}]}]], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"coef", "[", 
              RowBox[{"[", "k", "]"}], "]"}], "*", 
             SuperscriptBox["x", 
              RowBox[{"(", 
               RowBox[{"d", "+", "1", "-", "k"}], ")"}]]}], ")"}]}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"PNorm", "=", 
          RowBox[{"PolyLNorm", "[", 
           RowBox[{"P", ",", "d", ",", "AFBUpperBound"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"PNorm", "\[LessEqual]", "tmp\[Alpha]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"tmp\[Alpha]", "=", "PNorm"}], ";", "\[IndentingNewLine]", 
            RowBox[{"CPloc", "=", "coef"}], ";", "\[IndentingNewLine]", 
            RowBox[{"mloc", "=", "tmpM"}], ";"}]}], "\[IndentingNewLine]", 
          "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Return", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"(", "CPloc", ")"}], ",", "mloc", ",", 
         RowBox[{"N", "[", "tmp\[Alpha]", "]"}]}], "}"}], "]"}], ";"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ParallelSelPol", "[", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"NumCPU", ",", "TMP", ",", 
        RowBox[{"tmp\[Alpha]", "=", "3"}], ",", "i", ",", 
        RowBox[{"iSel", "=", "0"}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"NumCPU", "=", "$ProcessorCount"}], ";", "\[IndentingNewLine]", 
       RowBox[{"TMP", "=", 
        RowBox[{"Parallelize", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"SelectMonicPolynomialParallel", "[", "i", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "NumCPU"}], "}"}]}], "]"}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "\[LessEqual]", "NumCPU"}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"TMP", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "3"}], "]"}], "]"}], "<", "tmp\[Alpha]"}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"tmp\[Alpha]", "=", 
              RowBox[{"TMP", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "3"}], "]"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"iSel", "=", "i"}], ";"}]}], "\[IndentingNewLine]", 
           "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"m", "=", 
        RowBox[{"TMP", "[", 
         RowBox[{"[", 
          RowBox[{"iSel", ",", "2"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"CP", "=", 
        RowBox[{"TMP", "[", 
         RowBox[{"[", 
          RowBox[{"iSel", ",", "1"}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"DistributeDefinitions", "[", 
        RowBox[{"m", ",", "CP"}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"f", "[", "x_", "]"}], ":=", 
        RowBox[{
         SubsuperscriptBox["\[Sum]", 
          RowBox[{"k", "=", "1"}], 
          RowBox[{"k", "=", 
           RowBox[{"(", 
            RowBox[{"d", "+", "1"}], ")"}]}]], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"CP", "[", 
            RowBox[{"[", "k", "]"}], "]"}], "*", 
           SuperscriptBox["x", 
            RowBox[{"(", 
             RowBox[{"d", "+", "1", "-", "k"}], ")"}]]}], ")"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"F", "[", 
         RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"-", "y"}], ")"}], "^", "d"}], ")"}], "*", 
         RowBox[{"f", "[", 
          RowBox[{
           RowBox[{"-", "x"}], "/", "y"}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Ceiling", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", 
              RadicalBox[
               FractionBox["1", "2"], "d"]}], ")"}], 
            RadicalBox["n", "d"]}], "]"}], ",", "tmp\[Alpha]"}], "}"}], "]"}],
        ";"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"**", "**", "**", "Test"}], " ", "Selected", " ", "Polynimial", 
    " ", "for", " ", "Irreduceablity"}], "******)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ChkPlyIrr", "[", "P_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Lst", ",", "fct", ",", "Nfct", ",", 
        RowBox[{"PsblFct", "=", 
         RowBox[{"{", "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Lst", "=", 
        RowBox[{"FactorList", "[", 
         RowBox[{"P", "[", "x", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Nfct", "=", 
        RowBox[{"Length", "[", "Lst", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"Nfct", "\[Equal]", " ", "2"}], ",", 
         RowBox[{"Return", "[", 
          RowBox[{"{", "}"}], "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"fct", "=", "2"}], ",", 
            RowBox[{"fct", "\[LessEqual]", " ", "Nfct"}], ",", 
            RowBox[{"fct", "++"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"AppendTo", "[", 
              RowBox[{"PsblFct", ",", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Lst", "[", 
                  RowBox[{"[", 
                   RowBox[{"fct", ",", "1"}], "]"}], "]"}], "/.", 
                 RowBox[{"x", "\[Rule]", "m"}]}], ")"}]}], "]"}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "PsblFct", "]"}], ";"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"**", "**", "**", "**"}], "*", "Generating", " ", 
    RowBox[{"RFB", "**", "**"}]}], "******)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GenerateRFB", "[", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"TmpRFB", "=", 
         RowBox[{"{", "}"}]}], ",", 
        RowBox[{"urfb", "=", "RFBUpperBound"}], ",", "p", ",", "randP", ",", 
        "cntr", ",", "cntG"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"p", "=", "2"}], ";", "\[IndentingNewLine]", 
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{"p", "\[LessEqual]", "urfb"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"cntr", "=", 
           FractionBox["1", 
            RowBox[{"p", "-", "1"}]]}], ";", "\[IndentingNewLine]", 
          RowBox[{"cntG", "=", 
           FractionBox["p", 
            RowBox[{
             SuperscriptBox["p", "2"], "-", "1"}]]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"LinearPolyLNorm", "+=", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"cntr", "-", "cntG"}], ")"}], "*", 
            RowBox[{"Log", "[", "p", "]"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"TmpRFB", ",", "p"}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"p", "=", 
           RowBox[{"NextPrime", "[", "p", "]"}]}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"randP", "=", 
        RowBox[{"RandomPrime", "[", 
         RowBox[{"{", 
          RowBox[{"urfb", ",", 
           RowBox[{"IntegerPart", "[", 
            SuperscriptBox["urfb", 
             FractionBox["3", "2"]], "]"}]}], "}"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"TmpRFB", ",", "randP"}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"RFB", "=", "TmpRFB"}], ";", "\[IndentingNewLine]", 
       RowBox[{"RFBSize", "=", 
        RowBox[{"Length", "[", "RFB", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"DistributeDefinitions", "[", 
        RowBox[{"RFB", ",", "RFBSize"}], "]"}], ";"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"**", "**", "**", "**"}], "*", "Generating", " ", 
    RowBox[{"AFB", "**", "**", "**"}]}], "*****)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GenerateAFB", "[", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"TmpAFB", "=", 
         RowBox[{"{", "}"}]}], ",", 
        RowBox[{"uafb", "=", "AFBUpperBound"}], ",", "p", ",", "x", ",", "r", 
        ",", "l", ",", "i", ",", "randP"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"p", "=", "2"}], ";", "\[IndentingNewLine]", 
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{"p", "\[LessEqual]", "uafb"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"r", "=", 
           RowBox[{"x", "/.", 
            RowBox[{"Solve", "[", 
             RowBox[{"Reduce", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"f", "[", "x", "]"}], "\[Equal]", "0"}], ",", 
               RowBox[{"{", "x", "}"}], ",", 
               RowBox[{"Modulus", "\[Rule]", "p"}]}], "]"}], "]"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"l", "=", 
           RowBox[{"Length", "[", "r", "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"l", ">", "0"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"For", "[", 
              RowBox[{
               RowBox[{"i", "=", "1"}], ",", 
               RowBox[{"i", "\[LessEqual]", "l"}], ",", 
               RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"AppendTo", "[", 
                 RowBox[{"TmpAFB", ",", 
                  RowBox[{"{", 
                   RowBox[{"p", ",", 
                    RowBox[{"r", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "}"}]}], "]"}], ";"}]}],
               "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
           "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"p", "=", 
           RowBox[{"NextPrime", "[", "p", "]"}]}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"l", "=", "0"}], ";", "\[IndentingNewLine]", 
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{"l", "\[Equal]", "0"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"randP", "=", 
           RowBox[{"RandomPrime", "[", 
            RowBox[{"{", 
             RowBox[{"uafb", ",", 
              RowBox[{"IntegerPart", "[", 
               SuperscriptBox["uafb", 
                FractionBox["4", "3"]], "]"}]}], "}"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"r", "=", 
           RowBox[{"x", "/.", 
            RowBox[{"Solve", "[", 
             RowBox[{"Reduce", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"f", "[", "x", "]"}], "\[Equal]", "0"}], ",", 
               RowBox[{"{", "x", "}"}], ",", 
               RowBox[{"Modulus", "\[Rule]", "randP"}]}], "]"}], "]"}]}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"l", "=", 
           RowBox[{"Length", "[", "r", "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"l", ">", "0"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"For", "[", 
              RowBox[{
               RowBox[{"i", "=", "1"}], ",", 
               RowBox[{"i", "\[LessEqual]", "l"}], ",", 
               RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"AppendTo", "[", 
                 RowBox[{"TmpAFB", ",", 
                  RowBox[{"{", 
                   RowBox[{"randP", ",", 
                    RowBox[{"r", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "}"}]}], "]"}], ";"}]}],
               "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
           "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"AFB", "=", "TmpAFB"}], ";", "\[IndentingNewLine]", 
       RowBox[{"AFBSize", "=", 
        RowBox[{"Length", "[", "AFB", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"DistributeDefinitions", "[", 
        RowBox[{"AFB", ",", "AFBSize"}], "]"}], ";"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"**", "**", "**"}], "*", "Generating", " ", 
    RowBox[{"QCB", "**", "**"}]}], "******)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GenerateQCB", "[", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"TmpQCB", "=", 
         RowBox[{"{", "}"}]}], ",", 
        RowBox[{"uafb", "=", "AFBUpperBound"}], ",", "s", ",", "p", ",", "x", 
        ",", "r", ",", 
        RowBox[{"i", "=", "1"}], ",", "j", ",", "l"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"p", "=", 
        RowBox[{"NextPrime", "[", "uafb", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{"i", "\[LessEqual]", "QCBSize"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"r", "=", 
           RowBox[{"x", "/.", 
            RowBox[{"Solve", "[", 
             RowBox[{"Reduce", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"f", "[", "x", "]"}], "\[Equal]", "0"}], ",", 
               RowBox[{"{", "x", "}"}], ",", 
               RowBox[{"Modulus", "\[Rule]", "p"}]}], "]"}], "]"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"l", "=", 
           RowBox[{"Length", "[", "r", "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"l", ">", "0"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"For", "[", 
              RowBox[{
               RowBox[{"j", "=", "1"}], ",", 
               RowBox[{"j", "\[LessEqual]", "l"}], ",", 
               RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"s", "=", 
                 RowBox[{"r", "[", 
                  RowBox[{"[", "j", "]"}], "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Mod", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"f", "'"}], "[", "s", "]"}], ",", "p"}], "]"}], 
                   "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"AppendTo", "[", 
                    RowBox[{"TmpQCB", ",", 
                    RowBox[{"{", 
                    RowBox[{"p", ",", "s"}], "}"}]}], "]"}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"i", "++"}], ";"}]}], "\[IndentingNewLine]", "]"}],
                 ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"p", "=", 
           RowBox[{"NextPrime", "[", "p", "]"}]}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"QCB", "=", "TmpQCB"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "TmpQCB", "]"}], ";"}]}], "\[IndentingNewLine]",
      "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**"}], "*", 
    "Smoonthness", " ", "Over", " ", 
    RowBox[{"Basis", "**", "**", "**"}], "*", 
    RowBox[{"**", "**", "**", "**", "**", "**", "**"}]}], 
   "******)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SmoothOverAFB", "[", 
    RowBox[{"a_", ",", "b_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Nrm", ",", "L", ",", "p", ",", "r", ",", "i", ",", "exp"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Off", "[", 
       RowBox[{"Power", "::", "\"\<indet\>\""}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Nrm", "=", 
       RowBox[{"F", "[", 
        RowBox[{"a", ",", "b"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"L", "=", "AFBSize"}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "\[LessEqual]", "L"}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"p", "=", 
          RowBox[{"AFB", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "1"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"r", "=", 
          RowBox[{"AFB", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "2"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"Nrm", "\[NotEqual]", "0"}], ")"}], "&&", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Mod", "[", 
               RowBox[{
                RowBox[{"a", "+", 
                 RowBox[{"b", "*", "r"}]}], ",", "p"}], "]"}], "\[Equal]", 
              "0"}], ")"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"exp", "=", 
             RowBox[{"IntegerExponent", "[", 
              RowBox[{"Nrm", ",", "p"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"exp", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"Nrm", "=", 
                FractionBox["Nrm", 
                 SuperscriptBox["p", "exp"]]}], ";"}]}], 
             "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
          "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Abs", "[", "Nrm", "]"}], "\[Equal]", "1"}], ",", 
           RowBox[{"Return", "[", "True", "]"}]}], "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Abs", "[", "Nrm", "]"}], "\[Equal]", "1"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Return", "[", "True", "]"}], ";"}], "\[IndentingNewLine]", 
        ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Return", "[", "False", "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SmoothOverRFB", "[", 
     RowBox[{"a_", ",", "b_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"tmp", ",", "L", ",", "p", ",", "i", ",", "exp"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"tmp", "=", 
        RowBox[{"a", "+", 
         RowBox[{"b", " ", "m"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"L", "=", "RFBSize"}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "\[LessEqual]", "L"}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"p", "=", 
           RowBox[{"RFB", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"tmp", "\[NotEqual]", "0"}], ")"}], "&&", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Mod", "[", 
                RowBox[{"tmp", ",", "p"}], "]"}], "\[Equal]", "0"}], ")"}]}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"exp", "=", 
              RowBox[{"IntegerExponent", "[", 
               RowBox[{"tmp", ",", "p"}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"exp", "\[NotEqual]", "0"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"tmp", "=", 
                 FractionBox["tmp", 
                  SuperscriptBox["p", "exp"]]}], ";"}]}], 
              "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
           "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Abs", "[", "tmp", "]"}], "\[Equal]", "1"}], ",", 
            RowBox[{"Return", "[", "True", "]"}]}], "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Abs", "[", "tmp", "]"}], "\[Equal]", "1"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Return", "[", "True", "]"}], ";"}], "\[IndentingNewLine]", 
         ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Return", "[", "False", "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}],
    ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**"}], "*", 
    "Linear", " ", 
    RowBox[{"Sieve", "**", "**", "**"}], "*", 
    RowBox[{"**", "**", "**", "**", "**", "**", "**"}]}], 
   "******)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"LinearSieveRegion", "[", 
     RowBox[{"Mina_", ",", "Maxa_", ",", "Minb_", ",", "Maxb_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a", ",", "b", ",", 
        RowBox[{"Relations", "=", 
         RowBox[{"{", "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"b", "=", "Minb"}], ",", 
         RowBox[{"b", "\[LessEqual]", "Maxb"}], ",", 
         RowBox[{"b", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"a", "=", "Mina"}], ",", 
            RowBox[{"a", "\[LessEqual]", "Maxa"}], ",", 
            RowBox[{"a", "++"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"Abs", "[", 
                  RowBox[{"GCD", "[", 
                   RowBox[{"a", ",", "b"}], "]"}], "]"}], "\[Equal]", "1"}], 
                ")"}], ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"SmoothOverAFB", "[", 
                   RowBox[{"a", ",", "b"}], "]"}], ",", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"SmoothOverRFB", "[", 
                    RowBox[{"a", ",", "b"}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"AppendTo", "[", 
                    RowBox[{"Relations", ",", 
                    RowBox[{"{", 
                    RowBox[{"a", ",", "b"}], "}"}]}], "]"}], ";"}]}], 
                    "\[IndentingNewLine]", "]"}], ";"}]}], 
                 "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]",
               "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "Relations", "]"}], ";"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**"}], 
    "*", "Parallel", " ", "Linear", " ", 
    RowBox[{"Sieve", "**", "**", "**"}], "*", "*", 
    RowBox[{"**", "**", "**", "**", "**"}]}], 
   "********)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SieveOnKernels", "[", "c_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"intLength", ",", "NumCPU", ",", "Rs"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"NumCPU", "=", "$ProcessorCount"}], ";", "\[IndentingNewLine]", 
      RowBox[{"intLength", "=", 
       RowBox[{"2", 
        RowBox[{"Maximuma", "/", "NumCPU"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Rs", "=", 
       RowBox[{"LinearSieveRegion", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "Maximuma"}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"c", "-", "1"}], ")"}], "intLength"}]}], ")"}], ",", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "Maximuma"}], "+", 
           RowBox[{"c", "*", "intLength"}]}], ")"}], ",", "Firstb", ",", 
         "Lastb"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "Rs", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ParallelSieve", "[", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"NumCPU", ",", "TMP", ",", 
        RowBox[{"Rels", "=", 
         RowBox[{"{", "}"}]}], ",", "i"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"NumCPU", "=", "$ProcessorCount"}], ";", "\[IndentingNewLine]", 
       RowBox[{"TMP", "=", 
        RowBox[{"Parallelize", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"SieveOnKernels", "[", "i", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "NumCPU"}], "}"}]}], "]"}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "\[LessEqual]", "NumCPU"}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Rels", "=", 
           RowBox[{"Union", "[", 
            RowBox[{"Rels", ",", 
             RowBox[{"TMP", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "Rels", "]"}], ";"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"**", "**", "**", "**", "**"}], "*", "Constructing", " ", "the", 
    " ", "matrix", " ", "of", " ", "power", " ", "vectors", " ", "and", " ", 
    "Quaderatic", " ", 
    RowBox[{"Characters", "**", "**", "**", "**"}]}], 
   "****)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"BuildMatrix", "[", "Sieve_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"M", "=", 
         RowBox[{"{", "}"}]}], ",", "l1", ",", "l2", ",", "l3", ",", "l4", 
        ",", "a", ",", "b", ",", "p", ",", "r", ",", "i", ",", "j", ",", 
        "mix", ",", "exp", ",", "tmp"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"l1", "=", 
        RowBox[{"Length", "[", "Sieve", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"l2", "=", 
        RowBox[{"Length", "[", "RFB", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"l3", "=", 
        RowBox[{"Length", "[", "AFB", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"l4", "=", 
        RowBox[{"Length", "[", "QCB", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "\[LessEqual]", "l1"}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"tmp", "=", 
           RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"a", "=", 
           RowBox[{"Sieve", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "1"}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"b", "=", 
           RowBox[{"Sieve", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "2"}], "]"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"mix", "=", 
           RowBox[{"a", "+", 
            RowBox[{"m", "*", "b"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"mix", "<", "0"}], ",", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"tmp", ",", "1"}], "]"}], ",", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"tmp", ",", "0"}], "]"}]}], "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"j", "=", "1"}], ",", 
            RowBox[{"j", "\[LessEqual]", "l2"}], ",", 
            RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"p", "=", 
              RowBox[{"RFB", "[", 
               RowBox[{"[", "j", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"exp", "=", 
              RowBox[{"IntegerExponent", "[", 
               RowBox[{"mix", ",", "p"}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"tmp", ",", 
               RowBox[{"Mod", "[", 
                RowBox[{"exp", ",", "2"}], "]"}]}], "]"}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"j", "=", "1"}], ",", 
            RowBox[{"j", "\[LessEqual]", "l3"}], ",", 
            RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"p", "=", 
              RowBox[{"AFB", "[", 
               RowBox[{"[", 
                RowBox[{"j", ",", "1"}], "]"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"r", "=", 
              RowBox[{"AFB", "[", 
               RowBox[{"[", 
                RowBox[{"j", ",", "2"}], "]"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"mix", "=", 
              RowBox[{"F", "[", 
               RowBox[{"a", ",", "b"}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Mod", "[", 
                 RowBox[{
                  RowBox[{"a", "+", 
                   RowBox[{"r", "*", "b"}]}], ",", "p"}], "]"}], "\[Equal]", 
                "0"}], ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"exp", "=", 
                 RowBox[{"IntegerExponent", "[", 
                  RowBox[{"mix", ",", "p"}], "]"}]}], ";"}], 
               "\[IndentingNewLine]", ",", 
               RowBox[{
                RowBox[{"exp", "=", "0"}], ";"}]}], "\[IndentingNewLine]", 
              "]"}], ";", "\[IndentingNewLine]", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"tmp", ",", 
               RowBox[{"Mod", "[", 
                RowBox[{"exp", ",", "2"}], "]"}]}], "]"}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"j", "=", "1"}], ",", 
            RowBox[{"j", "\[LessEqual]", "l4"}], ",", 
            RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"p", "=", 
              RowBox[{"QCB", "[", 
               RowBox[{"[", 
                RowBox[{"j", ",", "1"}], "]"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"r", "=", 
              RowBox[{"QCB", "[", 
               RowBox[{"[", 
                RowBox[{"j", ",", "2"}], "]"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"mix", "=", 
              RowBox[{"a", "+", 
               RowBox[{"p", "*", "b"}]}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"JacobiSymbol", "[", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"a", "+", 
                    RowBox[{"r", "*", "b"}]}], ")"}], ",", "p"}], "]"}], 
                "\[Equal]", "1"}], ",", 
               RowBox[{"exp", "=", "0"}], ",", 
               RowBox[{"exp", "=", "1"}]}], "]"}], ";", "\[IndentingNewLine]", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"tmp", ",", "exp"}], "]"}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"tmp", "=", 
           RowBox[{"Flatten", "[", "tmp", "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"M", ",", "tmp"}], "]"}], ";"}]}], "\[IndentingNewLine]", 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "M", "]"}], ";"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"**", "**", "**", "**", "**", "**", "**", "**", "Finding"}], " ", 
    "Square", " ", "roots", " ", "on", " ", "Z", " ", "and", " ", "\[Phi]", 
    RowBox[{"(", 
     RowBox[{"Z", "[", "\[Theta]", "]"}], ")"}]}], 
   "*****************)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FindSquares", "[", 
     RowBox[{"Sieve_", ",", "A_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a", ",", "b", ",", "i", ",", "l", ",", 
        RowBox[{"\[Alpha]", "=", "1"}], ",", "\[Theta]", ",", 
        RowBox[{"x1", "=", "0"}], ",", "x2", ",", "Y", ",", 
        RowBox[{"tmp", "=", "1"}], ",", "f1", ",", "f2", ",", "\[Beta]", ",", 
        RowBox[{"tmpPairs", "=", 
         RowBox[{"{", "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"l", "=", 
        RowBox[{"Length", "[", "A", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"\[Theta]", "=", 
        RowBox[{"AlgebraicNumber", "[", 
         RowBox[{
          RowBox[{"Root", "[", 
           RowBox[{
            RowBox[{"f", "[", "x", "]"}], ",", "x", ",", "1"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "\[LessEqual]", "l"}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"A", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "\[NotEqual]", "0"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"a", "=", 
              RowBox[{"Sieve", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "1"}], "]"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"b", "=", 
              RowBox[{"Sieve", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "2"}], "]"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"tmpPairs", ",", 
               RowBox[{"{", 
                RowBox[{"a", ",", "b"}], "}"}]}], "]"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"\[Alpha]", "=", 
              RowBox[{"\[Alpha]", "*", 
               RowBox[{"AlgebraicNumber", "[", 
                RowBox[{"\[Theta]", ",", 
                 RowBox[{"{", 
                  RowBox[{"a", ",", "b"}], "}"}]}], "]"}]}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"tmp", "=", 
              RowBox[{"tmp", "*", 
               RowBox[{"(", 
                RowBox[{"a", "+", 
                 RowBox[{"m", "*", "b"}]}], ")"}]}]}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"\[Alpha]", "=", 
        RowBox[{"\[Alpha]", "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"f", "'"}], "[", "\[Theta]", "]"}], ")"}], "*", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"f", "'"}], "[", "\[Theta]", "]"}], ")"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Quiet", "[", 
        RowBox[{
         RowBox[{"\[Beta]", "=", 
          RowBox[{"ToNumberField", "[", 
           RowBox[{
            RowBox[{"Sqrt", "[", "\[Alpha]", "]"}], ",", "\[Theta]"}], 
           "]"}]}], ";"}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Quiet", "[", 
        RowBox[{"Y", "=", 
         RowBox[{"\[Beta]", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", "=", "1"}], ",", 
         RowBox[{"i", "\[LessEqual]", 
          RowBox[{"Length", "[", "Y", "]"}]}], ",", 
         RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"x1", "=", 
           RowBox[{"Mod", "[", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"x1", "+", 
               RowBox[{"Mod", "[", 
                RowBox[{
                 RowBox[{
                  SuperscriptBox["m", 
                   RowBox[{"(", 
                    RowBox[{"i", "-", "1"}], ")"}]], "*", 
                  RowBox[{"Y", "[", 
                   RowBox[{"[", "i", "]"}], "]"}]}], ",", "n"}], "]"}]}], 
              ")"}], ",", "n"}], "]"}]}], ";"}]}], "\[IndentingNewLine]", 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"x2", "=", 
        RowBox[{"Sqrt", "[", "tmp", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"{", 
         RowBox[{"x1", ",", "x2"}], "}"}], "]"}], ";"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"**", "**", "**", "**", "**", "Check"}], " ", "resulted", " ", 
    "squares", " ", "for", " ", "a", " ", "appropriate", " ", 
    RowBox[{"factor", "**", "**", "**"}]}], 
   "*****)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"CheckSquares", "[", "S_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"f1", ",", "f2"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"f1", "=", 
        RowBox[{"GCD", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"S", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "-", 
            RowBox[{"S", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], ")"}], ",", "n"}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"f1", "<", "n"}], ")"}], " ", "&&", " ", 
          RowBox[{"(", 
           RowBox[{"f1", ">", "1"}], ")"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Return", "[", "f1", "]"}], ";"}]}], "\[IndentingNewLine]", 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"f2", "=", 
        RowBox[{"GCD", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"S", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "+", 
            RowBox[{"S", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], ")"}], ",", "n"}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"f2", "<", "n"}], ")"}], " ", "&&", " ", 
          RowBox[{"(", 
           RowBox[{"f2", ">", "1"}], ")"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Return", "[", "f2", "]"}], ";"}]}], "\[IndentingNewLine]", 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "0", "]"}], ";"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"**", "**", "**", "**"}], "*", "Constructing", " ", "Dependency", 
    " ", "Space"}], "**********)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DependencySpace", "[", "M_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "Nu", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Nu", "=", 
        RowBox[{"NullSpace", "[", 
         RowBox[{
          RowBox[{"Transpose", "[", "M", "]"}], ",", 
          RowBox[{"Modulus", "\[Rule]", "2"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "Nu", "]"}], ";"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"**", "**", "**", "**", "**", "Searching"}], " ", "for", " ", "a",
     " ", "good", " ", "dependency"}], 
   "***********)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ScanningNullSpace", "[", 
     RowBox[{"N_", ",", "SieveRes_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Rnk", ",", "k", ",", "sqrs", ",", 
        RowBox[{"fact", "=", "0"}], ",", "idx", ",", "jdx", ",", "WholeSet", 
        ",", "SubSet", ",", "j", ",", "DepVec", ",", "NullVector"}], "}"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Rnk", "=", 
        RowBox[{"Length", "[", "N", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"NullVector", "=", 
        RowBox[{"Table", "[", 
         RowBox[{"0", ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "NumberOfRelations"}], "}"}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"k", "=", "1"}], ",", 
         RowBox[{"k", "\[LessEqual]", "Rnk"}], ",", 
         RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"Panel", "[", 
            RowBox[{"StringForm", "[", 
             RowBox[{
             "\"\<Scanning Linear combinations of length ``\>\"", ",", "k"}], 
             "]"}], "]"}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"WholeSet", "=", 
           RowBox[{"Table", "[", 
            RowBox[{"i", ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", "Rnk"}], "}"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"idx", "=", "k"}], ";", "\[IndentingNewLine]", 
          RowBox[{"While", "[", 
           RowBox[{
            RowBox[{"idx", ">", "0"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"DepVec", "=", "NullVector"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"SubSet", "=", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"WholeSet", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "1", ",", "k"}], "}"}]}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"For", "[", 
              RowBox[{
               RowBox[{"j", "=", "1"}], ",", 
               RowBox[{"j", "\[LessEqual]", "k"}], ",", 
               RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"DepVec", "=", 
                 RowBox[{"DepVec", "+", 
                  RowBox[{"N", "[", 
                   RowBox[{"[", 
                    RowBox[{"SubSet", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "]"}], "]"}]}]}], ";"}]}],
               "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
             RowBox[{"sqrs", "=", 
              RowBox[{"FindSquares", "[", 
               RowBox[{"SieveRes", ",", "DepVec"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"fact", "=", 
              RowBox[{"CheckSquares", "[", "sqrs", "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"fact", "\[NotEqual]", "0"}], ",", 
               RowBox[{
                RowBox[{"Return", "[", "fact", "]"}], ";"}]}], "]"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"idx", "=", "k"}], ";", "\[IndentingNewLine]", 
             RowBox[{"While", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"idx", ">", "0"}], ")"}], "&&", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"WholeSet", "[", 
                   RowBox[{"[", "idx", "]"}], "]"}], "\[Equal]", 
                  RowBox[{"(", 
                   RowBox[{"Rnk", "-", "k", "+", "idx"}], ")"}]}], ")"}]}], 
               ",", 
               RowBox[{
                RowBox[{"idx", "--"}], ";"}]}], "]"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"idx", ">", "0"}], ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"WholeSet", "[", 
                  RowBox[{"[", "idx", "]"}], "]"}], "=", 
                 RowBox[{
                  RowBox[{"WholeSet", "[", 
                   RowBox[{"[", "idx", "]"}], "]"}], "+", "1"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"For", "[", 
                 RowBox[{
                  RowBox[{"jdx", "=", 
                   RowBox[{"(", 
                    RowBox[{"idx", "+", "1"}], ")"}]}], ",", 
                  RowBox[{"jdx", "\[LessEqual]", "Rnk"}], ",", 
                  RowBox[{"jdx", "++"}], ",", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"WholeSet", "[", 
                    RowBox[{"[", "jdx", "]"}], "]"}], "=", 
                    RowBox[{
                    RowBox[{"WholeSet", "[", 
                    RowBox[{"[", 
                    RowBox[{"jdx", "-", "1"}], "]"}], "]"}], "+", "1"}]}], 
                   ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
              "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
           "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "fact", "]"}], ";"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "**", "**", "**", "**", "**", "**", "**", "**", "**", "Parallel"}], " ", 
    RowBox[{"Scanning", "**", "**", "**"}], "*", "*", "*", 
    RowBox[{"**", "**"}]}], "******)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ScanningNullSpacePart", "[", "Par_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "c", ",", "N", ",", "SieveRes", ",", "NumCPU", ",", "Rnk", ",", "k", 
       ",", "sqrs", ",", 
       RowBox[{"fact", "=", "0"}], ",", "idx", ",", "jdx", ",", "WholeSet", 
       ",", "SubSet", ",", "j", ",", "DepVec", ",", "NullVector", ",", "to", 
       ",", "SubSpaceRnk"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"c", "=", 
       RowBox[{"Par", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"N", "=", 
       RowBox[{"Par", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"SieveRes", "=", 
       RowBox[{"Par", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"NumCPU", "=", "$ProcessorCount"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Rnk", "=", 
       RowBox[{"Length", "[", "N", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"to", "=", 
       RowBox[{"Floor", "[", 
        FractionBox["Rnk", "NumCPU"], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"NullVector", "=", 
       RowBox[{"Table", "[", 
        RowBox[{"0", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "NumberOfRelations"}], "}"}]}], "]"}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"k", "=", "0"}], ",", 
        RowBox[{"k", "\[LessEqual]", "to"}], ",", 
        RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"SubSpaceRnk", "=", 
          RowBox[{
           RowBox[{"k", "*", "NumCPU"}], "+", "c"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"SubSpaceRnk", "\[LessEqual]", "Rnk"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Print", "[", 
             RowBox[{"Panel", "[", 
              RowBox[{"StringForm", "[", 
               RowBox[{
               "\"\<Scanning Linear combinations of length ``\>\"", ",", 
                "SubSpaceRnk"}], "]"}], "]"}], "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"WholeSet", "=", 
             RowBox[{"Table", "[", 
              RowBox[{"i", ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", "1", ",", "Rnk"}], "}"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"idx", "=", "SubSpaceRnk"}], ";", "\[IndentingNewLine]", 
            RowBox[{"While", "[", 
             RowBox[{
              RowBox[{"idx", ">", "0"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"DepVec", "=", "NullVector"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"SubSet", "=", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"WholeSet", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", "1", ",", "SubSpaceRnk"}], "}"}]}], 
                 "]"}]}], ";", "\[IndentingNewLine]", 
               RowBox[{"For", "[", 
                RowBox[{
                 RowBox[{"j", "=", "1"}], ",", 
                 RowBox[{"j", "\[LessEqual]", "SubSpaceRnk"}], ",", 
                 RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"DepVec", "=", 
                   RowBox[{"DepVec", "+", 
                    RowBox[{"N", "[", 
                    RowBox[{"[", 
                    RowBox[{"SubSet", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "]"}], "]"}]}]}], ";"}]}],
                 "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
               RowBox[{"sqrs", "=", 
                RowBox[{"FindSquares", "[", 
                 RowBox[{"SieveRes", ",", "DepVec"}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"fact", "=", 
                RowBox[{"CheckSquares", "[", "sqrs", "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"fact", "\[NotEqual]", "0"}], ",", 
                 RowBox[{
                  RowBox[{"Return", "[", "fact", "]"}], ";"}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"idx", "=", "SubSpaceRnk"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"While", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"idx", ">", "0"}], ")"}], "&&", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"WholeSet", "[", 
                    RowBox[{"[", "idx", "]"}], "]"}], "\[Equal]", 
                    RowBox[{"(", 
                    RowBox[{"Rnk", "-", "SubSpaceRnk", "+", "idx"}], ")"}]}], 
                   ")"}]}], ",", 
                 RowBox[{
                  RowBox[{"idx", "--"}], ";"}]}], "]"}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"idx", ">", "0"}], ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"WholeSet", "[", 
                    RowBox[{"[", "idx", "]"}], "]"}], "=", 
                   RowBox[{
                    RowBox[{"WholeSet", "[", 
                    RowBox[{"[", "idx", "]"}], "]"}], "+", "1"}]}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{"For", "[", 
                   RowBox[{
                    RowBox[{"jdx", "=", 
                    RowBox[{"(", 
                    RowBox[{"idx", "+", "1"}], ")"}]}], ",", 
                    RowBox[{"jdx", "\[LessEqual]", "Rnk"}], ",", 
                    RowBox[{"jdx", "++"}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"WholeSet", "[", 
                    RowBox[{"[", "jdx", "]"}], "]"}], "=", 
                    RowBox[{
                    RowBox[{"WholeSet", "[", 
                    RowBox[{"[", 
                    RowBox[{"jdx", "-", "1"}], "]"}], "]"}], "+", "1"}]}], 
                    ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
                "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
             "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Return", "[", "fact", "]"}], ";"}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ParallelScanNullSpace", "[", 
     RowBox[{"N_", ",", "Res_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"NumCPU", ",", "TMP", ",", 
        RowBox[{"Rels", "=", 
         RowBox[{"{", "}"}]}], ",", "i"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"NumCPU", "=", "$ProcessorCount"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"TMP", "=", 
          RowBox[{"Parallelize", "[", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"ScanningNullSpacePart", "[", 
              RowBox[{"i", ",", "N", ",", "Res"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", "NumCPU"}], "}"}]}], "]"}], "]"}]}],
          ";"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"TMP", "=", 
        RowBox[{"ParallelTry", "[", 
         RowBox[{"ScanningNullSpacePart", ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"i", ",", "N", ",", "Res"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "NumCPU"}], "}"}]}], "]"}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "TMP", "]"}], ";"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**"}], 
    "*", 
    RowBox[{
    "GNFS", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**"}]}], 
   "*****)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GNFS", "[", 
     RowBox[{"n_", ",", "size_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "ParamTab", ",", "TPS", ",", "Init", ",", "PolynomialStep", ",", 
        "ChkPly", ",", "Res", ",", "M", ",", "NS", ",", "ResTab", ",", 
        "scale"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"PrimeQ", "[", "n", "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"isPrime", "=", "True"}], ";", "\[IndentingNewLine]", 
          RowBox[{"ParamTab", "=", 
           RowBox[{"StringForm", "[", 
            RowBox[{"\"\<`` is prime.\>\"", ",", "n"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Facts", "=", "\"\<Nothing to factor.\>\""}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Print", "[", 
           RowBox[{"Panel", "[", " ", "ParamTab", "]"}], "]"}]}], 
         "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"isPrime", "=", "False"}], ";", "\[IndentingNewLine]", 
          RowBox[{"CalcBounds", "[", 
           RowBox[{"n", ",", "size"}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"GenerateRFB", "[", "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"TPS", "=", 
           RowBox[{"AbsoluteTiming", "[", 
            RowBox[{
             RowBox[{"PolynomialStep", "=", 
              RowBox[{"SelectMonicPolynomial", "[", 
               RowBox[{"n", ",", "d", ",", "AFBUpperBound"}], "]"}]}], ";"}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"Init", "=", 
           RowBox[{"StringForm", "[", 
            RowBox[{
            "\"\<Suggested Algebraic Factor Base bound: ``\\nSuggested \
Rational Factor Base bound: ``\\nNumber of sieved polynomials: ``\\nMin(\
\[Alpha](F))=``\\n[Using Murphy's method for monic polynomials]\>\"", ",", 
             "AFBUpperBound", ",", "RFBUpperBound", ",", 
             RowBox[{"PolynomialStep", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"N", "[", 
              RowBox[{"PolynomialStep", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Print", "[", 
           RowBox[{"TabView", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"\"\<Initialization\>\"", "->", "Init"}], ",", 
              RowBox[{"\"\<Running time\>\"", "\[Rule]", 
               RowBox[{"StringForm", "[", 
                RowBox[{"\"\<`` Seconds.\>\"", ",", 
                 RowBox[{"N", "[", 
                  RowBox[{"TPS", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "]"}]}]}], "}"}], 
            "]"}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"GenerateAFB", "[", "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"GenerateQCB", "[", "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"BasisSize", "=", 
           RowBox[{"RFBSize", "+", "AFBSize", "+", 
            RowBox[{"Length", "[", "QCB", "]"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"scale", "=", 
           RowBox[{"Switch", "[", 
            RowBox[{
            "size", ",", "\"\<s\>\"", ",", "\"\<Small\>\"", ",", "\"\<m\>\"", 
             ",", "\"\<Medium\>\"", ",", "\"\<l\>\"", ",", "\"\<Large\>\"", 
             ",", "\"\<xl\>\"", ",", "\"\<Extra Large\>\"", ",", "\"\<h\>\"", 
             ",", "\"\<Huge\>\""}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"ParamTab", "=", 
           RowBox[{"StringForm", "[", 
            RowBox[{
            "\"\<The number to be factor: ``\\nm=``\\nf(x)=``\\nUsing `` \
scales.\\n|RFB|+|AFB|+|QCB|=``+``+``=``\\nSieve Region: \
[``,``]\[Times][``,``]\>\"", ",", "n", ",", "m", ",", 
             RowBox[{"f", "[", "x", "]"}], ",", "scale", ",", "RFBSize", ",", 
             "AFBSize", ",", 
             RowBox[{"Length", "[", "QCB", "]"}], ",", "BasisSize", ",", 
             RowBox[{"-", "Maximuma"}], ",", "Maximuma", ",", "Firstb", ",", 
             "Lastb"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"Print", "[", 
           RowBox[{"TabView", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"\"\<Parameters\>\"", "\[Rule]", "ParamTab"}], ",", 
              RowBox[{"\"\<RFB\>\"", "\[Rule]", "RFB"}], ",", 
              RowBox[{"\"\<AFB\>\"", "\[Rule]", "AFB"}], ",", 
              RowBox[{"\"\<QCB\>\"", "\[Rule]", "QCB"}], ",", 
              RowBox[{"\"\<\[Rho](u)\>\"", "\[Rule]", " ", "PlotNo1"}], ",", 
              RowBox[{"\"\<\[Sigma](u,v)\>\"", "\[Rule]", " ", "PlotNo2"}], 
              ",", 
              RowBox[{
              "\"\<\[Rho](u)+\[Sigma](u,v)\>\"", "\[Rule]", " ", 
               "PlotNo3"}]}], "}"}], "]"}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"ChkPly", "=", 
           RowBox[{"ChkPlyIrr", "[", "f", "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "ChkPly", "]"}], ">", "0"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"factor", "=", "ChkPly"}], ";"}], "\[IndentingNewLine]", 
            ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Res", "=", 
              RowBox[{"LinearSieveRegion", "[", 
               RowBox[{
                RowBox[{"-", "Maximuma"}], ",", "Maximuma", ",", "Firstb", 
                ",", "Lastb"}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"NumberOfRelations", "=", 
              RowBox[{"Length", "[", "Res", "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"M", "=", 
              RowBox[{"BuildMatrix", "[", "Res", "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"NS", "=", 
              RowBox[{"DependencySpace", "[", "M", "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"ResTab", "=", 
              RowBox[{"StringForm", "[", 
               RowBox[{
               "\"\<Number of Relation on sieve region: ``\\nMatrix \
Dimensions: ``\\nDimension of Null Space: ``\>\"", ",", "NumberOfRelations", 
                ",", 
                RowBox[{"Dimensions", "[", "M", "]"}], ",", 
                RowBox[{"Length", "[", "NS", "]"}]}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"Print", "[", 
              RowBox[{"Panel", "[", " ", "ResTab", "]"}], "]"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"factor", ",", 
               RowBox[{"ScanningNullSpace", "[", 
                RowBox[{"NS", ",", "Res"}], "]"}]}], "]"}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "factor", "]"}], ";"}]}], "\[IndentingNewLine]",
      "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**"}], 
    "*", "GNFS", " ", 
    RowBox[{
    "Parallel", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
     "**"}]}], "*****)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GNFSParallel", "[", 
     RowBox[{"n_", ",", "size_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "ParamTab", ",", "TPS", ",", "Init", ",", "PolynomialStep", ",", 
        "ChkPly", ",", "Res", ",", "M", ",", "NS", ",", "ResTab", ",", 
        "scale"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"PrimeQ", "[", "n", "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"isPrime", "=", "True"}], ";", "\[IndentingNewLine]", 
          RowBox[{"ParamTab", "=", 
           RowBox[{"StringForm", "[", 
            RowBox[{"\"\<`` is prime.\>\"", ",", "n"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Facts", "=", "\"\<Nothing to factor.\>\""}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Print", "[", 
           RowBox[{"Panel", "[", " ", "ParamTab", "]"}], "]"}]}], 
         "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"isPrime", "=", "False"}], ";", "\[IndentingNewLine]", 
          RowBox[{"CalcBounds", "[", 
           RowBox[{"n", ",", "size"}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"GenerateRFB", "[", "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"DistributeDefinitions", "[", 
           RowBox[{"PolyLNorm", ",", "SelectMonicPolynomialParallel"}], "]"}],
           ";", "\[IndentingNewLine]", 
          RowBox[{"TPS", "=", 
           RowBox[{"AbsoluteTiming", "[", 
            RowBox[{
             RowBox[{"PolynomialStep", "=", 
              RowBox[{"ParallelSelPol", "[", "]"}]}], ";"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Init", "=", 
           RowBox[{"StringForm", "[", 
            RowBox[{
            "\"\<Suggested Algebraic Factor Base bound: ``\\nSuggested \
Rational Factor Base bound: ``\\nNumber of sieved polynomials: ``\\nMin(\
\[Alpha](F))=``\\n[Using Murphy's method for monic polynomials]\>\"", ",", 
             "AFBUpperBound", ",", "RFBUpperBound", ",", 
             RowBox[{"PolynomialStep", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"N", "[", 
              RowBox[{"PolynomialStep", "[", 
               RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Print", "[", 
           RowBox[{"TabView", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"\"\<Initialization\>\"", "->", "Init"}], ",", 
              RowBox[{"\"\<System Info\>\"", "\[Rule]", 
               RowBox[{"StringForm", "[", 
                RowBox[{
                "\"\<Available Cpu(s): ``\\nOS: ``\>\"", ",", 
                 "$ProcessorCount", ",", "$System"}], "]"}]}], ",", 
              RowBox[{"\"\<Running time\>\"", "\[Rule]", 
               RowBox[{"StringForm", "[", 
                RowBox[{"\"\<`` Seconds.\>\"", ",", 
                 RowBox[{"N", "[", 
                  RowBox[{"TPS", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "]"}]}]}], "}"}], 
            "]"}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"GenerateAFB", "[", "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"GenerateQCB", "[", "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"BasisSize", "=", 
           RowBox[{"RFBSize", "+", "AFBSize", "+", 
            RowBox[{"Length", "[", "QCB", "]"}]}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"scale", "=", 
           RowBox[{"Switch", "[", 
            RowBox[{
            "size", ",", "\"\<s\>\"", ",", "\"\<Small\>\"", ",", "\"\<m\>\"", 
             ",", "\"\<Medium\>\"", ",", "\"\<l\>\"", ",", "\"\<Large\>\"", 
             ",", "\"\<xl\>\"", ",", "\"\<Extra Large\>\"", ",", "\"\<h\>\"", 
             ",", "\"\<Huge\>\""}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"ParamTab", "=", 
           RowBox[{"StringForm", "[", 
            RowBox[{
            "\"\<The number to be factor: ``\\nm=``\\nf(x)=``\\nUsing `` \
scales.\\n|RFB|+|AFB|+|QCB|=``+``+``=``\\nSieve Region: \
[``,``]\[Times][``,``]\>\"", ",", "n", ",", "m", ",", 
             RowBox[{"f", "[", "x", "]"}], ",", "scale", ",", "RFBSize", ",", 
             "AFBSize", ",", 
             RowBox[{"Length", "[", "QCB", "]"}], ",", "BasisSize", ",", 
             RowBox[{"-", "Maximuma"}], ",", "Maximuma", ",", "Firstb", ",", 
             "Lastb"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"Print", "[", 
           RowBox[{"TabView", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"\"\<Parameters\>\"", "\[Rule]", "ParamTab"}], ",", 
              RowBox[{"\"\<RFB\>\"", "\[Rule]", "RFB"}], ",", 
              RowBox[{"\"\<AFB\>\"", "\[Rule]", "AFB"}], ",", 
              RowBox[{"\"\<QCB\>\"", "\[Rule]", "QCB"}], ",", 
              RowBox[{"\"\<\[Rho](u)\>\"", "\[Rule]", "PlotNo1"}], ",", 
              RowBox[{"\"\<\[Sigma](u,v)\>\"", "\[Rule]", " ", "PlotNo2"}], 
              ",", 
              RowBox[{
              "\"\<\[Rho](u)+\[Sigma](u,v)\>\"", "\[Rule]", " ", 
               "PlotNo3"}]}], "}"}], "]"}], "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"ChkPly", "=", 
           RowBox[{"ChkPlyIrr", "[", "f", "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "ChkPly", "]"}], ">", "0"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"factor", "=", "ChkPly"}], ";"}], "\[IndentingNewLine]", 
            ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"DistributeDefinitions", "[", 
              RowBox[{
              "f", ",", "F", ",", "SmoothOverAFB", ",", "SmoothOverRFB", ",", 
               " ", "LinearSieveRegion", ",", "SieveOnKernels"}], "]"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"Res", "=", 
              RowBox[{"ParallelSieve", "[", "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"NumberOfRelations", "=", 
              RowBox[{"Length", "[", "Res", "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"M", "=", 
              RowBox[{"BuildMatrix", "[", "Res", "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"NS", "=", 
              RowBox[{"DependencySpace", "[", "M", "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"ResTab", "=", 
              RowBox[{"StringForm", "[", 
               RowBox[{
               "\"\<Number of Relation on sieve region: ``\\nMatrix \
Dimensions: ``\\nDimension of Null Space: ``\>\"", ",", "NumberOfRelations", 
                ",", 
                RowBox[{"Dimensions", "[", "M", "]"}], ",", 
                RowBox[{"Length", "[", "NS", "]"}]}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"Print", "[", 
              RowBox[{"Panel", "[", " ", "ResTab", "]"}], "]"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"DistributeDefinitions", "[", 
              RowBox[{
              "NumberOfRelations", ",", "FindSquares", ",", "CheckSquares", 
               ",", "ScanningNullSpacePart"}], "]"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"factor", ",", 
               RowBox[{"ParallelScanNullSpace", "[", 
                RowBox[{"NS", ",", "Res"}], "]"}]}], "]"}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "factor", "]"}], ";"}]}], "\[IndentingNewLine]",
      "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"**", "**"}], "*", 
      RowBox[{"**", "**", "**", "**", "**", "**", "**", "**"}], "*", "GNFS", 
      " ", "Parallel", " ", "Save"}], " ", "&"}], " ", "Load", " ", 
    RowBox[{"Data", "**", "**", "**"}], "*", 
    RowBox[{"**", "**", "**", "**", "**"}]}], 
   "*****)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GNFSParallelIO", "[", 
     RowBox[{"n_", ",", "size_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "ParamTab", ",", "TPS", ",", "Init", ",", "PolynomialStep", ",", 
        "ChkPly", ",", "M", ",", "NS", ",", "ResTab", ",", "scale", ",", 
        "loadstep"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"PrimeQ", "[", "n", "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"isPrime", "=", "True"}], ";", "\[IndentingNewLine]", 
          RowBox[{"ParamTab", "=", 
           RowBox[{"StringForm", "[", 
            RowBox[{"\"\<`` is prime.\>\"", ",", "n"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Facts", "=", "\"\<Nothing to factor.\>\""}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"Print", "[", 
           RowBox[{"Panel", "[", " ", "ParamTab", "]"}], "]"}]}], 
         "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"isPrime", "=", "False"}], ";", "\[IndentingNewLine]", 
          RowBox[{"loadstep", "=", 
           RowBox[{"Loadstatus", "[", "size", "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"loadstep", "<", "1"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"CalcBounds", "[", 
              RowBox[{"n", ",", "size"}], "]"}], ";", "\[IndentingNewLine]", 
             RowBox[{"GenerateRFB", "[", "]"}], ";", "\[IndentingNewLine]", 
             RowBox[{"DistributeDefinitions", "[", 
              RowBox[{"PolyLNorm", ",", "SelectMonicPolynomialParallel"}], 
              "]"}], ";", "\[IndentingNewLine]", 
             RowBox[{"TPS", "=", 
              RowBox[{"AbsoluteTiming", "[", 
               RowBox[{
                RowBox[{"PolynomialStep", "=", 
                 RowBox[{"ParallelSelPol", "[", "]"}]}], ";"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"SaveStatus", "[", 
              RowBox[{"n", ",", "1", ",", "size"}], "]"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"Init", "=", 
              RowBox[{"StringForm", "[", 
               RowBox[{
               "\"\<Suggested Algebraic Factor Base bound: ``\\nSuggested \
Rational Factor Base bound: ``\\nNumber of sieved polynomials: ``\\nMin(\
\[Alpha](F))=``\\n[Using Murphy's method for monic polynomials]\>\"", ",", 
                "AFBUpperBound", ",", "RFBUpperBound", ",", 
                RowBox[{"PolynomialStep", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", 
                RowBox[{"N", "[", 
                 RowBox[{"PolynomialStep", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"Print", "[", 
              RowBox[{"TabView", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"\"\<Initialization\>\"", "->", "Init"}], ",", 
                 RowBox[{"\"\<System Info\>\"", "\[Rule]", 
                  RowBox[{"StringForm", "[", 
                   RowBox[{
                   "\"\<Available Cpu(s): ``\\nOS: ``\>\"", ",", 
                    "$ProcessorCount", ",", "$System"}], "]"}]}], ",", 
                 RowBox[{"\"\<Running time\>\"", "\[Rule]", 
                  RowBox[{"StringForm", "[", 
                   RowBox[{"\"\<`` Seconds.\>\"", ",", 
                    RowBox[{"N", "[", 
                    RowBox[{"TPS", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "]"}]}]}], "}"}],
                "]"}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"loadstep", "<", "2"}], ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"GenerateAFB", "[", "]"}], ";", "\[IndentingNewLine]", 
             RowBox[{"GenerateQCB", "[", "]"}], ";", "\[IndentingNewLine]", 
             RowBox[{"BasisSize", "=", 
              RowBox[{"RFBSize", "+", "AFBSize", "+", 
               RowBox[{"Length", "[", "QCB", "]"}]}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"SaveStatus", "[", 
              RowBox[{"n", ",", "2", ",", "size"}], "]"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"scale", "=", 
              RowBox[{"Switch", "[", 
               RowBox[{
               "size", ",", "\"\<s\>\"", ",", "\"\<Small\>\"", ",", 
                "\"\<m\>\"", ",", "\"\<Medium\>\"", ",", "\"\<l\>\"", ",", 
                "\"\<Large\>\"", ",", "\"\<xl\>\"", ",", 
                "\"\<Extra Large\>\"", ",", "\"\<h\>\"", ",", 
                "\"\<Huge\>\""}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"ParamTab", "=", 
              RowBox[{"StringForm", "[", 
               RowBox[{
               "\"\<The number to be factor: ``\\nm=``\\nf(x)=``\\nUsing `` \
scales.\\n|RFB|+|AFB|+|QCB|=``+``+``=``\\nSieve Region: \
[``,``]\[Times][``,``]\>\"", ",", "n", ",", "m", ",", 
                RowBox[{"f", "[", "x", "]"}], ",", "scale", ",", "RFBSize", 
                ",", "AFBSize", ",", 
                RowBox[{"Length", "[", "QCB", "]"}], ",", "BasisSize", ",", 
                RowBox[{"-", "Maximuma"}], ",", "Maximuma", ",", "Firstb", 
                ",", "Lastb"}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"Print", "[", 
              RowBox[{"TabView", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"\"\<Parameters\>\"", "\[Rule]", "ParamTab"}], ",", 
                 RowBox[{"\"\<RFB\>\"", "\[Rule]", "RFB"}], ",", 
                 RowBox[{"\"\<AFB\>\"", "\[Rule]", "AFB"}], ",", 
                 RowBox[{"\"\<QCB\>\"", "\[Rule]", "QCB"}], ",", 
                 RowBox[{"\"\<\[Rho](u)\>\"", "\[Rule]", " ", "PlotNo1"}], 
                 ",", 
                 RowBox[{"\"\<\[Sigma](u,v)\>\"", "\[Rule]", " ", "PlotNo2"}],
                  ",", 
                 RowBox[{
                 "\"\<\[Rho](u)+\[Sigma](u,v)\>\"", "\[Rule]", " ", 
                  "PlotNo3"}]}], "}"}], "]"}], "]"}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
          RowBox[{"ChkPly", "=", 
           RowBox[{"ChkPlyIrr", "[", "f", "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "ChkPly", "]"}], ">", "0"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"factor", "=", "ChkPly"}], ";"}], "\[IndentingNewLine]", 
            ",", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"loadstep", "<", "3"}], ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"DistributeDefinitions", "[", 
                 RowBox[{
                 "f", ",", "F", ",", "SmoothOverAFB", ",", "SmoothOverRFB", 
                  ",", " ", "LinearSieveRegion", ",", "SieveOnKernels"}], 
                 "]"}], ";", "\[IndentingNewLine]", 
                RowBox[{"Res", "=", 
                 RowBox[{"ParallelSieve", "[", "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"NumberOfRelations", "=", 
                 RowBox[{"Length", "[", "Res", "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"SaveStatus", "[", 
                 RowBox[{"n", ",", "3", ",", "size"}], "]"}], ";"}]}], 
              "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
             RowBox[{"M", "=", 
              RowBox[{"BuildMatrix", "[", "Res", "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"NS", "=", 
              RowBox[{"DependencySpace", "[", "M", "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"ResTab", "=", 
              RowBox[{"StringForm", "[", 
               RowBox[{
               "\"\<Number of Relation on sieve region: ``\\nMatrix \
Dimensions: ``\\nDimension of Null Space: ``\>\"", ",", "NumberOfRelations", 
                ",", 
                RowBox[{"Dimensions", "[", "M", "]"}], ",", 
                RowBox[{"Length", "[", "NS", "]"}]}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"Print", "[", 
              RowBox[{"Panel", "[", " ", "ResTab", "]"}], "]"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"DistributeDefinitions", "[", 
              RowBox[{
              "NumberOfRelations", ",", "FindSquares", ",", "CheckSquares", 
               ",", "ScanningNullSpacePart"}], "]"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"factor", ",", 
               RowBox[{"ParallelScanNullSpace", "[", 
                RowBox[{"NS", ",", "Res"}], "]"}]}], "]"}], ";"}]}], 
           "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", 
        "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "factor", "]"}], ";"}]}], "\[IndentingNewLine]",
      "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"**", "**", "**", "**", "**", "**", "**", "**", "**"}], "*", 
    "Full", " ", "Process", " ", 
    RowBox[{"Parallel", "**", "**", "**"}], "*", 
    RowBox[{"**", "**", "**", "**", "**"}]}], 
   "******)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ProcessGNFS", "[", 
     RowBox[{"n_", ",", "size_", ",", "mod_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"T", ",", "Facts", ",", "RunTime"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"mod", "\[Equal]", "\"\<Simple\>\""}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"T", "=", 
           RowBox[{"AbsoluteTiming", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"GNFS", "[", 
              RowBox[{"n", ",", "size"}], "]"}], ";"}], "\[IndentingNewLine]",
             "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"mod", "\[Equal]", "\"\<Parallel\>\""}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"T", "=", 
           RowBox[{"AbsoluteTiming", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"GNFSParallel", "[", 
              RowBox[{"n", ",", "size"}], "]"}], ";"}], "\[IndentingNewLine]",
             "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"mod", "\[Equal]", "\"\<PIO\>\""}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"T", "=", 
           RowBox[{"AbsoluteTiming", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"GNFSParallelIO", "[", 
              RowBox[{"n", ",", "size"}], "]"}], ";"}], "\[IndentingNewLine]",
             "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "factor", "]"}], "\[Equal]", "0"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Facts", "=", 
           RowBox[{"StringForm", "[", 
            RowBox[{
            "\"\<No factor find!\\nComplete Factorization: ``\>\"", ",", 
             RowBox[{"FactorInteger", "[", "n", "]"}]}], "]"}]}], ";"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Facts", "=", 
           RowBox[{"StringForm", "[", 
            RowBox[{
            "\"\<Find factor(s): ``\\nComplete Factorization: ``\>\"", ",", 
             "factor", ",", 
             RowBox[{"FactorInteger", "[", "n", "]"}]}], "]"}]}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"RunTime", "=", 
        RowBox[{"StringForm", "[", 
         RowBox[{"\"\<Total running time: `` seconds.\>\"", ",", 
          RowBox[{"N", "[", 
           RowBox[{"T", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"!", "isPrime"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{"TabView", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"\"\<GNFS results\>\"", "\[Rule]", " ", "Facts"}], ",", 
              RowBox[{"\"\<Running Time\>\"", "\[Rule]", "RunTime"}]}], "}"}],
             "]"}], "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", 
    "Usage", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
     "**", "**"}], "*****)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ProcessGNFS", "[", 
   RowBox[{"n", ",", "\"\<l\>\"", ",", "\"\<PIO\>\""}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
     "Results", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**", "**",
     "**", "**"}], "*****)"}]}]}], "Input",
 CellChangeTimes->{{3.4450422669379997`*^9, 3.445042340851*^9}, {
   3.445042371933*^9, 3.445042452512*^9}, {3.4450424952209997`*^9, 
   3.4450425066359997`*^9}, {3.445042552132*^9, 3.445042587642*^9}, {
   3.445042648816*^9, 3.445042656981*^9}, {3.445042726337*^9, 
   3.445042796571*^9}, {3.445042834163*^9, 3.4450429387349997`*^9}, {
   3.445042983182*^9, 3.4450429849300003`*^9}, {3.4450430210369997`*^9, 
   3.445043310201*^9}, {3.445043425528*^9, 3.445043426134*^9}, {
   3.445043524367*^9, 3.445043905269*^9}, {3.445046104597*^9, 
   3.445046109061*^9}, {3.4460694223502083`*^9, 3.4460694228842077`*^9}, 
   3.446075118479208*^9, {3.446075185669208*^9, 3.446075208349208*^9}, {
   3.446075241979208*^9, 3.4460752430602083`*^9}, {3.4489200711525383`*^9, 
   3.4489200717735386`*^9}, {3.448920106559539*^9, 3.448920118514539*^9}, {
   3.4489867633286314`*^9, 3.4489867823866315`*^9}, {3.452972682300415*^9, 
   3.4529726848744154`*^9}, {3.452972854821415*^9, 3.4529728557754154`*^9}, 
   3.452973317896415*^9, {3.453250573192*^9, 3.45325061421*^9}, {
   3.462419200760724*^9, 3.462419240239381*^9}, {3.462419339192957*^9, 
   3.462419342911646*^9}, {3.462419584377469*^9, 3.462419587026193*^9}, 
   3.474753764430274*^9, 3.474753798699805*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 TabViewBox[{{1,"\<\"Initialization\"\>"->
  InterpretationBox["\<\"Suggested Algebraic Factor Base bound: \
\\!\\(50\\)\\nSuggested Rational Factor Base bound: \\!\\(27\\)\\nNumber of \
sieved polynomials: \
\\!\\(172\\)\\nMin(\[Alpha](F))=\\!\\(-0.7432618800369171`\\)\\n[Using \
Murphy's method for monic polynomials]\"\>",
   StringForm[
   "Suggested Algebraic Factor Base bound: ``\nSuggested Rational Factor Base \
bound: ``\nNumber of sieved polynomials: ``\nMin(\[Alpha](F))=``\n[Using \
Murphy's method for monic polynomials]", 50, 27, 172, -0.7432618800369171],
   Editable->False]}, {2,"\<\"System Info\"\>"->
  InterpretationBox["\<\"Available Cpu(s): \\!\\(2\\)\\nOS: Linux x86 \
(32-bit)\"\>",
   StringForm["Available Cpu(s): ``\nOS: ``", 2, "Linux x86 (32-bit)"],
   Editable->False]}, {3,"\<\"Running time\"\>"->
  InterpretationBox["\<\"\\!\\(3.401539`\\) Seconds.\"\>",
   StringForm["`` Seconds.", 3.401539],
   Editable->False]}}, 1]], "Print",
 CellChangeTimes->{
  3.462419172729724*^9, 3.462419246395891*^9, 3.462419358659734*^9, {
   3.462419408012969*^9, 3.462419421319435*^9}, 3.474753819659268*^9}],

Cell[BoxData[
 TabViewBox[{{1,"\<\"Parameters\"\>"->
  InterpretationBox["\<\"The number to be factor: \
\\!\\(343521\\)\\nm=\\!\\(492\\)\\nf(x)=\\!\\(105 + \\(\\(206\\\\ x\\)\\) + x\
\\^2\\)\\nUsing Large scales.\\n|RFB|+|AFB|+|QCB|=\\!\\(10\\)+\\!\\(22\\)+\\!\
\\(50\\)=\\!\\(82\\)\\nSieve Region: [\\!\\(-197\\),\\!\\(197\\)]\[Times][\\!\
\\(1\\),\\!\\(98\\)]\"\>",
   StringForm[
   "The number to be factor: ``\nm=``\nf(x)=``\nUsing `` scales.\n\
|RFB|+|AFB|+|QCB|=``+``+``=``\nSieve Region: [``,``]\[Times][``,``]", 343521, 
    492, 105 + 206 $CellContext`x + $CellContext`x^2, "Large", 10, 22, 50, 
    82, -197, 197, 1, 98],
   Editable->False]}, {2,"\<\"RFB\"\>"->
  RowBox[{"{", 
   RowBox[{
   "2", ",", "3", ",", "5", ",", "7", ",", "11", ",", "13", ",", "17", ",", 
    "19", ",", "23", ",", "137"}], "}"}]}, {3,"\<\"AFB\"\>"->
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"2", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"5", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"5", ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"7", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"7", ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"13", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"17", ",", "6"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"17", ",", "9"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"19", ",", "7"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"19", ",", "15"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"23", ",", "8"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"23", ",", "16"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"29", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"29", ",", "21"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"37", ",", "20"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"37", ",", "33"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"41", ",", "13"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"41", ",", "27"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"73", ",", "19"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"73", ",", "67"}], "}"}]}], "}"}]}, {4,"\<\"QCB\"\>"->
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"53", ",", "16"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"53", ",", "43"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"61", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"61", ",", "35"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"73", ",", "19"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"73", ",", "67"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"79", ",", "8"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"79", ",", "23"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"89", ",", "11"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"89", ",", "50"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"139", ",", "81"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"139", ",", "130"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"151", ",", "10"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"151", ",", "86"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"167", ",", "42"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"167", ",", "86"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"173", ",", "29"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"173", ",", "111"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"197", ",", "18"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"197", ",", "170"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"227", ",", "107"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"227", ",", "141"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"233", ",", "84"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"233", ",", "176"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"241", ",", "55"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"241", ",", "221"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"269", ",", "133"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"269", ",", "199"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"271", ",", "114"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"271", ",", "222"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"277", ",", "119"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"277", ",", "229"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"307", ",", "148"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"307", ",", "260"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"317", ",", "28"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"317", ",", "83"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"347", ",", "223"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"347", ",", "265"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"353", ",", "72"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"353", ",", "75"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"367", ",", "51"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"367", ",", "110"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"379", ",", "37"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"379", ",", "136"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"389", ",", "285"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"389", ",", "287"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"401", ",", "231"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"401", ",", "365"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"419", ",", "242"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"419", ",", "390"}], "}"}]}], "}"}]}, {5,"\<\"\[Rho](u)\"\>"->
  GraphicsBox[{{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
      "]]}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->True,
   AxesOrigin->{0, 0},
   PlotRange->{{0, 5}, {0., 1.}},
   PlotRangeClipping->True,
   PlotRangePadding->{
     Scaled[0.02], 
     Scaled[0.02]}]}, {6,"\<\"\[Sigma](u,v)\"\>"->
  Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
gY9ctP3aFe2Z6PIf8eHUynJxcyprRy36t6pXlvS7KO+alDTuoY3UfjxfMlr7
XygcK8X5VWbLf4RslM/zeH/MqvZiyFufEiq7MZUSpbiBPO3U1rgmH8tI7bma
1vNTch9XrdrqjPX+K1J7np+Z5lrzlKt2uNOTvd8OSJzmr+LaTJhzRuKJtbSL
jZ+tZc9Nt6RmWyva2WiNY550ftRf4jMbDRlV94mtdna7Dq/jXaXnUdd6j6fd
W2OrHXVgpFONgRLHOMjr0OZG9dpI3BBUueEbfWntv6kJRyyDpTiTGjUt6PAb
+ftEjIP2jDZWTE7i8aecdo755aC1+/8jnohxijphypLzM6X76IHZwO11O372
qet48MuIUKkej7oexzL9bbQ9Su7/fLa89HuXpAemTylmr12bOXd7jfAc4nYz
L76ysi2tDaiWdLHtFKn9yANrdHzxxsxGKo98r/TRQ8NP+0p/F3ld9KmDsZaV
pfbvbd/EbuWOHz7tDxUzusZI7Slbv21Yt3am2rYXimtaO5lSPH/w49KsflEm
svwBeYu1/8bWCeck/rKGpqF/uom27ipdf6dwiSt9f6c0D6m0nuS/1cPnLZXW
ZSnlh0rfqSnlY0p5oNL3Vv/t+yCl71aUvqdQWuevtP5cab200jpevr5Uad2d
0npIpbxFKS4p5TNK8Uopf1OKn0r3qVJerZQHKsVbpftLKW4r5WlK953S/aV0
Pyrd10p5vlK+p5RvK40LlPJDpfxcaRyhlLcrjWuUxgv/6/NIaTylFM+V8mql
fPh/fa4pPR+VxnFKzxel54jSc0cpb///9ZxVGiciLvF8WynfU3oOKuWBSuMO
pfxZKR9QGs8qjQuU8k+l57VSXqo0PlLK85XyFqVxt9L4RSkfVhoXK43X/tdx
h9K4SSkPVxqPK40T/9dxjdJ4TSn/V5oHUBqf/q/jJqVxotK4Q2n+QWlc/L+O
y5TGp0rjHaV5D6XxuNI4RWk8ojS/oTSumbGibZJK9V02j431NpwnqNKbqlTm
Mn7J3mCjUsnfU2MemPMmu2sWUqnsZfx3/ucgX3f6674up8Dl60vt3nt8zJso
X1963afg67yJ8veqmF/lfO7sm2l5E+X7nMAbj//wxjm8cY7fC+4l9sHA7wWP
ckmY6PXAQH+X5+34uzxPwN/lHNcL/E43/xH3N6yl6wWeOn1M75SgaLpe4Od9
TxecN3k4tR/cLN/v/SXQfvq7wddqjnb0oesFPrxJtdCu09V0vcBHtDrdMb1a
YYpj4EvKN5sd9CZTg+sIfshygt3gJpc1uI60H8WWrMvzHsdrcB3Be3kPzd/m
33ka+OTjF/jkHD7BbS58LXd3zCJa7wFufbxN2vf2y8gzeFLyiWnNOk8nz+Bn
xw9dtuqlnjyDRzs6lz8T34o8g8eK/SXgGfzxrXz1X9QrTp7Bl7d5a3/I9bUG
nsFHNPCqdCQiSQPPtB9F0bTl33zXk2fwp49vT7o8cwJ5Bn+/9/yHe5o+5Jl+
V9lFJzqM70Ke+XgQnjmHZ/Bqbz2XH55eXwPP4C5fltyqUqQveQY/9m/G1vPh
w8gzeCV9yLuN+TuQZ/DnSVMXjL1XlzyDlxf7S8Az+AaX1TOin73VwDP45/aT
mpZPTybP4B8t59SZs3UteQY/six09I2j4eQZfO8Q/4ptenQmz+DdnXyKPGjc
njyDGwxz6s+52IE88/E1PHMOz5zDM3ifX/tI1CXP4Fsirq0wrPcjz+B7kpzz
5r/3Jc/gVr1Vm1NPO5Nn8LFifwl4Jh48ZfFqr3vkGbxo0MBurV7tIs/gE+2/
Fni0bBp5Br8/d3KmJqIHeQb3SC87alHf1uQZ/EbUjLY7dweRZ/AOAz/2XXGv
HXnm8xXwzDk8cw7Psn0qhGfwSrs7NDpfuih5Bg+InPWjgb8jeQafP9KrhOnL
4uSZ9pFY9Ht/CXgG3/RyV+VzF8+RZ/Ba0+JdyvjHkmfiSffnLdONIM/g3T6m
VDgTGkiewR2aOWzyaK0jz+AWufHW53+0Js/gDUdY9JwX24Y88/kfeOYcnjmH
Z9k+FcIz5/BM+zb82kfihgaewV1XOaY8a/5OA8/gJ8T+EvBM+0uMi4pa4mUk
z7QfRdGDHQo8nUeewa0vf3Wffa03eQbf1evzlbNT/MkzeAfHIzkppv7kGXxP
hyZDZrZpQZ7B6y7pN9P/RUvyzOfT4JlzeOYcnmX7VAjPnMMz5/AMnv5rH4n5
5Bn8i9hfAp7BPw1aYp41Zh15pn0horbNarZ2EnkGDyyV9KRZVjB5pn0qHk0M
mePvQ57Bw2wyNvstaEyewa0Tza7eCmpKnsGLzTr+aGwVHXnm85PwzDk8cw7P
sn0qhGfO4ZlzeOYcnjmHZ/DCujZWxydNJs/g9YvtcJz4djB5Bk85EuY257wf
eQZ/1jN98wMbD/IM7tZ631rrZC15Bj9UuW6Nxfkak2fws0GHux940oQ88/le
eOYcnjmHZ9k+FcIz5/DMOTxzDs+cwzP489lPt107U9kbnsH7Og/+Hq1qSJ7B
96e8SnUOrUWewR8NHzjG4UsN8gxu/+VNdv37nuQZ/FQ/52pDumjIM/jUigvV
5Sx9yTOfP4dnzuGZc3iW7VMhPHMOz5zDM+fwzDk8/507Ej983T372LGi5Bl8
wNncC09KFCbP4IW22FuW2VaBPIMX+TekwtyWtckz+BG3l/svDqxHnsEr3rs5
9oOfF3nm7x3gmXN45hyeZftUCM+cwzPn8Mw5PHMOz3/njjIOz+BpbVPmr3x4
1RuewX/MmXtjmq8NeQaffmPVvmnLK5Nn4n1GNo8xq0Wewc0KDRvvZ16XPPP3
PvDMOTxzDs+yfSqEZ87hmXN45hyeOYfnv3NHGYdnzuH5z/0lfnjDM3jGgsZh
R+/Zkmfwjt/bNnOo70I+53acFWiieiab9/h+4O/zPFNZedRTxv1yv336j7L5
Fr4uEddl05UL+3SGd7K/e13Mq/QU8y2oPycks+Q+vUp23fl6OdQ/PvhWhEqV
K6u/nZhn0LD5kM+o3/LJ091V29A4vZqof+rmPQ7a5Y1pPiRC1J/97kqZ2Dx3
amdquexQg1o+XzFt2ttC+/QFZP1tyJHXp9Q6U22leSPz9y62hsYReM+7KmZc
2tHQGTSO2DU765U+xURrmnjT4vibYfS7NGJcX63pn/MPj0V7HN5cLnK3UBX6
XZNFe3KDKjZ3GmVHv8vl9ZsVKcb82tiXG/U2NfLRPA/eL1t53w0/tiSd7mu9
aP+Gql7p1ePPU38rLtpfMbN3g0dZ2+m+3iPaX+rNwdptb86lfnjxycfr+pQi
Mm/DdB/7GdQSx/UtufPDN6PeXDb/sNfuw7wUY2FtkzmBHbdVWEjj4o6T3ldQ
qQprU699re/WIIo8f01/t0+tM9OeCPsnvfqsweR5ZeC75jpDIa3XzVYRnWyl
eZ7KYlwfxOYfkkX7hyZGnsjLMSHPg0T7E5sNX1f6wXN6TpUQ7fcPcmqozn+G
nlNof6noPbvml1pLnjuI9k/dow3xbTaOPH8R7a/Z6LtDpdje5Hm1aP/rww1c
RqmleZ6QoB8x6qQSMs/VC/5INepLyDznHvheXWclcXhe8+v7p+LaHiX2v/H4
j/mHRo1zIlOMFtqzhsOrRq/Tk+dnWz7bqlQW2kMdPvTzcQkmz9OsPm9V64pp
J3St0NdhtjTPM1OM6w+z+YfOov2t97823niZJs3ziPavLOOYP/LpGfL8Q7Q/
5N34+Y+7rSHPaH/RviZnZr0ZSZ59Rfu3PuuYmzeiE3lOFe1/GdN7bdu57cjz
DNH+8NNhnb63l+Z5ruzO0xni5PMP6/rlLVTr5PMPoQ55D4xZVjLPfpdzK/1c
983jRqnI3OEpHlbaVcPqzPZz0ZDndI/cQ/oUS+3M7terDHGX5nn2Z/wooJpk
qR29tW+PytHSPE+uGNe3YvMPl0X7bfvP/7eF5jp5XiPan/3P3twf5RPI8wjR
/jI2J88WC5pKnpuI9l8u9Xp2RvNu5NlGtL9nSmDaxrRA8pwm2l86e0W5ls/a
kOcDov2JY5qVHhIuzfP42eT7mjdRPv9g++t9pnz+4cU4k7nqJBuZ54M1Te4Y
9TYyz7OeqZx1VhKH5y7LVINTjNbaptlryueElCXP1VuojPoQa21s6lV9+9HS
PE+oGNd/Z/MPTUT7/7kYMmCD3UnybC3af3tPYtSR7yvJc7po/85SWzZ5mQ0n
z2i/ccTN8xNntZLm00T7tzQ+s9HdpSl5DhHtb+k+an9ikDTPU0O0v5F1xPSt
zaR5noPh+bfoQ+TzD7Or5P+Ql2cn89z1oanGECdxeHb79T5W4vCs8je9Zsyy
lXm++iVfGZ1B4vC8bnu+vikettoWKakL51/JpvmHF2JcX7nHn/MPB0T7M9va
fjn4LoE8zxTtjzgSGTlz72zy3EW0f5NrG/tVl3uS5xqi/fP7jYopUVKa58nz
+93+7pcDhr4s04Q8XxHtLzgwO/WQY3PyvF60/2Py08bN20vzPG53CnZO8ZDP
P5jMLhinT3GQeb726+9L/M/xmsThOezfAlPUSaVlnv1/fW8kcXi2LV6glM5K
4vDcVWH+oYZovzG/f9SEc8vIc+6s3+2vmfPvK5s+48jzVdF+M9Oyb06va8fG
aw5a9wa+E48M9Jbm00T7a4zqNiv8vS959hPtb9G7xaDaGn/ybCfaP3335cYf
NwdI4+IGhc11VvL5h9/fZ5eTeW661my1PkTi8Gz/K68uK/Oc8eu7J4nD86Ff
+6hIHJ5nDyt01pgln+e5pjD/sF60n88/hIr2l+32YVjmpH7k2V+0v0qLAVeN
yxqTZzvRfgtnXZatSW1pPk20Py1xb9maRg15PijaH1Ik2atm0UbkeY5of8ei
5mETh0rzPHMuFuia8slR5vl3P5Q4zadNLvCvfoXE4bnpr+srcXh2q1sgO89H
4rTPw6/rLnF4NrlWOFydJJ/nUZp/mM3aT/PDov1mhfK09/9j/qGraH/797PS
z22rQZ7R/lf+wQtaFqtEntH+575mN19r65NntL/K6v3veq5tSJ7zifanFuuz
LnCLljwH5Basa+jjLPNc89f9KHF4tt9VcKK6sMThOd+vOCOf58n4p2CScbt8
nuf375DP8xyyL1hSFySf51Gaf2jK2g/Pbqz98Gwn2j/2xp7o3StU5BntP/N6
VPuY9XbkGe3PdE36tud5TfJ8TbQ/uVvM8uZ36pJntL97r+npRWd5kmdTN7Ni
umvy+Qf+nSM833haqENKuHz+4QjbrwyeNywptFbvIJ9/mPvr/pI8wHN4s0Kv
8o5J/L/NP+Rj7YfnDNZ+mrdk7Ydn7Ae1faGqTYvmKvKM9s/bXWXj+XJq8jxH
tD9Q46lf4OZGPkc5zI+/b3wpmzfg35PC56ANpuUXq6/KeI+Hi4rv17+RrXsZ
wcqD+1ct9qi54b6M91SoZyObr8B14e3EdQllvwvXxVxh/cxkVh7XZQzf50Hw
wuPZvjHies1mvxd8GPtduF7cDzj3A95boZ5/mR9cX76OGtdXifPvInF9C3y8
fs6g/ia7LgUVOJ//wfXCfJGvc2+HfPEL6Xp9FfM/Cyt1S13dIII8dxLtMRPf
icNnMfF3K/Uo4VQ/MYA8oD21jhUxM4mpSBztmZc55M3cAypa1+Qp2rNya78+
94IeUPwxLLxqW1GX43OhQMi7kXMb0nonzINFBkReHh27WwM/mIfh/nl8QD3g
jfs43+jZpY70fBHxwXHRSpu3hWsSRzz5tNKtp93+GnT/8vVXuI6co52y87zE
9eLrwXC9OMf1Ulo/JtvPUHjmHL9Lab0cXw+G+sFPdpr5dcLZrlQP+OoCdwdq
5vuSf77/BvxwDj+coz2c0ziUcfjhHPFHtp+tiD9/5/L9aWl8xPfNE35k+9MK
/5zDm1L7eXxA+2X79Ir2/53L99FF+2X75on2y/bdFe3nHO1XimN8nT/6A4+r
uO4tFXi0wvz8AIXr2JnVAw8/Pv257wF4bb5fmfBTldUDvoK1B393G4v/qL8d
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
6qajlZppVtD14n/3/wBGIbAD
    "], {{
      {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
D09reVjeWk7t2jNdHz1v5AP/B73KEBc=
          "]], Polygon3DBox[CompressedData["
1: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
fb8no2u2icn/+V58P+IBjkdLdMo718FJcFOXvPNdLnEX/oJ/0aOgH0MO5f7J
URfnna/ohRyFpo7WyBWTP+Jf1AzUDt3g2GiNQS9teWbtQQ1ILUiN1Sa6prmC
3l90rUPNRe2FBj8z+pnhljrB7+KOpF9rB8c+34Rc0D59K74JuaRd8LeCY/DV
Y4O5h5wA1zQKzhXUgNSC1JDtojkIrqoezE1wGr5dKZjrFiQ9WSv4W92e9P5J
wb5HDMEVDYNja07S08cFcyc1KrUqNWl7ze3Ws/+g97NO1ifvGpVaFY3aIbqu
QYvQQ3lO407RuWgH7xzfTvplJ9+s6JxcLe+cTq5unvTPO5lzGzme2pSalNxf
L9Vz67l20TmFXLUxc65pEN07eSnly/rR2urFpKfIafQaV2XOdeRsfLdJcC4n
Z3YSfjvpK/wG/4Ej++etmdHOg7Sme7RmRjujubtGa260Nxq7W7SGRkujmc+N
rhOpF+n5oNfWJS1DTl0r36qSd/+LfEhepCdQNeVz3iU1QJWUzzvCT1rzQYk1
BFrip6QP0An5aI6Ca04L5i44iNhsGsxNaDBy3THB2oweEr0kelT0R+kZ0Tui
ppkZXTP2SvloSnStTi+T/hx8tSrlq9uS/qOHTS97ifCi6BqC/E7/lP4YOY1c
GYNzHTma3HdYcO6mxqiZ+OC86J4yvWV60HdH52RyayE4V1NzDUh6cVZ0T3t4
0p/4PjUztTM99wejez70ftYLPx3ds6F3Q4/nmeiePL15etyLo3tmA5M+RW++
nvL3ssT/9MDHpHz+UHTPnN75YuHbonvy9Obpqc+P1q+Dkv4k9uh5459V8+6F
48NwPzGBb8NRcEcxmLvgALQGmxFwAxrlWsHfM2sXNMiVwj9m1iaDhEcK/4AP
Fc0xY4UPZOaegXCk8PfEdNGcdY3w/sxcBqeNFt6Xmev4xnzro4K1P5xALfdr
Zq64SPgq4Z/QKEVz3hjh3zJzIRw6Qfh/mbm1P5wt/B05p2gNNk74YGZtBmej
zUoHczkcjTYrFczdcNgk4ZLEbdQccPvRwbXIADheeC85tOiaYx6+HlyLUAPA
reWDawM4HW17KDPXU5PA/eWCaxV6UPSi6EG1jK4Z4NIKwbXEEn3D85LepG6k
hkErlA2ubchhZXV+x5xzGz1C+jNZcO+wUfS1N2TuL8EXcHnb4H7ss9H9ybOC
+5HsMdH/OTu4v8mexQfkipD6p9G/tS5zP7BOdH9qbeb+1t+iue6VzP2nutH9
pxcy98PWF8yVL2fuX9WO7l+tydxPoydG/2115l4ZPe+PhDsH93vZI/iQXBbc
vyXG6DeXS7FHf5J+PD0Lehf0LLaRS4Mxv0HvjhqJ335M9zMyb06Gm3mGg6lf
wLPR46TX2TW4P02Pfotwl+B+NJoDrdgiWIuQA+hvtwnODdQEG4VPD64VqKHo
PzcLrq2ood4QPiO4tkLT0O9uHqx1mkZz578y9/duTfm1fN77F6dHc+ebmfuD
p0Vz+z8z9y/xKbjlP5l9jZqIWuyPzLVSvxQf32Suffuk+P8qcy3aN8X315lr
VeJzsvAvmXsv56d4/DJzbd8rxffnmWs1NBK5973M2ql3ygdfZK5t6YHRz/kw
c28MTTJU+KPMWgXNQO27JbOW4B3Q68TneDc8M71RfIx3QY+zTIoH6pWVGlfX
u6oo25e3z6ExWufsi/A/Wu61zP1qevD05t7I3Js/JVqbvZq53zw6WN9Rz+wi
5oP1LZpye+olsRdVWTYh+Jr0wtEY/BYxgU5pk3OscE10CfqE36LeIp7REGiJ
BzL32/FrfJhngrvfyvysaE60wqbMWpQY+yPVY8Qee3o7yUfR+zE/pPzUPeXL
H1O+oSYg//+c8h01C3z4a7SepKYhP/6U8jUcDd/+kvifGgg+KVV0PqQmIH/G
ovPpmYk/9kT3VhokPcceLHuz+eC92f9G94oaJn33eeKnNolvPkv5vnXil+9T
Pu2W8uuXSQ+0S/zBni97aT9n3gv+KPpb8E3Y69sSvZ9ZSHqOPV721p/PvPe7
S/iCnGtk9OTW6G9TNunHfdF6mRoRvfFt0h+dEn/uTXzTOfHjF+l5z0p89lXS
H+0TH36d+LlD4stvEj91THz3nfCMnHsM8NmniV9aJb4jJ1OPN0t88El0L6Rl
4ityPv0Gaga4gD169vvLRO/do1HQLqcEaxc0GlrjyGDtBv+gjcoE9wrh78XC
FZN2Q4+h7ULqpaBpNgg3DtY69Fj3CPcK7veyR74D/wveD4Sj0LjUAHAXe97b
8dfg/UX2tHcL9wzen2BPe5dwj+D9NXqUaM3Dg3uXaM4lwpWDtSiaDu1XJVjr
oenQWicGaz32pPnbixrBe9VoLrRbzWAtBkeyd8ceINyJBkMLnhCszdB09L6q
Bms9NBxrTw3WdvxNB/uFfw3+Ww96ZPTS6gf3ztCk9NrqBWtVNC+9pbrBWph6
i9q3QXCvDg3KfmHZaG2KJkYbf5p5L5mak358MboWhRPY24Jz4QpiiFjCh9Bu
HwT3dtiv+DD4bwA2pV4de3HU9aVTvcA8MUqsEtPUZsQ0sX1JzvUGNUTl1B+m
tmBPF333Wea9XmKa2Cam0ZbU2MPzrr+pval5JgiXiq6FqInQl7sz10pb4PUS
1yxcnxoK/bcrc21Fft5W4n49PYgeKR98krmWICaIDfaM0XZcj3tlP2RrcI2G
3t2TuXajhkCPfpy5ttgbzMVw8s+p390iM6fCrfQt/r9/ka7H++XdUXP9mPc7
4l1tz1yrUZPR+92WuVajJh4uvDVzrfxz+i327J9KMU/sE+NoX3pY9LJ2Jn6i
p0DtuDlzr4G/0aB/Qx+HvVd6ZtSK2xJ/wW+cy98M7QzuydGbo0+/KrgGLpf4
idoYDcLzfxe8v1sxuvagBtmXenT06nrk/bcI5Dxy38S8tT17FvztDXvC7GVQ
v7ydelHsjfE3DNSH1Ins7f4frse3bw==
          "]], Polygon3DBox[CompressedData["
1:eJwt1nm8TnUeB/CH5143yyCMNcu179d6CRPKFsqaFjUUaRGXLBcpRGiVqBSN
imimmVLZKkvTPtNMzTRZQoRKy9RMyyBa5v19nfPH5/Wc7/v5/s5zznnO+f1O
/lVFQyeWzGQyT0iu/CYvkylrY2g2kxkmG9W1pE1OJjNXPUfmqj/Qs932zwZ3
Ma6Fer/sZBnp5qOV+v3c5Pvom2of+aUymZrGt7Q9W99W3z2spwZrwW5iW9hD
rCnrxZazd9mzrAk7jy1j77ANbK9sVp/wGx1YI3Vjfefqu4/P58+wlmwAW8n2
6NvKWrD+7GG2m21hzVg/toK9zzaxBqwbu4u9xf7A2rCh7HH2IdvB2rJhbA07
yHayHPaluqtMZ5ewEuwzdWeZwi5iJdnn6rNlKhvB9skO9S/OoStrqT5LXzu/
cSufx1ez6qw5m8U263uQtWPD2Vp2iL3MsuwLdReZxi5m9djZ+m5nr7N1rBT7
Xt1LzpPL1PWlq7471W/q+72+z/2fr6mryGDWjn3B3lRXk6pyQZw/e8t29biv
9HXU95EcUNeWS1l/9Xf6dqsbS6PYp7HfOMddJTKZ0T5ryFP8sN4PfdaJYzN2
gPpXeis5vqvYlTJZfcL+9tluLlfr6xu/y7aqz5A86afvINtg+5T9d9RXW31M
XmGVZBZvY+xn7FV1ZRmkry37hL2srigDWQH7lv1L3UBGsZ7sU/Zn9ZlxTVhr
dpi9oC4d15o1ZkfZS+qy0oc1ZUfYi+oy0ps1YStZdcdVVzbxn5xHvnRxDe5Q
v6HvSX3vyXNxj/IDruNi447LB6yZjNXXR08rYwfqWcX2shdYaX1t2Ty2jf2O
1dHXgS1gO9ljrDZrz+azHezRmEzYMXUnuVE5PDeZSwr0TYr/R15Rl5aSOcl9
FvfbBnVd6cwWq18zdr2xzdn57CG2i21m/3F876rrykh2Dqusr15Ocg/EvfCi
ulMcs+tU6Pw3+65X3FfGvuf7+nKT73oY+z+2V91Uxthfb/Y926NuEvtjvdgh
+ac6X65g3dX/1vcXdQ0ZzgrZV+yv6ppyEevE/sv+oa4nl8ecy75mb6tryQjW
Oe5n1tOxLmV/Y0+zH+XXbAS7j81XN3IuPdi97G32pzi23GQujDmxyHe17Otj
2aannPT1XTM95Vlv3y+M/4I9zyrZ31nsBvYku4NV0NeHLWKvso2snL5y7HK2
gs2MuUpf6Zh7WBEbHfd9nLO6rUxko9TH4hlRt5dJ7Mp4tuL6qwvT+2VMzC9y
PL2HYp4cq87zuz/GsyaL2fi4D+RndXeZzSbEPCQn0jk25tOr41mNXnUbmcB+
G3OQvK4uFXMd6xDHK7+oe8jNbGKsbc6tjM9z2Rw2yXbZWC9dg5HsQTaLfRP3
PuvJbrFZpP5STqZze8y749Qfx/+uLpAb2BXqM2O9NXY8W88WxzlIGTaALWIz
4p6M68D6sQVsWlw7OYOdz25j0+PaxTPM+rOFrFi9OzdZn2OdLvZdA+dV0e/W
tH09W+er2/Xsyk3WnFh7pvmuvr4K+qrYHqtvte/m6akSawO7kc3VuyTm8VhD
WF82X9/UdG7fla4JsTasNO5k3Of6LlTfqW92+vzm5yTzQ8wTM/OS9eg72x2k
ozytPhrPl+3WMt7Ykeof4p42dhC7i90cz4veBmxKjGP3sqqsIZvKnmFL4/6J
ZySbrDux/qzX8y3P1ddHfau+KXFe+pqy67LJe9MD8ezHb2eTdTXW+GvUB+Ud
dQUZwLrFvoxtYuy1bC27P9Z9VpeNZo+we9g2VuxaxsvZBFmnLnA8g/U9qm+/
vm36TktFNoTdw+bE+4bexuwatoYtj/vH2Bw2nC1hk+N49R1Mr9/17IJ4P2CN
9I1jj7NlrASrw0axVexu1sX+qjqumVIqjkOd0VdD32X6HlAuimdIqrNL2f1s
obqh3nNy0nfJmNvSNSCbk7xzxrvnOPWe3GRdO+432hvbMP4jqabvEr6c3Zbu
rztbEtcgngd1eanMxsSzavxcfT/F/84uZsuMXRDvEPJ3dXnpz7rGc+o89qtb
xHGwfnH9WEdjp7Pn2JpYA9iz6tOxrrA66lNyKH2m454cGL/LjqZzXcyJQ2Ie
Z0eyyTw52/jBrLVjHuQ3VrN9+l6K/1bfEPYYO8C2s1MxH7PB7G52S8wj8R+o
u8kMdl08G9GbTd47i9m1MT/YX2tji9gf2SPsiBxO5+eYEwelz8In6bMWz9yw
vOS9aYvtk473B1kU8z/rZH8z+EZjn4g5kRWyYvY8Wxv707udtYz1ztjdek7L
R+lcHPPfhfoK9X2t7yspYPVyk/fJN7LJu1q8sy3VU02a6Zmp3qRvRcyH+lqx
iewptiruP/ZpuqZMZsPY/wH0VI1Q
          "]], Polygon3DBox[{{1757, 943, 761, 760, 1136, 1564}}]}]}, {}, 
      {GrayLevel[0.82], EdgeForm[None], 
       GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxFmXe4VsURxs+ee779jJqoUTDWiIgmFoKaYkwsCCLWgAp27IAo2EuiqAhq
iCg2VBCQolKkiCDWYAG5XIqgpml8kqiAKEjHKNGY9+c7z5M/5s6e/fbs2Z2d
eeedvS0uuPzkPmVRFHvoT4P0lKoodk9FcYv0XOlV6ttBslTPn0qfLn2J5EO1
u0jP0JiOkv/o+QXpuyWFpJd+W6FmV+nn9Hys5Gs9T5M+RvKl2vfpt03S50uP
Ud9RkjV6fky6reQztYdLHylZqfZdGveJ9GnSPdV3uOQPat8v+bf6L5ReoL7V
ajeTXKl2O8kGtc+qvI9bpQ+uF8UP1X9ALoobpTvEemZKf1d6lWxxtn5roeef
ZI9l79+XTJCRWkiv0Zjr1X908rfP0LhljJH+QL9tF/Y5U8+7acz+obEJv/VK
tjP76SG9q+RjtR+RvkuyXO179c4gtW+WbpRuLfkVbc3bXu17pY+TXquxzSWj
1R4VNlzI2iW/1vg/MlaynWSk3qlJXyrdJD1PUpeco3F7SreRvl26s+S/muf5
5HPlTB+WvCjZVo+vSK+XPlzjPyxtG84af9kj2dacAzbkLKZWbmP/jzR++/Cl
OZXPaLB0P+lOkq/02zA9fyF9kfRlcdbY6hLpw8JWQ5Ptg60e0biN0udJP1x5
bedK99bvR4T/9JX+jWSz2oMq+9eZ0tMq+9490kMln6v/Aullkqz+y6T3rBXF
EK17tvZ7dbL98d3Lw1fv1pjh+v0g9Y0o7Z+c6c2V7YFd2POjag+L9VyVvOYR
cb7E263Z671UUkU80sbnr9BvO6rvWOmrJD9Q+7hs2/QK+0zXuN8m2+06/baz
+k6QPkl9N8XesQG22KVwP+MZt0+MoX1L9tm/qX0/pvYc7alRepRkvtoLsv2X
74IbQ7P96u/Z8/SNb92Q/Z0Ts8+tR5zd29hb0krtTVrrBM3ZXN/qle07HaQv
yo6VdtJvauxiyV56vizbp46R7p7te+2z7dcYtu6Zbe+js+OA97eQ9NHz0+BI
3TGyOOLkrOxzai19ovQNyf4Hns0J/3+xMo4Nke6fjHsPqv1AZfzrjs8mY9Bb
ar8Z8fmQ9PbMDy5ln/vxcfY7ZONJc+nFlWPm7MpYBF4yP3iwi2Rp4RgEZ8Df
nfVOH/xee1mv/nWx94fUv5XsOSR7/cTvN4XXDhZ/T+0NlWN8hPTesd+d1P+M
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
WPw/UBRQhQ==
          "],
          VertexColors->None], Polygon3DBox[CompressedData["
1:eJxNmHnUVlUVh++93Pe8lK5WIiqiEqjYpKmZpa5MAbOcUlFAZkXFUASHRM0K
ySmSJZoLKBVkBhUQHHIOEVAQRDBbWpaVzCB8CGJq4/Osff7oj/29v33Pueee
s4ff3ufrNGh492FVURT7lUVR83sBf/bm9wP0deA+yDDwycgYcD9kN/hl5PU6
RNyWd/qC705FsR398+g/BY9H9uQDTZ7tD36JOdPBHzB+F/hhxv6FfjTyCHgh
zyaBG4yvQ28DGM9vW57tYOxe1jiasXmtiuKvzaLo1ow9befZtxm7g7nPMfc9
9F+AuzI+mPF/on+T8dt4NqGMObeDVzL2OHhPxreiT0ZWoR+KPgXcpRk22IZ+
JO8vA38W/Ahzltex9kjw95B7wSt451PGz0ZfWcU7ncCP1rHWeehnob/E2Dxw
T+Qc9DfRF4Bn8vsGemfWmFXFnr+E/kQdZ+mRYu1VjM1PceYj0TfUYYvX+F1Y
hk03g19F9tBe6CvAQ5GD0XehrwdfXMfYqcivwBfVcbbvIveAFyMzwNOQF/U1
Mhs8E1kK/iLf/zrr3c9+5oLH1uFb31ni2lX4dqw2AG+oYi1jYJH+95vghcYB
eI02RN+HNfqDH2DN1ugPMj4nhU/0zSc8mwr+Cc++Cr6NuTs5/3h/i7DBKvB/
ebaT36XMXcbcv/BbMvYC8m4V67q+Ptf3d+X9X4W+INtjN/pD2d9bmNMe/Ub0
x9HH+Q1jDf1ZcC9kM3oH9Hl1fMNv7YX8DbzGcxbh8zfAg5hzXRkx8RvwrTx7
towYNVb1zz+YPyf7bzPP9i/incfQP0YmVuGDYeDzOeMPGFvGs0fBl9SxV5/d
B36L5/9h7rnob+uLKmx5lD4Br2XO1pw/Q8DnssYCCYI83IUtZ1Qx1xg1Vu9m
zq4iYuIV8ChzBLwa/CHzNyCb9BnPBjJ2u+cpg0OM2dN41g18NXKVuZ3C/r3R
B4CPQlrkJfT+KfJnEeu9WEXcXIj8FvwkMpGxNSnsqn3NLf3fnr0v0dfoy5GX
q7CHtnotRZ6aU+bW6cgp4GuRa+Qy3p/NPs9E747+SiP20hX5Pvo1+qEKG2mr
pYz3zHx5KnobZB37Pw+9N3gx4+eDv4Ocgv41ZGsR7/RNwRdyTS/0fu61EbiL
HIM+wjjjW89UsZ8zUuTq9ciPwBcg3cEJaQfekjlBPjkH/XBkYxF76AP+FvJv
9IHoF4Nf5Xv9Mh+cmeLs2vhD5vwaPLUO3+gjc/35OmLpIPTnwNOsGWXEhLGx
jPXaFREDxsLyRsSvcbwR/SS+cbzxV8R+uyInlBHPcks3ZC/5BL7f2ozzOXcu
+ruerRF7Pw05m7EH67C1Nh9dh73bgN/je+uYvw2ZWccZL5S7Uuy1T45P99c3
85+2XYHeP/P7WejHIp8U8ewi8B9S5JE26AXezPrzWX/fIuJjJe8PMFbMwRR8
bi3y2SDwkkbU27Wssb4Zeg/GTnIPKXygL25CRqSIcWP9iSpibxXzOxTBgSNT
cPB9jO1Thv38/oFF1BC/t7oRtdgcHZX3K8/Jd8PQH8KuLbx/OPrxKXw0ow6b
aJtN6DsYPwL9BMb3RWrwFr7RFryW8RvqqNGHNCLGjfWhyOAUZ/SsX0A/phmc
8jvmn1FG/ujvE8FDkEtS+GsW44ehfyOFD/XlQTl+PY+xYsx0QX+/GTEqp8gt
h+V+wXFjS06Sm+T89uifNoPzKmtOihgzhtyDe7GmWFuM72ObMce5m9D3TuEj
fXUl8sMU55Er51dR835vjGTOnZrtYx9jP9MZfVyKWmyPZK/0FvJOrlHTjD9j
MvcUk+UfOQT94yL4bFGKPke+np6CI+SK4docPAl5gfHnq+AOuf2X4NFVzNff
l9fhQ31pT2Vf4J7stcyxSXVwirl3XIp693SOtw6cdTF4TBn9nvHoWAtyT7bf
M3XUR2v103Xk6udY46k6OFKutMe8XO5n/q11xOyPU+SMuXNLGbr+s87pc+PX
nDQ37cFuAO9gfFQd/cPQHG9T6sgpc8v+4PQy8nNArj/7gWe2itg5NPOLnHRy
inp+Rc7HO8VIpyLsoV3+nIJrtZm2s0f2PPawvet4x3f9/uQ6+mtzxfg3D3rW
EUvGs3Ftf+Z65pd59scUfGZMGpsDc39zCM82Mv6nFHxszL+fxz2P+TQh92+t
i8gH+zE5ydplzpv7cp7cN6tV8LP93WeKqIHWc/nV2P9yrg/G00f2Q4y1NKOm
aE97LWvNHHti9AOMhzo4WC722VxrSR31wHpqPXG+7cWJ/zdurbFfsGZo70YZ
fNSSa7ixvzP3dgc2one23j/As5F13GP0mf2X9VpfH1xG/9AO/akqalqLPI0+
u4r6uNveDxmDfieyPdcoa1Vn+acZ9eAAa1Pmf+uzsdYp12v7Oe3jfPuzHnXk
5nrk71X0ePZ69i7a8P46eo+bkcvyfOudHGP/Zf/meeU/+813UtjD2DM3jR/r
m/lrHsttcvtHchL4Zym+7Z3Mu5k9vvXE+mcd9M5i/ngHurSOnt/aJ99Pr+O+
ZrxIa/brP68j9nbm/Lm5jrNvz/e/61PUKmuktfLqFL2dNdZae2kKbrcHsRe5
LkXvYo8rv1+bovey5z4mxT1Je2kDee/1RtxfzA1rkT6XW+VYY2FZ7u3kS3nz
shS1x578iBT3y4ll9Fjm55UpuNIe015zSAoutyezN3uyDt/o81vq4DC5TA48
LvPZHVkfl/uh0WXw90TwTSm4yx7LXuvGFFzlvdH73BUpuM87ZpdcC8dm+07I
/pNbzSF7yeEparX9l72yXGds78j3Jc8rtxgTg/N5OpbRY1ifpqS4f3gPWZ3P
Z2/gM+PP+/BjZfQoxoM1S/t6b3gzRY21lu5RxX3e2mjv4Znt/zbWEXv2+Pb6
9gjy3cOtwl/beO8rZdhM/rfGaSvvZW/neuja1mzrj/W2o/eLVlGrjRFjxdi1
N9C+cpM1w9rh9+TOTrkfsYeROzrmem38ybXmmP2F/td+2tHaYY01drzHr0xx
Hu/XrXM+Ga/moj2s/bbxLhd4JxyR413ukoO9z3gf8H8j+qBvjm+5QQ70fvE/
hVdTCQ==
          "],
          VertexColors->None], Polygon3DBox[CompressedData["
1:eJwl0j9IVWEYx/H3Hr231UAJdCmttkCwQKccXGpQdJGWkKZI0NU2qc2IzLS8
laL4/0Lq0JBBLWFEg86pi6SICpraFQeDPod3+HKe3/d9nvec855z5UF3W1cS
QriMLNZyIUyXhLBD1mRCuC9vYJ4rcg3cbbkxF+vU9ZSGcE2uQ9Eek/IUbl4I
Ydf1XF9B3xyK8iFfcP0qf8GouRbc0feZX8ItPW3ckvVPOOQOuBoPOSy/wR/u
N/fWtdnsd24Zx3LebJn6JfpxST7lB9Wvkrj2F+18q9kTa/9Qb78D/hn6sG9t
1rs/tLYqr6CFeyePIKNe59aSuMd7+42qz9RdqJQ7saDuRbnzeSSveo+Cfbe4
I3sMpA5V2Xivc33j8g3sqse4cdR5vh96ZsxOyE1m7+q5inL1a/ceQrWe61wF
l0/imaVnd1Qav/Ug/5zLcD9Rye3JM9Y7zD3GR/VTVFnrkdfxoSSeW3p+6Rl3
5+J/8kTfYvrO8i9M6dvUs232Xvod8SKJ981m4vf4hovZ+F1qQ3zm/3nrXLs=

          "],
          VertexColors->None]}]}, {}}, {
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0slOFUEYQOH/4jxP0RggJG71BXwOH8EHgCcAN044oDiBCIoyK4qgoDKJ
XJAriMzigMSFGhM1bl1I4leyOH1OdVd3171dB46WHCnORMQAhkXqaodvnOWi
dRE7da8+nhdxAidxCqfxYn1EOZ/BWZxDxj3nuQIX8Myci1yJS7iMK9hlXta1
q/oadhtXcTWuY49xDd835wbXog5/1kbc5Hbnb3E9buMO9rqngRvRhGa0oBX7
XGvju7iX7k/PxgN04CHCnE7uwiM8Rjd68AT7XX+afhN60Yd+DGAQf63tOQ+l
/yY92xqHOYsxPcL5npHTo/olXumxtAbOpTEm9Di/5olkTOrJtE5+w1Mo8Kwp
42k9zTM8ixk9x508z4XmLfCc8Vue50V+hwX9ng9viFix/g/6IxadX0pz+BMv
4zMOpW9nP3xP+8NfVun677RxMIIdcpAP4pe524279U+9TXfpH3qr7tBbeNx7
2/VmndNtepMe1c16ox7SDWlvutdSo15/1V4fdfpL3v/PFzXa1DjmUKTX6DJd
qNMnLtUFmdX9/g9D/HQs
        "]], Line3DBox[{453, 623, 624, 259, 453}], Line3DBox[CompressedData["
1:eJwl0LsvBFEUB+AzGGyxiaXRbbZV2KgF0SOxLVEoSVZNoVDRqMR4LhoaOspN
FFqFeD8SQaX0H/gmW5x8v3Pu5J7cqcwv1epJRMyochoxyApHWOUER9PW+SQX
OMtlLnKdK8y4wVPu8IpnvOFAZ0S/Jb/qXn/NYZW1Rzzk3/ORu3ziHp+5zxce
8JWHbKg3+YjvPOYHT7jWFjHdEdFj363ZuFyUm/KQXJAv8v1ssDc/74oocVPf
LSfyqpzKf+6sy1/89pY5+U7+lKfkpnvGeGlWtDvTl1g1OzcryFtmP/pt7y2z
L2n953+0ES7a
        "]], Line3DBox[CompressedData["
1:eJwl08dzjHEAx+GflI3OECFRo4axekvyRvS2avTVo64Soy+ijUOOTvIHIKPd
WGUwjCgHB4fMcCNcndwMZvC84/CZ5/u++76bdzdJef3huoYOIYQPKjGS/M72
vBDWa4PW6UkihGm8y5FcqYGFIXx0XGM/4kIu0GN7Ku9wBP8WhLCCbY4jPuB8
ztNDewqnF4Xww3XD7eV673w173Mu5yhnT+ZtDuMyvbOreI+zOUuV3uuP95pk
33J+KJfqrV3J/qpXqeev5USllNESzVCZ8ry+gzM1QYu1T4vi51Vfr5dyu7Zp
q8Zrj/Zqt/Jd04ebtEWbNU5j9Nsz7mJvpbVRbzzjABa7r5iD1U+vnR/EX+5J
xj87/v710/FYlqjK5y5w3wH7kBp0UKPV6v467tdq9XRdOXtpp1bppmuGcK0q
tEajdERX/U0c5TEd11PXnmCh9znJU3rmXJYJ507H3xnPsNpzFdln7cjuaDfa
nfjcPefszvYL+7zdxa5xXVdecHyFF+Pfg3Pd7Et2rd3dvhz/zu0e9id/u9fy
Q/jM62znDX5ho++pzGf4pq+OXzJSq/vaHOf4ii3MsZktbGIzs2xihlmmmWGK
aUZMMcmIFYn//0//ABuwVy0=
        "]]}, {Line3DBox[{453, 624}], Line3DBox[{1311, 1553, 1678, 1684}], 
       Line3DBox[{1313, 1676, 1679, 1677, 2044, 1846, 1312, 1690, 1687}], 
       Line3DBox[{1325, 1499, 1867, 1324, 1498, 1866, 1323, 1497, 1865, 1322, 
        1931, 1764, 1321, 1930, 1763, 1320, 1929, 1762, 1319, 1928, 1761, 
        1318, 1927, 1760, 1864, 1317, 1496, 1863, 1316, 1495, 2045, 1691, 
        1732}], Line3DBox[{1327, 1765, 1932, 1326, 1766, 1933, 1725}], 
       Line3DBox[{1328, 1767, 1934, 1329, 1768, 1935, 1330, 1769, 1936, 1331, 
        1868, 1500, 1332, 1869, 1770, 1937, 1333, 1771, 1938, 1334, 1772, 
        1939, 1335, 1773, 1940, 1336, 1774, 1941, 1337, 972, 1338, 1870, 1501,
         1339, 1871, 1502, 1340}], 
       Line3DBox[{1342, 1775, 1942, 1341, 1776, 1943, 1343, 1503}], 
       Line3DBox[{1355, 1505, 1874, 1354, 1504, 1873, 1353, 1952, 1784, 1352, 
        1951, 1783, 1351, 1950, 1782, 1350, 1949, 1781, 1349, 1948, 1780, 
        1348, 1947, 1779, 1872, 1347, 980, 1346, 1946, 1778, 1345, 1945, 1777,
         1344, 1944, 1851}], 
       Line3DBox[{106, 814, 107, 815, 108, 816, 109, 817, 110}], 
       Line3DBox[{1357, 1785, 1953, 1356, 1786, 1954, 1358, 1787, 1955, 1359, 
        1506}], Line3DBox[{1370, 1004, 1369, 1965, 1796, 1368, 1964, 1795, 
        1367, 1963, 1794, 1366, 1962, 1793, 1365, 1961, 1792, 1364, 1960, 
        1791, 1363, 1959, 1790, 1875, 1362, 1958, 1789, 1361, 1957, 1788, 
        1360, 1956, 1852}], 
       Line3DBox[{1372, 1876, 1507, 1371, 1877, 1508, 1373, 1878, 1509, 1374, 
        1879, 1510, 1375, 1880, 1797}], 
       Line3DBox[{120, 828, 119, 827, 118, 826, 117, 825, 116, 824, 115, 823, 
        114, 822, 113, 821, 820, 112, 819, 111, 818, 636}], 
       Line3DBox[{1385, 1518, 1889, 1384, 1517, 1888, 1383, 1516, 1887, 1382, 
        1515, 1886, 1381, 1514, 1885, 1380, 1513, 1884, 1379, 1512, 1883, 
        1378, 1966, 1798, 1882, 1377, 1511, 1881, 1376, 1726}], 
       Line3DBox[{1387, 1799, 1967, 1386, 1021, 1388, 1890, 1519, 1389, 1891, 
        1520, 1390, 1892, 1521, 1391, 1893, 1800}], 
       Line3DBox[{1400, 1527, 1900, 1399, 1526, 1899, 1398, 1525, 1898, 1397, 
        1524, 1897, 1396, 1523, 1896, 1395, 1522, 1895, 1394, 1969, 1802, 
        1393, 1968, 1801, 1894, 1392, 1727}], 
       Line3DBox[{1402, 1803, 1970, 1401, 1804, 1971, 1403, 1901, 1528, 1404, 
        1902, 1529, 1405, 1903, 1530, 1406, 1904, 1531, 1407, 1905, 1805}], 
       Line3DBox[{1415, 1536, 1910, 1414, 1535, 1909, 1413, 1534, 1908, 1412, 
        1533, 1907, 1411, 1532, 1906, 1410, 1974, 1807, 1409, 1973, 1806, 
        1408, 1972, 1853}], 
       Line3DBox[{1417, 1808, 1975, 1416, 1809, 1976, 1418, 1810, 1977, 1419, 
        1053, 1420, 1911, 1537, 1421, 1912, 1538, 1422, 1913, 1811, 1978, 
        1728}], Line3DBox[{1423, 1812, 1979, 1424, 1813, 1980, 1425, 1814, 
        1981, 1426, 1914, 1539, 1427, 1915, 1540, 1428, 1916, 1541, 1429, 
        1917, 1542, 1430}], 
       Line3DBox[{1432, 1815, 1982, 1431, 1816, 1983, 1433, 1817, 1984, 1434, 
        1818, 1985, 1435, 1918, 1543, 1436, 1919, 1544, 1437, 1920, 1819, 
        1986, 1438, 1545}], 
       Line3DBox[{1445, 1548, 1923, 1444, 1547, 1922, 1443, 1546, 1921, 1442, 
        1990, 1822, 1441, 1989, 1821, 1440, 1988, 1820, 1439, 1987, 1854}], 
       Line3DBox[{1447, 1823, 1991, 1446, 1824, 1992, 1448, 1825, 1993, 1449, 
        1826, 1994, 1450, 1827, 1995, 1451, 1085, 1452, 1924, 1828, 1996, 
        1453, 1829, 1997, 1454, 1549}], 
       Line3DBox[{1460, 1551, 1926, 1459, 1550, 1925, 1458, 2001, 1832, 1457, 
        2000, 1831, 1456, 1999, 1830, 1455, 1998, 1855}], 
       Line3DBox[{1474, 1579, 1146, 1473, 2013, 1842, 1472, 2012, 1841, 1471, 
        2011, 1840, 1470, 2010, 1856}], 
       Line3DBox[{1552, 1469, 2009, 1839, 1468, 2008, 1838, 1467, 2007, 1101, 
        1466, 2006, 1837, 1465, 2005, 1836, 1464, 2004, 1835, 1463, 2003, 
        1834, 1462, 2002, 1833, 1461, 1145, 1577, 1578}], 
       Line3DBox[{1576, 1494, 1571, 2041, 1675, 1493, 1570, 2040, 1674, 1492, 
        1569, 2039, 1673, 1491, 1862, 1568, 1672, 1490, 1861, 1567, 1671, 
        2018, 1759, 1566, 1670, 2017, 1758, 1565, 1669, 2016, 1757, 1564, 
        2038, 1668, 1489, 1563, 2037, 1667, 1733}], Line3DBox[{1703, 405}], 
       Line3DBox[{496, 444, 1722}], Line3DBox[{1704, 378, 1734}], 
       Line3DBox[{1705, 382, 1738}], Line3DBox[{1706, 390, 1746}], 
       Line3DBox[{1707, 394, 2046, 1750}], Line3DBox[{1714, 354, 1849}], 
       Line3DBox[{1715, 355, 1716}], Line3DBox[{1717, 356, 1718}], 
       Line3DBox[{1719, 357, 1720}], Line3DBox[{1723, 1259, 1701, 1730}], 
       Line3DBox[{1724, 1702, 1688, 2043, 1850}], 
       Line3DBox[{1742, 386, 1860, 1847}]}, {
       Line3DBox[{919, 1095, 1145, 904, 1080, 1991, 889, 1065, 1982, 874, 
        1050, 1975, 859, 1035, 1970, 844, 1020, 1967, 829, 1876, 1005, 814, 
        990, 1953, 799, 975, 1942, 784, 960, 1932, 769, 947, 1260, 2044, 1262,
         1261, 755, 940}], 
       Line3DBox[{920, 1096, 2002, 905, 1081, 1992, 890, 1066, 1983, 875, 
        1051, 1976, 860, 1036, 1971, 845, 1021, 830, 1877, 1006, 815, 991, 
        1954, 800, 976, 1943, 785, 961, 1933, 770, 948}], 
       Line3DBox[{921, 1097, 2003, 906, 1082, 1993, 891, 1067, 1984, 876, 
        1052, 1977, 861, 1901, 1037, 846, 1890, 1022, 831, 1878, 1007, 816, 
        992, 1955, 801, 977}], 
       Line3DBox[{922, 1098, 2004, 907, 1083, 1994, 892, 1068, 1985, 877, 
        1053, 862, 1902, 1038, 847, 1891, 1023, 832, 1879, 1008, 817, 993}], 
       Line3DBox[{923, 1099, 2005, 908, 1084, 1995, 893, 1918, 1069, 878, 
        1911, 1054, 863, 1903, 1039, 848, 1892, 1024, 833, 1880, 1009}], 
       Line3DBox[{924, 1100, 2006, 909, 1085, 894, 1919, 1070, 879, 1912, 
        1055, 864, 1904, 1040, 849, 1893, 1025}], 
       Line3DBox[{926, 1102, 2007, 911, 1087, 1996, 896, 1072, 1986, 881, 
        1057, 1978, 866, 1042}], 
       Line3DBox[{927, 1103, 2008, 912, 1088, 1997, 897, 1073}], 
       Line3DBox[{928, 1104, 2009, 913, 1089}], Line3DBox[{929, 1105}], 
       Line3DBox[{930, 1106, 2011, 915, 1091, 2000, 900, 1076, 1990, 885, 
        1914, 1061, 870, 1907, 1046, 855, 1897, 1031, 840, 1886, 1016, 825, 
        1001, 1963, 810, 986, 1951, 795, 971, 1941, 780, 956, 1931, 765, 1862,
         270, 309, 563}], 
       Line3DBox[{931, 1107, 2012, 916, 1092, 2001, 901, 1921, 1077, 886, 
        1915, 1062, 871, 1908, 1047, 856, 1898, 1032, 841, 1887, 1017, 826, 
        1002, 1964, 811, 987, 1952, 796, 972, 781, 1865, 957, 766, 1140, 2039,
         1248, 1139, 1258, 1159, 1206, 1860, 1271}], 
       Line3DBox[{932, 1108, 2013, 917, 1925, 1093, 902, 1922, 1078, 887, 
        1916, 1063, 872, 1909, 1048, 857, 1899, 1033, 842, 1888, 1018, 827, 
        1003, 1965, 812, 1873, 988, 797, 1870, 973, 782, 1866, 958, 767, 1141,
         2040, 1249, 519, 520, 390, 1279}], 
       Line3DBox[{1041, 1905, 865, 1056, 1913, 880, 1071, 1920, 895, 1086, 
        1924, 910, 1101, 925}], 
       Line3DBox[{1148, 1147, 1146, 918, 1926, 1094, 903, 1923, 1079, 888, 
        1917, 1064, 873, 1910, 1049, 858, 1900, 1034, 843, 1889, 1019, 828, 
        1004, 813, 1874, 989, 798, 1871, 974, 783, 1867, 959, 768, 1143, 2041,
         1250, 1142, 1160, 1213, 2046, 1309}], 
       Line3DBox[{1273, 771, 1934, 962, 786, 1944, 1287}], 
       Line3DBox[{1274, 772, 1935, 963, 787, 1945, 978, 802, 1956, 1288}], 
       Line3DBox[{1275, 1234, 2037, 1135, 759, 950, 1863, 774, 965, 1868, 789,
         980, 804, 1958, 995, 819, 1010, 1881, 834, 1290}], 
       Line3DBox[{1278, 1195, 1247, 1246, 1138, 1245, 946, 1861, 764, 1930, 
        955, 779, 1940, 970, 794, 1950, 985, 809, 1962, 1000, 824, 1015, 1885,
         839, 1030, 1896, 854, 1045, 1906, 869, 1981, 1060, 884, 1989, 1075, 
        899, 1999, 1090, 914, 2010, 1295}], 
       Line3DBox[{1282, 754, 1240, 1241, 1239, 2017, 944, 762, 1928, 953, 777,
         1938, 968, 792, 1948, 983, 807, 1960, 998, 822, 1013, 1883, 837, 
        1969, 1028, 852, 1973, 1043, 867, 1979, 1058, 882, 1987, 1293}], 
       Line3DBox[{1283, 1256, 1235, 2038, 1136, 760, 951, 1864, 775, 966, 
        1869, 790, 981, 1872, 805, 996, 1875, 820, 1011, 1882, 835, 1026, 
        1894, 850, 1291}], Line3DBox[{1284, 2043, 1286}], 
       Line3DBox[{1285, 1259, 1268, 1296}], 
       Line3DBox[{1292, 1972, 851, 1027, 1968, 836, 1012, 1966, 821, 997, 
        1959, 806, 982, 1947, 791, 967, 1937, 776, 952, 1927, 761, 943, 2016, 
        1236, 1238, 1237, 753, 939, 1303}], 
       Line3DBox[{1294, 1998, 898, 1074, 1988, 883, 1059, 1980, 868, 1044, 
        1974, 853, 1895, 1029, 838, 1884, 1014, 823, 999, 1961, 808, 984, 
        1949, 793, 969, 1939, 778, 954, 1929, 763, 945, 2018, 1242, 1137, 
        1243, 1244, 1305}], 
       Line3DBox[{1300, 758, 949, 2045, 773, 1936, 964, 788, 1946, 979, 803, 
        1957, 994, 818, 1289}]}, {}, {}}},
    VertexNormals->CompressedData["
1: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
Wt5210YrdW/E8i43QKMEPQt3dGVLn6XDJiethN60ii/pZnAp9n35DC/2ulP+
6HEB4nmQFQv5najrY2L4z37MFzn3/Nv8bJzah476VhniNt84uUV4rwXoUG09
OR//ltDcJNpCKgeUAtkCDqzHwPh9uMV8PMnKA5/47QqEIPDsJUzFihty8tk6
5vubFZc53VC3CmhPK5rlPZ1GN/KmF+z2YZOFuZhbG2oTvHwrwLAGqT1ejHf6
0hhC1fkuCblbqX/Ikw1DMfhF3ejVxD2vujkg/r57vc39pqiUoOdai5urt2bt
Ratanu5PfCu3dL72Yrvd+6kGUczn0Z0CfMTqJd1K6y31WQ80z8eNJG5XI8aN
ZD1WHzNuLxNTd9ySn6L1b38v7X/jBqrbzHAJI9hocG5YIycDnPYIXdAtv2K4
IlNzBN0v2vltuT0NmH9ZtdDfT7n3rZRsexCTaunBhp2t6K7xwKIOHfSMF7tw
aOv5FMdws0SUkE4457WLOXNZ1ht1dKj6GK+yQjsIum3+8pq0S14HeTV3Pk8t
kkRTBB6dvp0zk0IW23ws/pgQOdWSPgfXOHu7H12HqbpN+TWGEceBmY33l911
pMR2nXB9le5PPI9LdTR3s+guzLkvrMBz7Qj/n67zj/hHQj7Rye/yiaYFnBr0
qerQsc61kjF29egsfFvgqFb5yakzici/1adJZHk4KhwgjJ/dlsx7TK4gdIrb
T2HCEN0n6LliP1+2S9ZptMJNfYrdAqFvBK4b1tiuvV0Gw4rtjmyUIb4PUX2t
SFroDBNm0GxEpSFPjA+5oNB548MlcuzNiLO46HpiflZ7yJ1zLu96ck6t8Vb/
1PH3i3MwOyrb8CAwHjXPpAjuGMlCb6oW9anwjqtPueaPXF+PJ69iu420CeMt
rjSG5dRNB6T/Sm1ZoLAOqiHo2Wlvzxq6TBllHqhbNXlDeCkOiiE6g4m77CBG
msF+NiOJGJe+xWv5UAEDB/bibjbj1jfEPDgn7QPHjn4kw4RNSUzJK4n83dtk
f+Gi8Zx7kx23h4T+OXEOkevWpzgGGGH8VtrV6KU32k3QTUb7k/J42TnEMxb+
qY9GZSmfhdSQN/S8ojR63GiRkXWbeJ4+fIpJfourCJYdtVU4fDNxXmO6L9SW
e5UTs1IRkz5pR3y/p5nfeuO+oxSY3L7arqlgIj+r07VbF0gwbWY59x7Kf04+
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

     "]],
   Axes->True,
   AxesLabel->{
     FormBox["u", TraditionalForm], 
     FormBox["v", TraditionalForm], 
     FormBox["\"\"", TraditionalForm]},
   BoxRatios->{1, 1, 0.4},
   ImageSize->{360., 281.487264522269},
   Method->{"RotationControl" -> "Globe"},
   PlotRange->{{1, 13}, {0, 10}, {0., 0.03885218035640922}},
   PlotRangePadding->{
     Scaled[0.02], 
     Scaled[0.02], 
     Scaled[0.02]},
   ViewPoint->{0.1958349894525185, 2.057032970998967, 2.679601465354372},
   ViewVertical->{0., 0., 1.}]}, {7,"\<\"\[Rho](u)+\[Sigma](u,v)\"\>"->
  Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJztvXlcTs///5+QKEuhpFBJJVu2LHFdl73sS/tCi7IkRQhlJ7KE7PtWRLJW
luwpkqWihVKkok1kSZb6vnjN43le7zmv6/e5vf7/+cftdr/Nba7pfs55zszz
zJnRc/OZ6KGooKAwSFlBoe5f/++frlGkoPBB+qDrzsJTVSckd/s9q262+L30
8dH3PXJif4n48tlvbmbH1pfxfM+GcZ6Woaoibv/MOSg7Vk3Ei/K32YcatBRx
v49JnS1DW4m4wp9/OiK+qYnZ01jvdnK4nog/bZk6INSgvYhrtZl13DvbQMSn
GDRoZhlqKOLhnY4uMrA0FvGyHgPf1NZ2FHF4rnt1U+3s7CIp75nn8MxzeOY5
PIOH93h446dZGXkGv/r2yGGz4HfkGVxNbWzqCZ0i8gxe+W1F2p5ZBeQZ3PhJ
XI171zfkGXyC7swh1/vlk2fwxA2+3Vf4vybP4Hnzy9bPev6KPIOPW9E3obvN
K/IMfupbvlrl4zzyDC5r+iE4RC2PPGe4pUhnZ38VeQav+rbGr83OAvIMfiRm
t/ft56/JM3i7FfYmO3UyyTN4QbfEFbktH5BncD0nycWt7tfIM/iSghErlUPP
kGfwjldaKxjYHCbP4EM8x8ZaTd5KnsHbqCtPS+y/kjyDe/ZMdLv2bC55Bj+s
22zxlS7u5Bm828YnQ18MnESewZv28NPOqRlMnsFVvR12PFzYgzzbfC5bFmpQ
R8Z7Bi+qeTnohGsWeQZ/lfXIubd/MnkG37baqfH4pTfIM3hDvQO5U0dHkGfw
9sbphR+0t5Bn8J5XZr78aeFHnsHdl48ZGnjSmjyDqxp3/76qVx/yDO4w7MKr
7Mea5Bnct+eCvJg5VRJ4Bre6efZQQLsMCTyDR59quD6gVbQEnsENJmYpnfEL
lcAz+Egn9dtTavwl8Cy79DHPO1tJ5Bmc9wze7s2aZuZDYskz+JgTsiOqs0+Q
Z/AjHtHvPXdvJc/gOucm7uzW2Y88g3/QLk93l00gz+BZ/Sp7lgR2Is/gCj/H
hqao1iPP4NMz8hL3qWRL4BncZm6MgdvHc+QZfPyWoIHF4WvJM7ijz/Cb4Vt8
yDP4pIqJ20d+9CTP4AMq9nrVv+5Bnk0Wf5X+9sR7Buc9g/Oewc8WNN2s0W0j
eQZXV7g1UvNJIHkGP3nHpeejIVPIM7ihj5/Znp79yDP45UNqfiW5zcgz+A7t
KqWq8DcSeAZ/5NFrwc0TF8kz+MUXixu67FhDnsFvfSyuGGEygzyDv8988LXe
NnfyDD5Yt2X3gAVTyTN4nlf3miD7qeR5/cFf40IN1ESewXnP4Lxn8ClDmlu3
/Idn8Co1WdjxbDfyDF47cep4Z89R5Bk82rSe7qC9huQZvOmoLdrbR/2UwDP4
zsOm92cVPCTP4NPXGTQKaLWHPIObLJw3/+2dOeQZvMZQr22HclfyDG46/82d
3TZu5Bl8mNpk5+kq7uQZfG7PtBVDAtzIc+2ff81FnsF5z+C8Z3DeM7iJYfDh
uKaO5Bk8uuZjZ88HPckzeBMd7VijZi3JM7hL0tCSVf1KyTN4QUxJvlb6FfIM
nlIwQ7PSbTV5Bjd99q4i8dNU8gxuKGsV1n7HZPIMHmg8/FrZNVfyDP747epP
h2a5kmdws/mG40JKXMjzPFfFc97ZGiLP4LxncN4zOO8ZnPcMfsTUKmtolgF5
Bn+8ackW3/0K5Bl8vU2H/ofWviDP4MVNatRuhJ4kz+A/RjU4f+r+fPIM3vXh
orkzK1zIM/jS62qjc087k2dwmYFb3PZRLuQZ3HJ8S/N9Gi7kGXzv962pvzpM
Ic/Fd+q5ZMdqiTyD857Bec/gvGdw3jM47xlc1+/9bsPRJRJ4Br/Qu3V45/6J
5BncPWpMr5qfe8kzuPL+XaM0wmaSZ/DluubVjXwcyTO4453QFsYDBc/gmTlP
WxQ1nkyewXskrHbdl+xMnsH3Ploa1+yFE3me/Kc+HZFncN4zOO8ZnPcMznsG
5z2D857BX9l8Otb3YQR5Bv/sX31+nP568gyek7m0bvfxjuSZeK+QJvvu2pJn
cGMfP0PZOCfyDP6ykc8goyJH8gy+94fKTqujjuQZfIVP3KivmQ7k+emahrd+
t5f3DM57Buc9g/OewXnP4LxncN4zOO8Z/NiikSvT1kwnz+CToucpnzxqSZ7B
x8pWf7VWtCHP4JJxBhYv7zqQZ/A+AQeXZPy0J8/gmbd6n18fY0+ewZOsKw83
aWpPnsM+1e8baqAn8gzOewbnPYPznsF5z+C8Z3DeMzjvGdwzdsz1lH94Bs+K
W6X77koP8gzeQmv+zoYm1uQZfPnQvEfFSXbkGXyGjf3M71I78gxuXpXsv/S7
LXkGH1LVe/czP1vy/Hd9+iLP4LxncN4zOO8ZnPcMznsG5z2D857Bec/gVkFf
h23J7USewX88tB1+77oVeQbPrBrx2fqTDXkG/6U4JnxGuA15Bh9hGGj/c5oN
eQaPbbDHp36NNXluba38rra2vcgzOO8ZnPcMznsG5z2D857Bec/gvGdw3jM4
7xk8ooFvYbcjgmfwSd0Sc5+PsybP4NZjUj+nG1qTZ/LzKuxupyor8gze6lLl
2IATVpKYNSs3/s53lB1Kzgs1+CidGa2989GDcin47Q7phyxDf0qzvu8L0NlZ
QNxpuvIy3+wMyjuB8/k6XEe+/OcpUWUGlooyeRzt0QlZcj9cUi5VXaK1LdSg
oag8OMrP7x+scVDhnbT5ozs6CgrNROXBUd7LNimm9uZr6eHsbxWx3s1F5cFR
/ozrtoOzp72Qdi7pGv973MaXB6fyx1ZNMlrwTHr129SdBpatReXBUT5h+uF7
K+amSIc32DcjO7aNqDw4yhvnRtSqtk+Wlqyf3tYyVFdUHhzlL/y85NPqYaLU
NLTuOgNLfVF5cJTf1kOtaedp8dIFew5+/H3f8OXBUT4n0qGy6+lb0muH+zlm
x3YQlQdH+aVZ616eeXFNqhjx7G6st5GoPDjKzwl95N2+1RWpxVmfrqEGHUXl
cZ/zHOVRz44dJVGyohi6P8H5+xD3f5H5h8YGD5/T/QYeeHjskfi1qXRfgUcf
eqGkf+Y23T/gP49MmbetJIruE3D95Peq9/x30f0A7pgw1qN27wq67uCjLAof
rAibQdcXvP6Bl8+mt5lI1xH8RucuWoOz+tL1Ai81q9h+ar0uXRfwqZfrzGk8
tT75B39nuq6lTn4JxRO6DwNmqJ5bFE2eUb6sd1wDA58Uiufg/PObbF3RTUGh
niyig32h8YWr5BNca4Huu9LmEXR9UY/7yPqbiurfoTiG8ohXuI7g6U2U2n6b
cp/iVUyrz5uzYxuKyoPz5Q/9uZ5NReXB+fJDn9QYWYaqi8qD8+WvmtbJivVu
KSoPzpfv+uc6txKVB+fL/z2e0RaVB+fLt/rTX7QRlQfny49wrP8w1ltXVB6c
L6+4USnMO1tPVB6cL3/tWoNAA8v2ovLgfHn0dyiP+xDl+ecd5VEP7meUz880
sRi+zFoCjvISdUN3t1ShP+Xfi6F+vn/E/c9z3P88RzwBVw+ODrXoUkLxBLz5
qc7lYb3eUjwBP6hqbpTWo5DiCXhCU+tVVnfeUDwBn55pN2XX6XyKJ+CvDbqN
cHr6muIJeI9VdRQOGLymeAI+6pN2u7fbX1E8AV+/3uD8Dp1X5Jn3Bo7yL63H
X7gwK4984n3NzX3OWl8aFpBPeu+zJe3xi10vySf4i/DWvb+vSCWf4KPrNB7U
c0Q8+QS/1//j5bwX0eQTvMFd32HOjsfJJ7jBk57awc93kU/wG00+74wwCyaf
4JOKtALvyBaTT/Bw+5MW5aUzySd4VNubXml9Hckn+NNPm2YM0hxF3sDnKga0
yQnuT37w/mV3sZ7h8NMJ5Ad8aW3sipKUizTeRvzEeBsccZLniIc8R9zjOeIb
zxHHeI54xXPEJZ4j/vAccYbneN7B0e+Av40plXX+axyO8vx4A/MRnmM+wnPM
R3iO+QjPMR/hOeYjPMd85N+5nohjPsJzzEd4jvkIzzEfkdd+jB9OzknU7jI8
jdoPnrHSaYD+w0fUfvDo7CHlI5/ep/aDW+v+qj2rkEDtB+/0WOPyzarb1H7w
duWqA17U3KD2gx+y8G5Sr/AqtR/8kW7vzhKfS9LB2y9P6WD5Xdqqat2hbX/F
O/xd/adZ2Px+Tng+cXX0T+/sRiIeO35Lqnd2MxEfMiUxzMCyhYineP/0z47V
FHHnwB6jfj8P4DtuthoZqIDxf1vi4xVmft9wqkx6bfSTb7W1usQvncnfbHS8
VKpoNdMtO1af+JqVX0YWZ5VILf48PwbEezgkuqX0KJGGuB3uHWpgSDx52YBP
ISeLpc9mmB/yzjYiXhi3eaapWTG1x7XO480KCp+lh+qlDi4dc57aA95WZbDb
0yEnqD3grfO3lRi3O0TtAd9mOf7wsQvbqT3guTcmZgX5bKD2gH+dVjHeruVK
uo5NE34t8ctOJJ9n7NRXWYYqiDwnzl/a8ZJ3AxF/FVryxMCyiYj/tO1k/jve
8TzY07WJgoKGiGvM3/U61ltLxI+tehTtna1DXMnOuVDVspw4/q7zgTN0TbRi
pK2S6gwNNRCur0+qb6yebhnx94GhU0aGlkmz3qyLfhuSSf7BAw/OmvZpbwaV
R/1zuxv3KHQ7LZ2csj/qd9xE/WpjlLOe9Csljnpk2ZeqhtxJp+sI3m946MsF
CulUHvVHPr9Y/rTRMWlYZh9Ny9D2VH+X5Inj/+qRiKOeXZmj3zWb+IzuB/AT
X3o2Hhb9lMqj/lIN19KVU/dIS3LTlhtYdqD6t67u7dW8tJg46vEaqd422eAp
3VfgRTLdrneOpFF51K/6ZNCRD9lbpKZF3iW1tcJzkaCsoBfgXUwc9byeeCJ4
b8c0uj/B219J1Kkfl0rlUb+Ju47+m5FB0gXlylbZscYy/r4Fx++ePp42VK9u
MXHUfyFkdGqRVSpx1F9lExy+2GKJ1Nh/9JVL3p9EzwU4f3+2npOhbBnaUdQe
xCvU36WH3+x71vEUr8CfKLkOM7l1hepBO5t01nww9msK/W6psnKP0LD2stDK
2/f9k4qpPPjiIw+s56sJ/TLitlVpuP7jf+S1aJ3PnR9Fv+cFKI95pZb3wdnS
ghdUHuMizCPQv2NcNKTF97tLpLdoXIp1F5hHoP34e9F+8NF30yqyY6uJY54i
z7+8vBk/fkYc4+tBP8VzjA/5ehD3+PLo13iO8SRfD+IkXx79IM8xPufrQVzl
y6Pf5DnG83w9iMPy7lueY/zP14O4zZfHfc5zzBf4ehDP+fLoN/+d64rqQdzm
yyPO8xzzEb4exGe+POK5KP6w+QtfD+IwXx5xW9RONt/h60G85csjPovayeZH
fD2Iq3x5xGGeI84g7tl+6TMo/ek74vzziOcUcYznlC99HiX9HZfwnCIOSKSn
Pwy594rqR9zYs+HIyOCT/sRRz8/qAYMOdI6hOIB4dTxmd1FA4mOqv1mH97aW
oYqya4kvzAMWplJ7kMfg46q8+xztmV077kn8sps0P0Icbj3rQueF360kqF/e
OmG+H0E9vH+Ux+/y8yZ4SI++8zVjcS7FE5RfOzxoZFsFYV0r4nzXaYWaIeMv
UXn4H/J8j4L+lrvE0V/0L7qhWjrkMc3L8Lvf286+OrJdJsUfGi9tdrDocegR
lcfvbh02o+2nnKNUHr+7Pi7IP2fYReL43TM7ZVONN96ieRPq2XVpae+CvI0U
r1DPxfBzJ3s7HCGOepYWDV/XNOc8zbNQT0jdC5EuE+dTvEI9ZY7DtmicCiGO
epRKAqaf1DlG8zLUk3L75oOReyZTvEI9+XkF8W+WLSaOevJOjfTs5LSd5nGo
x+FxruWIkcMoXqEe39n5imd8PYmjHr/ZI6eZ+q2heR/q0ZyisszkXmeKV6jH
p83rTlahE4mjnpHmb732SxbQPBH19Fu81ODOK3WKV6hnQXHvbV3qS4ijnl8T
EzL2x3nSvBL12N+3qVRS+yZBvEI9Guu2OFReNaI4hnqsgyY1+FxoQ/NQ1NO8
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
OM0ju43xV9HvrtlnNvRN5kcR95lsHnYjpErEjU1mmlfn/iDe6OqEiCy3jrKQ
HEn3NnbC39U0zsLY9U5Hmf3mZd+ODRc45pudNX5dHz5O4MgjTbHZUfbP8Rt+
l18nDM7ni8D5ea688cl/bae8v1deHJY3XpJ3P8iLb/KeO3nPqbz+Qt64Tt59
Ky8Oy4sb8uKMvH5N3vhT3vMlr7+QF/fkxUl5/a+8cbK8OCCvX5MXt+XFeXnj
BHnjeXnxSl7/K6/fkddPyRvPyJt3yIur8sYJ8vpNef2svHGXvPmRvPgvbzwj
r9+XN06QNz6U1x/J67/kjbvkzXPljWfkjWPl9afy+l9540N583F54y554215
4wF54wd541h5eQN5+Rl58wJ58255+Rl583d58xF5eQB5eSF5+QR58yB5eQl5
+Sh5+RB5eQ95eRV5/bW8+f7/Nd6Q14/z4xZ545//Om75v/IPfF5I3vjqv+Yr
5OX3/mseQ14+8L/mN+TlD/9r3kNevvG/5kPk5Sf/a55EXj7zv+ZP5OU//2te
RV6+9L/mW+TlV/9rHkZePva/5mfkzVPkjcP/r/kOP85ft29SkoLCT9F3Z3jf
xPNzCm9HKCg0EufntUJbKiiI15ng/QvPh140baCgoCXif9/f2qJ9pa7+eV/Z
lvj4dvntXCa9YVxYb/8ywHWCiV++tNUnsy+1y4T19vuW3lzhce219KlU6X3t
MvG6CLzX4HnIxvSi2mXi/bvgDXFygJf7+N/7RMEb+DnjgCHZH/PJG/jM0dHh
Dauz6e8F78z2d8LfC75z3egmspeh9Lu0/jyw19lR23Pod8GHjOh5NKvtI/pd
8PjaoQdrmt2l6wXeuXN/s5+9jtL1Andu7v1Zedt6ul7g6o/z2nfcNIfaD+7H
9k1C+8Gt49UOnNeX0vWifZlmO855ttaArhe4YZjDjaiuDWkeAT6svdu97dVl
ElxHcNNlS85/9HoiwXUE75rwee2ufuckuI7gt1/UH9qpcIsEPtFfuJfvLppj
/ZJ8gvdYbvD0wa3b5JP2U0rr3L2X7Vka/4A38R6jqtvmMHkmrrB1Z9LOYPIM
fiqyX86kktnkGfzyypoGO1XHkWfwb2zfJHgG39KvZk+kZVPyDL6/LP+nSff3
EngGP7D98PL225Mk8AzuMtRzdLuiY+QZPDzabfyg6yvIM7jT5uDPj6d7k2fa
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
GtSdcLLZYvI8iLVfZVUDadFeT/L8hrV/6HGflDZzhPzPOtb+iDudzVv0EfI/
KRdrLUPDmos8H51Wu83AsrnIs5927cvYcnWR52FsvxG+/9JYVTMn20xdZpUY
9DrY2548vzWrifPOVpPpaf7sN6K3kP+5XPKrvsJyNVmvXll1Z/1qT55r2Hz/
DpeXeMLaH7jE69K0h0/J8yHW/tKBIzWWOJ4jz3NZ+4PvaTr7tQoiz9gvpde6
xZNNp88gzy1Z+zc18Klumu1KnotY+7NSVTa31hHyP1dY++Pb7NIec0/I/wxv
qfi9dpmGyLPmn+88NESe3wXWCTFIainyjP1beM8bChT0LdVbisYJTrsVZmXH
tpCVZ8wd7XKlK3nuMloh1tuxhWxg3Ye/uh8T8j9+bL5fyOUlhrL263xTC87u
FU+eW7D2z22hU3Cl5AB5fsvavyjAOl1pxzzyjPYvfP6tkXahq5BnY+0fEd/q
aaH1FPLsyNrvW1ntaDdJyP90Ze1fOrNLmld3If9zdUG9U96OWiLPG03qfa6t
bSXy7JxbVxIa1krkuRvbD4f3rDC8blpsuabIc2q1oo5lqKZoPHY0StEz20xT
Vl/P92zUTCH/847N96u5vMQV1n7Hk6v6GnW6SJ6DWfv9A01kK7eGkGcn1v7u
n07M7Vk8nTxjPx+nLvGBNZuE/E/tsL/bLw126DMoVchLpLD2R02b93FYwRTy
fIy1v6dh+o3UO1PIs2mWkkO2mY7Ic50/+/xoizyn/fl9bTnzOG2R5/kn6q80
SGot8jz8z/d/rUWeNZvW17BUby0a9zrLyUt0Ze3vExVwe9ezw+S5ZsPf7deM
W3yhbpPl5DmVtb/JqMKUbzNduXmctuzZiMzNHfIchTwba/9GZ4+EtdeEvMQw
1v51BXoxdfyE/E8r1v7Avck3DL2F/E9Yv4aNLNXbiTz/vZ9EW5HnEUeUD3o7
thV51mL7NfGeS/68F24j8hz35/1yG5Hnjb4NEmPLxfmfNDl5iWOs/Xxewo+1
X91hs/uTD7PJ83DWfsN+btrram3JM/abajzYvtO1ofZCno21/8y29mvtfB3J
81XWfqfLLm0UHIT8zybW/leJ0zNLxwn5n02P6jtnf9UVe/5zHXVFnievqH/C
e5+uyDP2v+I9d+td/2OtVFfk+e/rrivyXCet4QKDJHH+R15eYiNrPz+Pm8fa
7/gqICT4H3kJZ9b+hWqHziYoC/kftH/ane757TxtyTPa/777t17KT+3JM9rf
70XHQFmgkP9RZO0Pu9fy/SRvIf9jUaPUO3Sqvsjz3/FEX+RZ64LSMoOG4rwE
9hMT3c8eSkmxUeL8z99/hzj/E6el1Nxyojj/Iy8vMYK1n/fcjbWfny+3Yu2f
6qd0sIWvkP9B+xesm5xwtomQ/0H7K7wibvT7aUue01j7XRvpF31PsiXPaP/I
PQk2FVeF/E/dbsqNLdPEeQmsA+E9P8tvYJu9QJyXuM7WmfCew3c2OOKtLc5L
hPx5vsT5nwUjG5TW3hTnf+TlJRRZ+3nPJaz9vOenrP18XgLrZIxqQkJTlIT8
D9r/1j/gc/hwIf+zibV/4Xf9Li/6CXmerdtSNTtYfpP6LNrQ+/f6DXjzCq/b
bodBqmjdi0vu9qaXvSukMZ9HN93uXULe5nLlwYd3apw3KjRHxF1ZPWMmmESu
+/yK+HGWr/Cc1bzC3SeD/OM77vs53Tt0cHtN/v20t5zNiS2Wlu553/LxsXwa
7zVi615KubzKCla+z4wGT360eEXzxMX8Pi2MN1zy9+9aYD8rdl02cn8vuC/7
u8bmtS5UjX5M6214P+DDOD/g7qye9cvnpS9wfEAcfnSPl61MX3eO7n98d7z9
6ZZ5T2/m0vWq/+XpvVCDH9LjdluHfCtLI89KjL+Y2HqCaVQMceRtbtSpeNxg
1WnyjzzP0WrX6uykbeT/O8vbbPK+ZDdwqD95s2ft6cH2W4Cfxux3PaZ3vjD1
vgX9XWhPSNs+lw/u6UAc7ZHdv/Gx/jUFWqfUn7VH3zMpqJPHS4oboex+HhTU
a8yVkAG0fgn5K4+EuiefFVyUwA/yJ1N/2Z/tER5HeaSLLE/CxxnkhV58Kr6+
szSJyh9g832+PPIbiEsov5bNW/nymKfz5TF/5MtjvsmXxzyCL495E18e43m+
PMb/fHmM6/jyGMfy5TG+4stjPMaXRz/Ll0e/zJdHf8GXR//Il0fc5ssjzqM8
7h+Uj0ozSn/cRcifI56HTw7y6KFlTRzxf0CXYbOulFtRvBWdH8qeO6zT8/e7
eiDmbAk9d+BFFm8Ty3Pf0nMH/mVckmeP/EJ6XsA/NG+2WPn4K3pewMvXdI1z
7/eK/i7wqnE1/dxi86g9WHeXkh0+Nzf7LtUPfjwh5FxoojPVA56VMGy3y5ZB
5Bl5S3gGR56N58gL8Rx5DJ5j3s1zzBN5jnkNzzEO5znGjTzHOIfn6Jd5zu/v
RM8jxxGXeI7rwnPKh3Ac9wnP0T+KzhFg/eO/c/G5ADRP5/d9ZfeJ6FwAdh/y
HPePvPbTvv0V14YPTk2l9oNnsf1d0X7wSTov55hPS6L2g68NedFnalECtR98
8Z6J1eNV4qn94Cdedoy54n6d2g8e7N3mxraaK9R+8NolRx/WqF6i686Pf3B9
x8jh67n3RGj/r69/72/zhe2zCt6T7XuziXH8XftYPQcnqSfp2xSRn9Ns/FDY
1WaE7vVbVI8Ve3/kqPr3vqngs7G/YqO/Oeo/zOppd9a9s9qoS8T12fujg10e
3T2dKazXnb/0XcCi7Fgpv35Y3riRf1+G+0HKeaP1AGx8eJsbp3mx8Z6uxbeY
XZNy6Pqi/vdxxsN+SYX4uZCVX96qw5nRRi+I471b1a1f95ZsXknX/RT3d4FP
5f4u8LXsdzeo5RuOmV9AfBn73QPxu+aUbc0Sngs2DlTItHeKNb1HvBVrz8Lr
VcY2ET5Ce9h1aRS7KSNhyEl6XirY/XmHPS/wj/t2r/Oq2t/ntoDjuxXJk7sp
AxfkUrxCPN+otvzj1XF3ifP9Gu5neXwz543yYxxH++Wtn3fgyoMv5PyjHoUX
CkX/tt5+nJx4yP8ueAL3u7QuiPtd3J//Xo+uLOzu/847cN+K9mNkvBH3u7g/
eW/w0IbdJ4++9VOeOvUS8XB2n2yds7dpW8MH5B/3w0KzQ9EWs7KJ437YYHYg
tbXqeep3aH/U19+UrjxIJ07nkkS+CsvYfZB+F7xx3Nw6kU3Wk3/wnWwfOfDn
OFeavacGv8HKX2fl4R/13O9/e+n+fFfiO9m8QOPgiBNjatYSV2TzjtHTR5pr
N59D1wX1jK73aNHGO6OJS9m8Jtfn73kNOMY/a9g+crheqCdgTHy+hrkZ8fWs
PS26qq+1LZxNnMZRWxTmnZUupOuLematVTDyCmhI/RG4t++mpY1uV9L4k85z
WdTT4q7/Cxp/Yv4Y6zTdZtqkUnreA9k8637mglVjN7+k5xTX96hk7o1u3YR1
Bah/jENEbYRDCt0niJPxVVqvKls/JI48w7OYtQ55127R/bCZ8aDxztZ91cKJ
K7Pr4jAzrbfr/VDi8ONVbJGp7nSa/KD+kKyhZ7Q+j6O/C/GcH3eVc/vC4b6a
IW9cxPU7uF69OI52bmVx/suXJzFKi0soPlvKme+PHrrVsHBJrmg8MDv8877b
OaWi9ocnnHapP/uDKM4srbHqmpmcJ2pP7409Dkz+8FrUHxlfbLdZKeqlyIMK
9/0yPESlnK08dOiVyMPiVb+GB+3PE8VzXYU1hoFLhH4c8aHzznq26deF74Jx
P6+Jqe+SmiG0h+YFST4V//xuVF775dUjz7O89svzKc+DPG/y/MvzIM/bf70f
5HnDvoibuPEVeACLA+D4jhhcIWflza3f0un73wfcuR6oB5yvB3wE2+8a30GD
686q6RrZOoa+ywavOPnDZPTGw/T9OHjXZzOSfxatpu/cwXspFKW13DONvscH
D7uXvF5Ly5L2DQDf1iBAtW1sR9rfAPz+YN0DO5Y1pH0YwA+sv13n4fJ3dL4e
eO6nfcWnchLpfD1ws9y6lxVahtP5euAtzrnZZ05YQ+dhgX8t9jGfM3sO7UOO
9Se8Z3DeMzh/jiF43aLuij0sj5Bn8KbLPJStPTaQZ/Djy4O/fHzqTZ7BExsc
XNNx5EjyDK5zoZFNrq0BeQY3bdZduf3Nn3SOIfjmJy7jftxIo3MMwX0nJZ6J
63mCPIPnKleujmi/gjyDb9doNS9YzYs8g0fd1n4yoK5wrj14tfM2xdg+HuQZ
+TfeMzjvGZz3DO54bYvsn+fag49V3D068as/eQZ30dmxJTzPgTyDz9PKVP1x
pTd5Bv+2UNU0LVOVPINfnXxN7db6V+QZ/PV2S0vbcefIM3jjiw++TJ2+kjyD
N7vpb17rMI08g0trU4qLhwjn2oOvcjIKjNUWzrUnbwe02n197U6esZ6E9wzO
ewbnPYPz53KCtz56K7hLd+Fce/B17wwb9jWzJM/gzk4e/j80O5Bn8EEhdzKu
zP9O53KC5/Wxf2Ra+IA8gx/fYfNgr/ku8gw+bcHdL4nPfckzuG7Qwei03cK5
9uB7kpsOdh8inGsPrlGmP35zpht5Bj8VF5jd2VI41x7rc3if4LxPcN4nOH/O
KbiZSdD99G5G5BNc/dhnr7KHdcknuErunDGq9XPJJ/iy7wvvn04/TT7BI7Nv
vZpgvJB8gneJMlL86uNKPsGfblKvKkoSzvsGvxe2NO7mIuFcdfB+Q9qnOQ4S
zlUH327XMfJ1gHCuOtbb8D7BeZ/gvE9w3ic4f24suFqP3bcTTSrp3FjwdZOK
Ws2peEQ+wW+E6WSFrDpMPsEVHXureebNJp/gCyQd5/1q5Ew+wQ1WzD3a0l7w
CX67aly52Tnh/HTwRgPOGCpOnUw+wV/srltH1dtZONebrT/hfYKLzu9mXHR+
N+Oi87sZF53fzbjo/G7G3S427ebndVk4v5vxJRrm5rstQ4Xzuxn/vMQ3aleQ
m3B+N+N9G29WWmNgL5zfzbhj15vt/COEc9LB9z6PTmkS4ySc3814jxH2+k/m
OAnndzP+4EJY71u7Hckn1sPwPsF5n+C8T3DeJzjvE5z3Cc6fawzeSWV4x3y9
5eQTXGFPTvydZlbkE3xH/+CVC98I56GD98wbdanJekfyCd4oPihv6UcH8gne
N/fwsYpIB/IJHp5vs2DlJ3vqp0zZ+hC+nwLnPYPznsF5z+C8Z3DeMzjvGZz3
DD7rnFdW6j/Oj6a/65hrpzXrhpBn8N1bl07sd144Dx3czGvk99tKwrnz4DM2
Tf1a10Y4dx58QMsz2p5NhXPnwW0uRL7MmmdHnvGejvcM/u/xQXzuPPi/xwfx
ufPg/x4fxOfOg/OewflzusFPH9DTk63tzsUHPVmTRG/F6ibWXHzQk1nPWZQ5
1MqOiw96spBBGv1sntty8UFPVqPY98PLHbZcfPjLQ1yTxy4atuQZ7zH5c8/B
eZ/gvE9w3ic47xOc9wnO+wTnfYLz556DT3jW36HXVeHcc/B7N3bNKbohnC8P
brFxYLdd84Xz5cH3DXw9PL+fcL48+OCL5e3HpVlLXpa0VJmdXU/Gz6O/NFh5
PjtWRcRb6nVZ9vu9O/iko7b33geVS492c58YatCKeNRSj+DY6hJpHMszgN9g
3wGF/XlPr0d8zbTjMyoriqQl0Qee/H5vDW7YoKekt3GR1PRa336hYQbEG05/
vqBtUKF0QfzTo96OhsRDlvd3elVbIL32YLaqpbox8bb7b115FlIgrfvnfXxH
4oE1mkPGdi2g85vw/dGqXy92zLv3WloQ0rHq9/cAyBtc2KZ9/GbIdemcA1Me
eGc3J756smL0LL8IaU3kjgMGlprEK+KDNT0eh0q1WH4G3JV97zPle+rkbDMD
4m5bCx8tMdaShtfxvh9b3oH4Med0FfOeCmyfICPiNuk9ZwWOLZB0b3Zsn7dj
R+KHvrROvpBxX3II50Zhnu4/LbXk/F7hHCjG31b3bF/VbYVw3hDj5qO7lu6f
nCih84OQBxh8Ord+Shid/wuufm5U9NhOayQOxvffxXpr0PzUOWHeqeMdZki1
RhyxzTYzIn7x46ekdE8vyZSxA27HlgvzXOXJSgNcv3nQuq8C7rsJf3ZeG3gT
j6HDoqrcJbnsfsa49/KcaY7T869Jv7H7Gfzr5ICXZgt2Sf/+7kKYF4w7mnBr
1vsZdJ+DD59e/D7guBnd5+BW5WetwzqqsXNY2hJ/VvX3Ovxwdp+Dz/vU1WLu
ma2SUnafg9ddk9ftq+IMSXd2n4NnXQ2W9Oo1ReLP7nPwOPc+k+d1cpFcZ/c5
td/L3MtjlIsE9zl4/y+yFp77p0is2H2OcWznELN1c2YepvN9wDPsjmUtMfGj
83fAuzk9uzzTdxCdpwNuWqTQcmNiQzqPBrw5Ww+P82Xod9Oq51d38ZDgvBjw
7KpTFts8JtO5MOB1rI/ph31xpnNewOsff1a0dOlkCfahBbe709HkxRlnyQV8
D87GmU/Y+slC9lyD+716Mz7BeZF0LnuuaRxer9fiXZtGSGvZcw0+K6H7ccNz
avRcg9dj68/xXIOfnLC0d+cfjhI81+CnffZvuefpJMFzDd7sw84OkeudJD3Y
cw1+rKKop9UnRwn2jcR4z+z0NvO7p8ZIu7DnGvyh5ptBDZZoSP3ZekvwJmyd
9nX2vIN3+6I8UcXQkZ538OceE6uzHjlILNnzDn7eeNm+83YOkhSW78W4qBlb
d+rE4gCN92Zuf/nWUlv6jOWxwcvYuuXWLD6AXw72Cfhibi9xYfEBXJKePq0o
x07SHd+5s3GCC1t/u5DFB3B785u9XQJsJb5L3+pvM/hC+eGAU5HF233f0r6O
fH+H88LQL6yPr3PQteQdnQMIrvKt2Z1u5QXSCTl5fS5516E4fPx06YvVc55L
Z1SPyv29fg580cXoqVe2p0hXaVxeHWrQlLj2honXgktuSZ8wn+C32DpGR+YT
3N3NeFXq4R3Sd3/Wz2kRt8sYP+5G/2XS+cN6bf69Lg18xPGYV1s+eEjrmPQ+
7+2oS3zjltAbUepjpSO6p7S2VBf6qbf1y8e3a9dLuqmv12qDpPbE9/WePFB7
RGt6H0H1s/WNiPPgDeYuKLN7UEBxHnzhticBk/onSVRw3iLrRy50sC80vnBV
2pjjJxlXx7mKjBsu0H1X2jxC2oLjWoxj/IPfbdRv48Sn0+MkF3FOPSufw861
vMTxdMY/4XxJlGfnWn7heAbj3ux+Q7+2jN1vvza2+WoZ+o34r7gPQx8E5kvH
s/sHfM96v0uPFj6W7n6z+EioQV3iK0bsWOjaLEFqxPYXRT+o7xBn23hUCZ0/
BW6wZFiThe6vpFHsfgY3WeUbkWqRJi3yOT8uJ/Yj5S1vNExOWNOhXLqKvX8B
D2PrwTRPBe//vW4VvO4go/kDrNOlr1k96HcSWT3qrDzlzVj5Dqz9iNuGrP2n
WTvBu7B2wifiIXzCG/g+5u0cu440f2fXsZJdL/Aidr3msvoRZ/xZ/d/Y9QKv
e+3v6zWJ/S54EPvdHex6gW9i1wv7wSIu4XpJ2PUC78iuF+IPuDHz8JJ5xnj+
EecZHJ4xDwVHfMM4Afx2wPVw61xrCfbR5eMh9u/lOb5H4DnGmeBH11407H2r
jPaFBm9XctvF7UYJ7V8NLinPvlYwppj22QbPjc7bbdT3He0HDm6lGLu8bPJb
+t4c/JjLun5dzhXR+BY8LuWonb9uEe0DD149LbKkQ0Qh7VcP7qR8NrR4UCHt
M4z4/357ue+YsHfkB3z4oOobwzzfkB9wu1M2KT+Xv6D9n+lc448b262un0be
wF0qbw7KO51E3qj+FWN9ywfGkzc6f9muaXtJ2xvkDfzgQKPqlVMukzfwxDqV
+j36RZM38CETlpzI1TxP3sCrn/UxCh0RRd7A7c8c/jBh7EnyBr6rmfL6BwrH
yQ/isL7X0h+xsU+E83ZZ/DzD4jy8obzv2ZhT3otuCufqsvJtWZxHfgBxBvkB
cMQTniNu8JziA8f5+xz5B54j/8Bz5B94jjwDvPWb3bTz7FaJ9N4BfMvu7gfT
P9yi92XggRGNV7esvUrvf8H9j3h7OhnE0vtfuu61nfd5hFyg8wLADWa/bGCx
+yydawCeErTc/0f3SDp/Abx7g1kF5jtOSH+yOMn/XbtYPOQ5xuE833g12Tc7
VogPrYtO9j2xp5iduyfkE1TW5Ul8zd7ROBw8mq0XxTgc/OJ79/OxkYU0vwbf
2K9zQ/N2hTS/Bu/b/kVj95MF0pYsrvLtxHiP5+0rz82zDFUScYwDeT6waRvt
S96NRRzjQ56b7LzrEmqgLuJYd8HztNueL2K9dYgviahwfPrinXQeGx+CF/W0
jz635p10yp/zCtsRHz1+54vBJ97SuBF81rOC9U6ef8Vbnxmy0DAhn3PB7Mqm
xCtFNJ4E/355X9OdQX/F4T/fUQvxeXHk61v7fhbSOBPc1MgkouPTQqni0kPN
LdWF69XvV7MfUjdhvSv4B7YO1mJN/yUGSUJeSGWYjl/G6wIal4JHWKrPUE4o
kGJcCv54+q+x150KpPmsn+V9zmbjBJF/Fh/wXBhWtkyeb1pM8wtw87gNkt8c
5RHfNk2Y7b5niHDeOjjOW4/hxqXg6I8wPsR568gLoZ0GzUzHaA4TylN+aciI
tSXdM4Xz01n9mayeFG6dzGsWDxHH8HdNLUrTfnMnnTjqX3P+ZpeqNdGUX0V5
xdiBRt36CucIo3zPPcF+vToepngI/sLlYXwjtXUUD8EvOjQa5mI3h+Ih+Ks3
F2xlnnYUD8E/np5l0zlWRvEQ/EPfoSHl4w0pHoJb945r3k6xMcVDqmdAcXsj
50rKu4Jnq7rUJIVnSH6weAiu8vj1sXD7fJqP4LpsTnzg0659AfUX8POyflTh
LoNXxFFP/5y4k09U70kHsLgBrhS/92lq0V06lxN85MG5J8cl36F+CvUvmG5e
MsHjLeXB+PsZ4xOe43qB2yUYv0hsIfRf4LveP2vUN6KUrhf47AxlVZNvxXS9
wA+dHtz385V3dL3AE359CByT8JauF8XnGVUz1eq+pesFPn6S392fU4voelH+
efLNmtuvC6n/Ao+3Xzi4oV8h5XXBaytdblXZvae8LnjXZCvNmDWl0sth33ta
hgoe7sfklWk8KKN5OvgXjQ7NH7crkw5j6+jAf7B1lZi/g9/2S3ylXb+E9pPn
17OB8+vTwPn1VOD8+h9wfr0KOL/uApxfPwDOvwcH59/ngvPvH/+3HvH+/Pz8
ZfX5l6+0U8X3pzz+//v8//a5FvstcN66SvZ0sAzVJp9DncY02WBWTOM6yqu8
6xJb536G9CzLu4KPY/unbWDjOnB1BfMcjfgAqSYb14EvWfbLv/4Xd+nT0n0b
fu+PAB7za0Lb7SWjpFfYPAjXq8GoRt0KDKbSPAjc4lve/XzL4dJiNg8Cn31i
9IwLh41oHgTeRXvYjCPqyjQPAt/D9iubzsZvuB8mP29W6bfwjHQlG6eBd0gN
/Vb985D0ERuPgXdh+4bheQefZfbofoXDcMrXgT/pesTk6zE9GneBT/9youen
NdUSjK/Ad9hMD6xjnCrBOAp878iVzpfvhkuQt8R961evcVXBtvPSPNZfgIeV
bbZWmRBE53eDR+hvc1u9YAGdrw2+/tnQfq9te9I52uCtesRN+Xi7IZ2XDb7S
fN8Cq5cvJTgXG3zRgO+zYhuekeD8a3B/sxq7F2NXSHDONfiBiREGTvOnSQzY
eBvPXaJfUt0tpRdpXA0eXFu5e07LYGknNn4GP5/pNd3xiQvFc3DV3qbD0sZY
UNwG78L2v8K4GrylZkFy8pdvEoyfwS1d7JuH+yZJME4GP7n30N3+ljslGA+D
G0QWHeu5zFeCcS9413uFam3fukowvgVffawqwr6fm6Qbe04RZ15dTjh7w/qD
ZBjLLyHO6LH8knNgj1G/vyMFz/SfW2F3r0Dyd96gLfFfRZ/eNNl1U4K8JeIS
8pbIT1JejuW7MI+j9xrPV0xRO5ku0WLPO/iODnEx42IvSPC8g6eaLA9QdAmS
XOXyeGls3PuVy+M9ZOPVJiyfAL5ilHFcm6STlD8BXxXRpX1JVrZkBIsb4L41
mg93WO2VIH9C63zilw9efC1AgrgB3nJjnSVDTtpJZrH4gDhsZHLk2e/4sIbF
B/Bc/wu6JvkrpcUsDoB/iZvl51rvtWQBiwPg6969HZmofliiyOIAeNLlz3Md
erlILFgcAN8Yr5thWjhOEsLiAPhr1+HTujS2ldxjcQD9gg+LAxg3gl+OS8t5
9GON9BeLA+Btl3bMC6m0kmqyOAB+5tjg9DE6BZIwFgfAf10qvT7ox1EJ4gD4
a331JxlP3djzIqwz+Tra+ezeqYMoDoAnpBRHOe23lpSyOEDrZ6KvxifJ7CR6
LA6gX3vM4kB/FgfAt7M4gHk0eJeJz6Ud6thJY1kcAA9YG7D+2Rx9aSp73sH9
11aYXn8TzuKYsN7jdFm3xKenPSTz2fMOHpw7Sa1qhZkkjj3v4MP3eOxpmGIl
qcOed/C1+vafE67Y0PMOfrWmT/ERHxtJDnvfjTiQzN535zGO8mcZR7/M9+94
7sCbxR/wn9LxLX2fAr6Cfe8ZzMYJ6JcT2fdW8ubjtF8K8ku9tpydLUmj8uDS
yWXmCS+O0vcstC6CrZdAvwy+7M2RNQ8vaQnnFrH+etjsDT12jtovnFvEeKO3
Y6sWqawSzi1ivES9YkbDa57CuUKMt49Nmqm7NJHWIYD3aWY3alVlGH2nRusr
PuiY9rZYI8Hvov9NrpvaqmXMTPpdcCvNuvu9vlvQ9z7gJyNOKU4b6UX1g+uN
umlxsNZDgnrQD9apatz+/bpeUnnrJVAPeNKrmFfnG06lenD/mLJ+jfbBYP3I
jBf6Y2Z2iKfvd8D5/YjA+f2IiPP7xTFe9nXhvg1125Mf8JigRxmB7RXpeyXw
L1X/u88huMJAQ/+cqbuE/coYb3D5bqlvpA/tOwS+wKzCcaG7C+07BP5pRUuj
+NfC+QvgST5ejitmCecvgD+//HzEO1MX2o8F/Sbvh/pfzg9xzg+4aJ83xi9f
PNCoPPcDeQAfyu1DCB7Z/PnmDcme5AF8atP0OqqVzuQBXL10fb7TCWEfQvCs
7oGysEOTyQO45pLy1JRhk8kD+nHRPvyMi/bhB//X/cG0xfvwM459q1px6zHq
c/sB0rrrUytCM2cI+wGC31z3MqnxCmE/QPCkljkdWoc5CfvnM362d1P7VXZO
ErSf9vHj2g/Otx8c7V/ArdNQ5fbTAz931r6TqlTYTw98zvZZZZF5DtRO8Ezf
3Xq6uxyonRgP8O0E59sJjnaiPeDl3L5z4Ad7364OGyrsOwc+0Doub0uNneR/
r6Owz5upnHUd/+tfT9bp0A/1Q+tsab8ymr+z7+Po+3esT2vX9uSApF7C9+yM
T7i8PWWXQlvhu3XGNcqbPqm/s65oPriNzQdxnyM+H1BrG2rf4yTd5+B1emmd
WWW1n+5z8I5sPoj2gw9g352h/eARCfc2zNrfkNpP36PNaH/7RaMSuv/Bx/pW
2bu+S6T7Cny1/qC2m4cdpfajX/ip3e7mP59Tmpd9ar/POG8ltR/8snFG/s0M
P2o/uPGiv7/nQvvBu2hXHCv9/J7iFX1vZZ9+7ZRdErUfPHKeWfrbCUeo/eDJ
AwdEjvkm7LcM7u6zOsHvjqcE/Rf6NU+u/wLn4xL413tz+rpaCPtRg983vWt8
9oAjPS/gZg/bh2XtGEYewL3Z91a0fyzjOy99PKH94Dl5ALeNUvHccfYCeQBX
SfZ3ii5ZSx5ovDdTcZ+Rh3AeFvhVB40fi+sI52GBK1UN3/9pnBs9L+i/nNh3
TOCUj2Lf49A+llinp1PH2KvsonDuCYuHW9n3JnTuCeJtcuFG9dCjwrknjG8P
TDr8Zv5yug8Rr3BdUD84vw8h+OW1CmuihwRT/bTe43PcImsXX/IJfsnf/UZK
Hzv6XcQl/n6gOMn6KbQHnG8P+Jshir3+uZ8quO3CezEZaROpPeDDs4/ey5II
+3yC33BfPGFpuC3Xn4rPWwH/9/5U2G/zf6+XeJ9ScH5fR3DlJo+TelaO5frZ
v+Y3s3Qcht8ew/WzerLDjnfjrFbbcP2snszpq2Xmhm529JxinuLFPafg/N8L
zv+9xLl+DRz9GjyA8x7AeQ/g/P6WtH9m6eDEDyuF/S3B7U8eat0uTNjfktb5
e+x9NfK4sL8luMGb69LP04T9LTHfSWLzLHij9z4Fn91zVmaQN/DR3LkV4FfZ
+zL8veBHd81f3zXUmfoX8Px8h6A5XS2E/XDw/bv/HX/L0VeoPehfRPvmsbjB
7yeGOPDv+91pi+rB88uXB0d52reWPUc85+e/5+TMi69y3y/cZN8vwA+9H295
9EOEqrCvCL0PbTfT5OXOfGo/vPEe4I3n6Nd4jnjOc/ru6V89C/u8YdyFdv6M
zW5oXHaH5vvg+d3b9Bsl2Uf18H5wX9F6APZerxW3HuMKt38XrVex8XFfbhhL
PsF3qPzvPl3gQd93Ov9UOE3zXNTvMEJzts/TArn5CrQT9Wxg62do3yd2Xbaw
/aAec+tvE7l9RMGnTtQbZ999D/kEHz/11uZU6RrR+tjR3P6f4A0fSF2sW5fQ
+Bb80ahN27aPeUpxAO1v53LYxFypWO56j6Hce8Zf7D0j2g8+2VNxeeW8Mun/
AwG3GW0=
    "], {{
      {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
tFAX9z9JSgle
          "]], Polygon3DBox[CompressedData["
1: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
sr6Csd/oL14SW/QJ+oalSmKJPkhftAftPvAzddb3C2181Qac/wa5TS984aU6
178n+BHwi3XW/+7ge8FP19lvL7aJFRty/I3Y3pQDgbcA3w7ehXYX+Ik6z2+l
NtqaOYD50VNtrndt5o+Qu7WJ/euArwPP3Yt/0c8Yr7cGX2Us4nyj6G/VS759
M/gX+l8z79YqXGKw+R34DPDm4NuwP9/meawPHtlL/qFvXg98PXgY7XbwI3XW
807uYWNhHX67Yy/nf6gOn5qnjZZiTDQ27sbYPdifquMPdgXfDX6yzn75yv2h
HsLYViX+5n79Bb//GHN74Af0B+DHwfOCt6vCOeWec7gH1XOa6H+/l8Qqc7sJ
wPOXxGJjprFzSfDRVTiV3GqJkucrB5GLLFAS243hxvJ5SritHFYuu3TJ+pCT
yE3UqNSq1Iiu118w1vQl9sovXmuj1QzFdgu218GngzcD39qLn9ffqyncwdjV
4M2wz07/LOyvtom1m4JvBs/VS/wxDsnf/sv/4dj3wf4Atm/BV4P3Bt/fC++U
f6qZ3NRE41PrU/MYE9t2zBkh1+J+fpcLN9GTzNHN1Xcr0U7Ncc11fSdyaWOC
78o1emmdNeXa/a6LZ16z1z4IPKiOjz6+RCOVz6uxyd+PbsK99Zl/+07s74Kf
r/LujXnP1VkDxkJ93LN11oi+b2CJrzZfGauXNe5alz+fgm0yxiatEzOOBe9B
m6AvmoDagDmGuYZje5ZoBGoF3vPuJTnyXPKrvuTOZ5ZoXevTRiv5zU94th/3
51pOLvntvzUn33VJbqimpbalBvgec9/tjzaoBq0WLQc/uI3mvmzH5w5p47P1
Tfoofblr6Lo6nNq1ZQ5xbx0fb24hZ7+tzpqQy5tT3FcnRphryMHNTcxR5OZP
d/zR/OrQjq+6t9xjN7TRNNU21Tyva6NJqU1tBR7RRsNSy1KzurbNGnwUfEeV
tbmv+mdfNLdvStakvkSf4lo1p7i1zpo119BH3lAn59J36qNG1smR9F3umevr
5FDuJfeEWsTF3Xrbpokv1Ce+28aHqVWqqejb9MlX1clx9NX6+Cvr5Dj6fn3g
Fe79Kr7RnO/+OhzMXHAgeKI6nOJofUWJVqQGqRY5KfbxsU8BPrJEk7mg43ev
YJ+ZsbH7wsnk2jPSxuyLD5D7qVk+0qRGoJappvkAePEq51eje6iJRqV2d0uJ
dji4L3x4lhKtckLaXvRvLtFO3dPGR2PELd3z9vnfWqIlyrGOK4kZN3fP75s2
PkHfIOf8sY3mM6Jbf64fNZ5ru+f/cRsNSS1JDeij7n1c0T1f3+/33fs4t3s/
xpCHu/WgdvJntz5HduvdmGJsMeaYu8t57+7W709tYryxXh/2QxtNXm1+G/D1
bTTe+5rEF7XfaUv0PHOwG7v357O9Xg5ZUsMyhk1fpbY1MW2Dvmj2Z9GfijZ5
FQ3oKfO3ktrAwuAn6U83IDWJBcGHcS1HlGidatK+z0NLaj9qrr4/axLqjK6h
g0p8ir7la8ZeauKv5uqu96aS/FCtTc1ti5Ka2FDO81p/amVTe01VNLAvzSVp
U4AXlUOX+HPrZasaM0v0vQVpS3h9JZr8QuAl+6LV31aibcupT6D/aYl2asw1
XqvRv9BEs9C/qbE/5zuv4v+s8aihmX9Y+7HGYSw1ppoPq5mc1OV/5j9q3Grd
W4CvAb8AHlKnxnQieIEmdQDXtGtbTi+3dw+4F85qo29bW3u4yxnMHY7r9r/X
Zy1Ajfyk7vqtNajZn9btP2sHaqaHl+w3tXE11UNK8s8nm+Tf5q897C83iQnG
BnMScxP3lHtLTiI3mbpKrVLNwzzQfFBt5kHu7zHu707s3zF+l3wLfA34g47j
yfXMP9VqjPnGfvNNtRzXk75A3dr7fYPjh9apCZ7fJp7d22QN7ddxErmJ+oB6
h+vvwSY1Umtlaki3NuH8akv6H2sr1pQOAP/Rhv+qdb7YRGNVa3WNHd4L51q5
jZ4uF5unq7GswPHXgOcfEM1DffWeEs1c7dwYsV9J/H6+CYeVu5rjmOuYY5gb
meOZ67kmXZvmeOZ6+ndrTWpscp6CfduS/W+tx5rcPu79AanxLA8eXpJjy8HG
Au9ckoMNAC/Ul9zM/dxro8dODn6lSQ3vvSq53VwDUhOwXnxvyfNTN5KjbV+i
Mag16PN3Kcmp1m9TEzTXWrzLAdzT7u3FupxdH75rican1tcDb9c9r/ub7GH5
mPZbmtTQ1QZdE64Nc4QdSmpC1oasAV3ZpuZj7cea0RXg93qpSbtnDu6lRm2t
Wv3u4jbfBPhtgDXVc9rUqK1VW9O+qE3N2dqzNesL2uiP5srmoOai1mCtxapf
q0daE1cfVC9UD7bGba3bGviFbWpU1qqGgq9qUxO2NixHO65NDdpa9PLgk9vU
1NQ75cxyZ/2ftRFrJH+U1MCtha+A/ZQ2NXRr6erH6pPqleae5qDql34T4TcD
8sNj29SwzUXNSdXfrXFb614OfFKbbyD8FsJvKM4GP9pLfv5EJUHGt4APAu9a
Ra80R368Tg5o7iw/er8vOdDXJTHKWPV+x5d+4PjhdWo0H3br++YmMUxt2ff3
aJMYY6zRp+hbrEGpBz5hzlJH8z2ojX6gvmMObS6tT9G3qMnuSP9X5t9RJ4f+
nvlfg0+so7c+qt9hjlqbnGVYt3/ubMLnR3Xr954m3xzIb77l+PPr1KhebuMT
9A3W3D4r0V/1RWq0arXuD7UHayTWShraR/Q/pI3Ty366q0kNSS1v6l50SXO+
zYyP4J3r1EyHd/zb2KSu/mKnyTzS8VPzDd+J72aJJvqXa8y1PlaTtafvNtYZ
H42T5uD/qZPTm5v7jcoldXI6v13RR/g9ghxA3zGkhLvKWeWu65dwSTm53FwN
aNNuv6gNyfld202TXGBQyfco5iDmImuWcF9zAHMB65neu/VQv9Uxh3Bt1k1y
i01LcilzNnM36+1/f39R5XsC9WLzVeO9cd/vX6xtmu/4myuW5Hbeo/fq9yKj
qvhHvz/xe4yfq/Adv79wj+kbJmyy99Yt4XJyOnMPY7ixabwmsV2eI995qcr3
BeZE5kZqUPpHcypzK9eAa2F18AVVOLxc3pzFvd02yWXMmQ+sozHqD/y+w++T
9LfWq8053fulSS46lPO9UCXnNPdUMxvW+RP9l3te3zV2E1/wz5LYbI5lrmWM
9nq2bxK71yvJtczJzM3kFuZ+DzN2mLygJDcz5zH3Wask1zHHMddZG3x5lRzI
XEgfp2+coInv0+foa8dv4ov8HsL6pfHO/F692b1sfFN/lzPKHfUX5rdyLmsR
8zXhYnKdIV2+P1MTriM3Nf8YaJ5RkiuZI5krrQz+d5U94F5YpYTLy+nNteQK
5kJyktHpL1+if1gzsHawakkuYE5griVH93uBeZtwd3NKvweYu0muuWHJXnXP
mjvqY41dg5r43o1LtABzZHNlY5SxbvImsWsTOVYVDUEt4aU29buNsN9kbCrR
FtQU1BbUIx7t+Jj+25zX7xvmaZILr1GS+5gDmXua8/p9wlxNcmHXnGvvH01i
k5rpmnU0TLXU4Z2/maOJrzIGGWsnahKbrGfou+VL1ivkLubO5ih/1vHhcuH+
Jr59ZAmXlw9sTX+lEt+kJqM2s0KJb/KbIb8dMqZaD5+tSayVA/g90CxNuIGc
Su6+ZROutVyJlqOmY61C7qy2oU/dnf4G2G+qkiObK8vZ/X5jziZcXg789/cx
TbixHMTvjWZtwk3k7NZylm/C5eVQM1apJcmtjMHG1jGbxGZr3ta+1VDUUsxh
zR33apLbqgFcDN6kiRYlBzYWDO64sTVva99q9n6LaE3c2rg1C79VVAN2Lbmm
1LfeL8md3pETD0iN2VqzNRa/RVTzVfu9r0rtRY1TrVNN2FqIGqdapxqotQI5
7wxVaktyYfMHvyGQUx/SS83Z2rMau98ymjOYO+ijfb/GZLnDfk1itTmbsWlw
lXzQnE1f7jFblmjMas1qrmr35vTm0ns2yfWnK/Ed1pTlj9OXcE1ryvJ/94B7
4Zgm3EbOZm49fRMuZ03D2GKMkQ8vU6J/W/Oz9mfNwlq8eqG1DDUQtYF/NdFG
zBfUas0pj+iFX+uL9cnm23IGuc/GTbiE+arfofxgTQ88Uwl3t6YnH3ikTT1n
VeZfhf3tktzcbybfKuEwcpHVmnAbv3Gw9vR5f759kGPINXZu8z3GmyWxzpj+
Rkm+43cSfi/htyavlsRKvxl5pURfsNas5io/k18cgm3xJlzw9ZJYaUx/raSG
8UrHF+VjcuSh9Kdowp3l4FuDp2vCzdUb1To/5RoH9+LDrq4Tg/Rt3vN5dXyc
z8Ia2wl1nom1N3Mw47far7nZNCX1YmO/ub85rLHKNenaNCc13u3bJFf1+ze/
z/GZq1erX8n91HT9VkNNSG1mWBOtyBxhK/C0TXIHNSG1mh2baEU+Y5+137T4
bYuakNrT1k20IjmvXHSHJlx4hhKtUs3S2rc5h1rB1E1yEXNBtQp9zuV1NCm1
q52aaFVqAWpd+hzryBt161ufr3ap5uRePqiJFmWur7Zmfck6k5qTe/vAJlqU
PkHfoCb0XkkN1Fqsera1UWtE1ooerVI7/XtNNdGsXWtqVu7N/ZtoWdaYrDU9
VqV25venak1+b2N9QY5vbDZnk/ubw8q/rOWa25pDbQmepklupWan7zmgiZY3
X4l24b1YO/t/v+n6uA==
          "]], Polygon3DBox[CompressedData["
1:eJwt13nYllMaAPC373vft0QodVliKlmHmVKyJtokRdpIaVUppZKkPVSUUigS
bWqMGqVlStG+0I4o2uxcEg2jmcGMZuZ3X+f9476+5/ye+5zneZ/zPOfcX5Uu
fVv0KcpkMjtETlyfz2QaZDOZ0cWZzEPa62B9djN7go1gb7FGrDl7mo2O/qwe
a8zGseFsM2vImrFJ7FG2jd3MWrEp7HH2DmvC7mBT2Xi2mzVmLdlk9hjbxeqw
+mwUG8jWslvYnWwae5J9wJqyNux5NoG9z25kt7Gn2Ci2nd3EWrBn2Bi2kzUo
mclUYh1ZJ3FAu668m9hY7WHyNsm7gTVkY9ggtp61Yj3YPDadfc7msiUe8mKx
v0Qm8512LXGVvG2it7xl8v6cS8cXsy1ipOt2Fvc6/ovxXhXHtP8oHjTOfuN1
0qdaqUzmAuP95nz9mET+s/Y7+lWVV5GfJf4kzuXH/G0ir4K849q/E4PlbdBe
L0ob/xx2lqFqyi0ld3vMD29qzAnxnMVR7dbiOjY83g3xvXZtcSq7Tbu5eF/7
G/2rGe9f2jcbbzQrzfayZ+TuFQ+ze8Rgx2/Ie1P8qr1du5L7q6BdPt4F0UDf
Jny845HGeNuYV7Cr2WB2H1vOJrFX4vmy3TH32kfEYuM1YZvYiLg3cYLjxqy2
/DH6VmensGbxXNkEdhk7nd0Rv4NNZn3d41i2lW0TJcxHDXlnsDbxrOVNkbdV
+xzXLcfKxvclLpd3Ib/HcVt5c+XVZBew7uxONifm2DV+1r5OfGaM7+VczkrI
q8vqie3aJ4ll5vAefc4Uo7SvzKZnFs/utHjP9a3uHrvEPckdVCLNb8x5HG9h
b4sT9L013jf9++jXV3wd48m7hg3R7uP+Xo9vn5/NerEO7Hl2nbx67FH2IFvD
KrEhrrHK+G+KE/WbzTY53liU3sMd2hfFNfRppO8qY/TNp/f+B+3q4gp5W2Nd
ivdTlBQV2HF/X+JrjLW6KF1rZz5dJ673hniRfcbasXbGfjG+VfFDyfTuxzew
TkyV94m8jc5VFpXE+ewBfcqVTPdwKObY7yqrfafzJ4rS4nTnSjs3R/8Vxnpd
DGW7tM+PufPbbpD3upye2pXz6fzyojR/MY/nsZqxJstbLq9HPs1JzM1bYnJc
P9Yb508WZcSZ7Ey5L4kf5fxQlL7z+N576zuafyDvbeP+xu5jY9getoUdZy3Z
5YU1NuZtEWvBahbmcgB7jTVnNdgj7AG2MNY/Vquwf8T6vLjwfYxj+9hHcR3t
fuIJtr847T0l4rey/8S3HfPLerMBbKK8j9m7sUex/mwCO8h2seJ8+pbimzpV
VPQMLnL+AXlP+nuIvSMvK+9BNpl9UZzWnliD7mfj2QG2M5ZPdrG41vFNbLVz
/bTPjuvEHHqeO0Up/WbEGuZ4jxjo3Dbtw+I1xzl9s6Jz7E9x38ZZqv2ycY94
LnexkWwdW8p+Zu3Zw2w9+yv7hXVgj7ANbBn7lbWNe2ErYl9gP7I7WD+2mM1l
h2Mu2d1sLnuOHYq5ZF3i3WTPsoMxl6xzvDdsCjvASvh9x/yun8QR1lXO7aKv
vEXy5rBv5LWLdYOtZAvY31lr1pPNZzPYF6wZ68hmsWfYPnYb68Rms8lsP2sT
c8KWxJ7FvmUPsXxxeqbxbL+NscQkee+yjfJKxljiKfZerO2sVPTzO/b5DR+J
cfp+yEqy97V3i/FsX6yJ7Bf96oimbAn7Qsx2vLQo7eGxl08XBx0fKEr7cKxD
FcWPMde5NG6MH+9HvCc7xCR5B6L+YJfFXie3v/tbIH+346qxN4sL5T3q/Of5
tE6tLErrR6wjB/NpnO3a28Qs7Y/yhd9UlN7DeB8/FeWN+7FxKmbSGjZFnFe4
TlxvT3xT+bSGbC5K62+swzXc379jvxO19O3F9ufTM3pPzrtiZtQu8X0YY2js
C/JW5NJ1Y81cK6et9pj4/XKqsDNiTYz3LfYwXo53dtxS3yej1mPnswGsO5sd
dWfUIVEfsY5sWqE2q5xNe1HsSVO0G4oq8Y1qd5E3Pb4t1p4tYDPZ3qj/2Lns
fnY3m8FqsWLWItYdNoJ1ZN2yqWaI2mFC7EXi+qjJCvP2prwr5eVYK3YjeziX
ap+y2VQ3Rv34dOyh+rZlL2hPlLcnahWeZS1ZQzYyl/bzomyqmaJ2mqD9+3yq
R6IuWRv3rt2IV3Xcn3V1bmbUsbFfxJrHurFZrCvrw9awRezrXKqvhmRTnRL1
yibtHmIo2x5rnbyf5HWLGpNtZivY0VyqRXtlU10W9dlq7T/Et5RN+3Ts16Ny
aV+9K5vq1ahbl2l3FwPZW9or5f1NXqdwtpzNi/c01jV2O3uZPc+eMH4ddhrr
wlqxifLqsorsXtaeTWXXs/LsbtaaTYoanVVgXdnt7CnWkw1jO9gadox1Yb3Z
KraQfcmuZSez9jEfcS/s6qixWDt2KxsbaxN7ln0V+xs7KdZD9hz7mu1jZQr1
8y3ZVGtEzTFfu028H2yG9iR5W4y3NJ/Wn1iH1sWcag+UN8Xxl+xDeSdGPSRK
ZdMeFXvV6Fyqx+tkU30edfoM7WaieuHdvV/eq/H/FrukUMNFrfxK/M/ELi18
01HXzYv/rWKO2bDCdz4/l2rCatlU70fdPzVqfvdSt1ALRH2wWl4f/ljU9vGu
sf+ya1gZdhdrxsaxS/T9X3Gqc6LeGcaO5lOdG/XuhrjPqPXieyjU9/F/Uvy/
dC8bznbG98H+EXso68AWslnsQ3YVy7PWrBF7JOYyvq3Cb+vHVsacsxsK63PU
NKvYpfkoHlK9FnXbcNbLeCPYrpgj9k82POoB9j37hJ0W/1exaewwO8BOyae9
K/aw2my9c4OiJpb3guNv2UF5p0Y9yF5kR9ghVpYNY9PZd+xjVo6NYDPZUfYp
Kx97PruPrY79kn3l/v4PsCX+DA==
          "]], 
         Polygon3DBox[{{1663, 780, 779, 857, 1220, 1664}, {1677, 798, 797, 
          947, 1232, 1678}, {1878, 1094, 917, 791, 790, 1671}, {1694, 719, 
          718, 1286, 1287, 1922}, {1681, 801, 800, 962, 1234, 1682}, {1666, 
          783, 782, 872, 1222, 1667}, {1659, 777, 776, 842, 1218, 1660}, {
          1886, 1124, 947, 797, 796, 1675}, {1841, 1017, 834, 833, 1207, 
          1642}, {1881, 1109, 932, 794, 793, 1673}}]}]}, {}, 
      {GrayLevel[0.82], EdgeForm[None], 
       GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
          "],
          VertexColors->None], Polygon3DBox[CompressedData["
1:eJwtlVlslVUUhc/d9/731gEUeYA3wzx0gFbjG6JR44QxYRRKWymCUNFKrbHo
i6DSJs5RyxAjhMkBgg/GRKvRmDAEo1ZFH9T4JIYQFSWIiMTot1jnYedf6+zz
n2HvtfcZ19k994FIKa3HKljUUuoppdSGfVhNqVyk1A0+hu8kE44xtivzTnAD
81ezQANjg/BJzP8YzCc1llOqx38v/gPw8wxOhrfB18HfgU+EL4a3wgfhY1jj
CnA9/46rS2mYsQH43cyZytytfJez/jnG7gBvwTrhZ+FzwJuxZfAz8NvBs7GH
4O1YX15jGd9NyWs3YEfwHcbqi3xHfBvgl8GnM38F899l7Ff4JHgrvAu+Gz4F
3hE+4ydwBfN3cC//bwCfY71/4XeCV+Efi63EN5KxMeCRhfeaiX3H3Bb4UfB5
/PvhD8NHwefx/+ia4/sR/Df8Oypebxv8P/g/8A744+E9FoPbsXXwDviovJ/y
vSTfby4kwD9gb4KfD59X/78AfjZ8lhXw58A7sCvhJ+B7wa9hR+Ej+O7D+llz
FnwheALnHU8OC8bWMn8suZ0KPgg+xZzTnPdv7B74NyXfdxr+OuUbPj3n56Lk
nDYW1sgc+F1h7TTVWaO6z/tV79eAdlrg6/F34esJ62MReJ7iCW6WLsDzC+ut
Bd4D3h2Ot+64C3x9ODY/w28EtzGnP6yvvzjvWvh94f207zXYrJJzovyqXvTv
5dhP4Lf457OSNav/ZcIDee198OGSNX4W/HRY64rRM2GNqXbaw9rbFI7VacZu
C8dUsR3I+e7DmuDz8Y2vuaZV2xsV86prQrXRj72UNXZD+J8L2iu81ithLamG
VQsrw7X9Z97vUM6X9KtcXsrY1cSiCX5x8p1n5PspF5/DmwtrYnRy7JS7b6s+
207mza5zze3R/cO1qDH5pP9yzXrR3gewyeAzFcfiSNbLNOYsD6/xo2qL9Z/C
9wt8K3hG2f9Kk1MK61O1wm8XuHqaeteqcK9bUDjej8LvBw/jfwJ+nDmbqz7b
xtw/T4FnMueS5JzqvoPheCpm3eEep17XzNihqs93Vckx+Rr8cjg36inqLV8x
9iT8BHxL1ZqXnk+WXQsLC9fKY8xdk8+ntTXni6r/l1al+S+rjrv2uiWs5bcr
rvde+OrCepXWP835a6z5PVDNab8Jhd+NIcYmFo6BYvFgvs/2is/6XvZ/wNjS
knOg+0mDL7LXI2Ft6j6qZcVU570u3EuVE/WxIcZaS46Bzq8cKpd6sw5XrfEF
4R7Ul/Wl3qM9tbfeHPXupeG36KbI/QB/V7in6y1aEu71e8K99Xv8b4TfPL0P
isFB8M2R+0fJfUAa09vSGdZeL/x4yW+m6l89cVG4h6lXak2tnbDXw/Eayuf9
o+L3ULHUnXV3vSGvhvux3hbN0VzdsVK4J6s3q6fvzD15RH6ft+UYK9bXht96
aVRa1Zut9+TWsB6kwTXg/wEQPvx2
          "],
          VertexColors->None], 
         Polygon3DBox[{{1274, 255, 592, 669, 1369}, {1794, 574, 560, 307, 
          1735}, {1749, 1296, 1379, 657, 1748}, {1795, 621, 658, 1296, 
          2111}, {1364, 582, 618, 305, 811}, {1837, 1006, 810, 229, 1733}, {
          1689, 233, 1284, 1285, 1921}, {1199, 590, 667, 356, 1272}, {1363, 
          578, 580, 229, 810}, {1795, 237, 371, 641, 1823}, {1271, 355, 650, 
          649, 1367}, {1366, 646, 645, 243, 1269}, {1365, 644, 643, 241, 
          1268}},
          VertexColors->None]}]}, {}}, {
      {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl01lLFWEcB+BXW2yzBT+ApGWZZlZqq+17ttmeZWVWZqUtWtq+22Z72r5r
Rd1FEARBEARBFAhBF10FttA36KbnpYvn/H7/d+bMmTkz07esurgqIYTwm3Yl
9hc+2uUPWdMphN56SmIIieZfpJr7yFrbcvQ6WSgbZJFskiWyRVbG48l6+Vae
lJ9ks/wmW+Uf+VL+le/i9zuHkO34yX6zzZzZIYQ7+nPusonspBAqZCEbyTJv
kGNZzyBzuRzDOjLNZXI0axloXiNHsZoB5lI5klVkmFfKEZTQ37xCFrCcfuZl
Mp+lpJuXyDwWk2ZeJO8zmRTzQtnCI+7xgGc8pJinTGQKk9jp/xgqp1LJNHZY
Gyans5nt5hlyODPZQi7j2M3FeP32uSS3kuo8Dsvx1HGZctuvyCqOMIF6Sq1f
lU1Uc5Rj8TjW98hmZrGN45yIv2/bXnmN2fH8aIj/abz3ch/XKYrXEq/L+il5
mv3cYE68ds5wlgPcZG689/avkY2c4yC3qLA+T9ZyngscivfW+m05n1208oTH
LCA+8D/ppX6XhRR43nqav+j5erLepufpPfTPeneZ69gf9W56jv5B76pn6e/1
LnpGfKb1Ib6bFN8BPUf3iIc3+mDdLuG13lGmG17plkNafC/0eJpfbcxN+P+O
/gOHT2SY
        "]], Line3DBox[CompressedData["
1:eJwl08dOVFEcwOEzDE1FUBxHUUSwJ4b4Ar6BO3eiCyVRY0zAleEFjC9gfAHj
xsSGvaPYCyrSGXpv9oZi+U5YfPmd/7l3zszAnYrq2p01iRBCNwVZIZTpXG4I
xdZnOcd5LnCRei5xMCeEy3qFq1zjOvvt39Cb3OI2d6iyf1fv0cB9HtDIQx7x
mCc8pdr9z/Q5L3jJKw7bb9LXvOEtzeyz/05baKWNdjrY61qndtFNhh5q7Pdq
H/0MMEit/SEdZoRRyvNCGNNxjrg+oZNMMc0M7/nAR3a755N+5gt7zF/1G9/5
wQF7P3WWX/xmjj/85R8hGUKCLJJU+BzZmkMuKXOe5rOA5eaFuogC0ubFWkgR
K8xLdCnFrDQvi+fE11JiTsf74jVWmUtiWR2ZS3UNZZSa12p5/Gxx37xO17Mh
3mPeqJvYzBbOxL+zh24r/eYWX7PSesC61XpQ23RI23VYO3REO3VUx+iyHk/O
P7sTmtFJ7dEp7dVp7dMZ7deO7BC2ea/C+P+OZ1rvIu2Zbzbna6POxuc7nqen
NaMntUmPa4PWab0e0lNapSd0hx7T7XrUeSnnV1qnvGdRYv539h89Wn9k
        "]]}, {
       Line3DBox[{1413, 1583, 1935, 1412, 1582, 1934, 1411, 1581, 1933, 1410, 
        1998, 1848, 1409, 1997, 1847, 1408, 1996, 1846, 1407, 1995, 1845, 
        1406, 1994, 1844, 1932, 1405, 1580, 1931, 1404, 1579, 1930, 1403, 
        1653, 1716, 1652, 1402, 2073, 1651, 1714, 1650, 1401, 2103, 1658, 
        1773, 1657, 1774, 1399, 2086, 1656, 1769, 1655, 1812}], 
       Line3DBox[{1428, 1586, 1939, 1427, 1585, 1938, 1426, 1046, 1425, 2006, 
        1856, 1424, 2005, 1855, 1423, 2004, 1854, 1422, 2003, 1853, 1421, 
        2002, 1852, 1937, 1420, 1584, 1936, 1419, 2001, 1851, 1418, 2000, 
        1850, 1417, 1999, 1849, 1416, 2074, 1662, 1770, 1661, 1414, 2087, 
        1660, 1659, 1813}], 
       Line3DBox[{1443, 1588, 1942, 1442, 1587, 1941, 1441, 2015, 1865, 1440, 
        2014, 1864, 1439, 2013, 1863, 1438, 2012, 1862, 1437, 2011, 1861, 
        1436, 2010, 1860, 1940, 1435, 1054, 1434, 2009, 1859, 1433, 2008, 
        1858, 1432, 2007, 1857, 1431, 1221, 1665, 1429, 2088, 1664, 1663, 
        1814}], Line3DBox[{1458, 1078, 1457, 2027, 1876, 1456, 2026, 1875, 
        1455, 2025, 1874, 1454, 2024, 1873, 1453, 2023, 1872, 1452, 2022, 
        1871, 1451, 2021, 1870, 1943, 1450, 2020, 1869, 1449, 2019, 1868, 
        1448, 2018, 1867, 1447, 2017, 1866, 1446, 1919, 2016, 1668, 1444, 
        2089, 1667, 1666, 1815}], 
       Line3DBox[{120, 901, 119, 900, 118, 899, 117, 898, 116, 897, 115, 896, 
        114, 895, 113, 894, 893, 112, 892, 111, 891, 110, 890, 109, 889, 108, 
        888, 107, 887, 785}], 
       Line3DBox[{1472, 1600, 1956, 1471, 1599, 1955, 1470, 1598, 1954, 1469, 
        1597, 1953, 1468, 1596, 1952, 1467, 1595, 1951, 1466, 1594, 1950, 
        1465, 2028, 1877, 1949, 1464, 1593, 1948, 1463, 1592, 1947, 1462, 
        1591, 1946, 1461, 1590, 1945, 1460, 1589, 1944, 1670, 1717, 1079, 
        1669, 1816}], 
       Line3DBox[{1486, 1610, 1967, 1485, 1609, 1966, 1484, 1608, 1965, 1483, 
        1607, 1964, 1482, 1606, 1963, 1481, 1605, 1962, 1480, 2030, 1880, 
        1479, 2029, 1879, 1961, 1478, 1604, 1960, 1477, 1603, 1959, 1476, 
        1602, 1958, 1475, 1601, 1957, 1474, 1095, 1672, 1718, 2075, 1878, 
        1671, 1817}], 
       Line3DBox[{1500, 1619, 1977, 1499, 1618, 1976, 1498, 1617, 1975, 1497, 
        1616, 1974, 1496, 1615, 1973, 1495, 2033, 1885, 1494, 2032, 1884, 
        1493, 2031, 1883, 1972, 1492, 1614, 1971, 1491, 1613, 1970, 1490, 
        1612, 1969, 1489, 1611, 1968, 1488, 2077, 1882, 1674, 1719, 2076, 
        1881, 1673, 1818}], 
       Line3DBox[{1514, 1625, 1984, 1513, 1624, 1983, 1512, 1623, 1982, 1511, 
        1622, 1981, 1510, 2038, 1892, 1509, 2037, 1891, 1508, 2036, 1890, 
        1507, 2035, 1889, 1980, 1506, 1621, 1979, 1505, 1620, 1978, 1504, 
        1127, 1503, 2034, 1888, 1502, 2079, 1887, 1676, 1720, 2078, 1886, 
        1675, 1819}], 
       Line3DBox[{1529, 1630, 1990, 1528, 1629, 1989, 1527, 1628, 1988, 1526, 
        2045, 1899, 1525, 2044, 1898, 1524, 2043, 1897, 1523, 2042, 1896, 
        1522, 2041, 1895, 1987, 1521, 1627, 1986, 1520, 1626, 1985, 1519, 
        2040, 1894, 1518, 2039, 1893, 1517, 2080, 1680, 1679, 1515, 2090, 
        1678, 1677, 1820}], 
       Line3DBox[{1544, 1632, 1993, 1543, 1631, 1992, 1542, 2054, 1908, 1541, 
        2053, 1907, 1540, 2052, 1906, 1539, 2051, 1905, 1538, 2050, 1904, 
        1537, 2049, 1903, 1991, 1536, 1159, 1535, 2048, 1902, 1534, 2047, 
        1901, 1533, 2046, 1900, 1532, 1235, 1683, 1530, 2091, 1682, 1681, 
        1821}], Line3DBox[{1558, 1687, 1238, 1557, 2066, 1918, 1556, 2065, 
        1917, 1555, 2064, 1916, 1554, 2063, 1915, 1553, 2062, 1914, 1552, 
        2061, 1913, 1551, 2060, 1175, 1550, 2059, 1912, 1549, 2058, 1911, 
        1548, 2057, 1910, 1547, 2056, 1909, 1546, 1920, 2055, 1685, 1545, 
        1236, 1684, 1822}], 
       Line3DBox[{532, 478, 1712, 418, 2093, 1732, 385, 1711, 414, 1731, 384, 
        1710, 1927, 410, 1730, 383, 1709, 406, 1729, 382, 2099, 1708, 402, 
        1728, 381, 2098, 1707, 398, 1727, 2097, 380, 1706, 394, 1726, 2102, 
        423, 1705, 484, 2092, 1725, 422, 1704, 540, 1777, 496, 1703, 1926, 
        537, 1775, 491, 1702, 534, 1789, 1570, 2085, 1701, 1636, 1793, 1010, 
        1700, 1635, 1765, 2110, 527, 1766, 433, 766}], 
       Line3DBox[{1654, 1578, 1649, 2109, 1786, 1577, 1648, 2108, 1785, 1576, 
        1647, 2107, 1784, 1575, 1929, 1646, 1783, 1574, 1928, 1645, 1782, 
        2072, 1843, 1644, 1781, 2071, 1842, 1643, 1780, 2070, 1841, 1642, 
        2106, 1779, 1573, 1641, 2105, 1778, 1572, 1640, 2104, 1776, 1571, 
        1715, 1639, 1792, 1791, 1790, 2069, 1840, 1713, 1638, 1398, 2068, 
        1839, 1772, 1637, 1767, 1924, 2067, 1787, 1768, 1633, 1825}], 
       Line3DBox[{1788, 1569, 1771, 1699, 1762, 2101, 1923, 1804, 1568, 1741, 
        1698, 1761, 2100, 1760, 1803, 1567, 1740, 1697, 1925, 1759, 1758, 
        1802, 1566, 1739, 1696, 1757, 1756, 1801, 1565, 1738, 2096, 1695, 
        1755, 1754, 1800, 1564, 2084, 1922, 1694, 1753, 1752, 1799, 1563, 
        2083, 1737, 1693, 1751, 1750, 1798, 2095, 1838, 1736, 1692, 1810, 
        1809, 2112, 1797, 1562, 1806, 1691, 1808, 2113, 1807, 1796, 1561, 
        1805, 1824}]}, {
       Line3DBox[{992, 1169, 1261, 1236, 977, 1154, 1260, 2091, 1234, 962, 
        1139, 1259, 2090, 1232, 947, 1124, 2078, 1258, 1230, 932, 1109, 2076, 
        1257, 1228, 917, 1094, 2075, 1256, 1226, 902, 1079, 1255, 1224, 887, 
        1064, 1254, 2089, 1222, 872, 1049, 1253, 2088, 1220, 857, 1034, 1252, 
        2087, 1218, 842, 1021, 1251, 2086, 1216, 828, 1014, 1354, 2067, 1312, 
        1183, 823, 1009, 2110, 1353, 1311, 1382}], 
       Line3DBox[{993, 1170, 1237, 2055, 978, 1155, 1235, 963, 1140, 2080, 
        1233, 948, 1125, 2079, 1231, 933, 1110, 2077, 1229, 918, 1095, 1227, 
        903, 1944, 1080, 1225, 888, 1065, 1223, 2016, 873, 1050, 1221, 858, 
        1035, 2074, 1219, 843, 529, 1313, 2103, 1217, 829, 1015, 2068, 1202, 
        824, 1010, 1372}], 
       Line3DBox[{994, 1171, 2056, 979, 1156, 2046, 964, 1141, 2039, 949, 
        1126, 2034, 934, 1968, 1111, 919, 1957, 1096, 904, 1945, 1081, 889, 
        1066, 2017, 874, 1051, 2007, 859, 1036, 1999, 844, 1022, 2073, 1215, 
        830, 1016, 2069, 1356, 1203, 825, 2085, 1011, 1355, 1185, 1371}], 
       Line3DBox[{995, 1172, 2057, 980, 1157, 2047, 965, 1142, 2040, 950, 
        1127, 935, 1969, 1112, 920, 1958, 1097, 905, 1946, 1082, 890, 1067, 
        2018, 875, 1052, 2008, 860, 1037, 2000, 845, 275, 1716, 333, 1715, 
        261, 557, 321, 1702, 236, 749}], 
       Line3DBox[{996, 1173, 2058, 981, 1158, 2048, 966, 1985, 1143, 951, 
        1978, 1128, 936, 1970, 1113, 921, 1959, 1098, 906, 1947, 1083, 891, 
        1068, 2019, 876, 1053, 2009, 861, 1038, 2001, 846, 1930, 1023, 831, 
        1205, 2104, 1334, 1204, 1358, 1248, 1357, 1926, 1189, 1333, 1188, 
        1242, 1392}], 
       Line3DBox[{997, 1174, 2059, 982, 1159, 967, 1986, 1144, 952, 1979, 
        1129, 937, 1971, 1114, 922, 1960, 1099, 907, 1948, 1084, 892, 1069, 
        2020, 877, 1054, 862, 1936, 1039, 847, 1931, 1024, 832, 1206, 2105, 
        1336, 541, 542, 540, 1335, 1190, 1243, 2113, 1391}], 
       Line3DBox[{999, 1176, 2060, 984, 1161, 2049, 969, 1146, 2041, 954, 
        1131, 2035, 939, 1116, 2031, 924, 1101, 2029, 909, 1086, 2028, 894, 
        1071, 2021, 879, 1056, 2010, 864, 1041, 2002, 849, 1026, 1994, 834, 
        1017, 2070, 1338, 1340, 1339, 826, 1012, 2102, 1310, 1276, 1192, 816, 
        1007, 2095, 1376}], 
       Line3DBox[{1000, 1177, 2061, 985, 1162, 2050, 970, 1147, 2042, 955, 
        1132, 2036, 940, 1117, 2032, 925, 1102, 2030, 910, 1950, 1087, 895, 
        1072, 2022, 880, 1057, 2011, 865, 1042, 2003, 850, 1027, 1995, 835, 
        1018, 2071, 1341, 1343, 1342, 827, 1013, 2097, 1289, 1277, 1193, 817, 
        2083, 1008, 1377}], 
       Line3DBox[{1001, 1178, 2062, 986, 1163, 2051, 971, 1148, 2043, 956, 
        1133, 2037, 941, 1118, 2033, 926, 1962, 1103, 911, 1951, 1088, 896, 
        1073, 2023, 881, 1058, 2012, 866, 1043, 2004, 851, 1028, 1996, 836, 
        1019, 2072, 1344, 1208, 1345, 1346, 1291, 2098, 1290, 1278, 1195, 
        1298, 818, 2084, 1287, 1286, 1387}], 
       Line3DBox[{1002, 1179, 2063, 987, 1164, 2052, 972, 1149, 2044, 957, 
        1134, 2038, 942, 1973, 1119, 927, 1963, 1104, 912, 1952, 1089, 897, 
        1074, 2024, 882, 1059, 2013, 867, 1044, 2005, 852, 1029, 1997, 837, 
        1928, 1020, 1347, 1209, 1348, 1349, 1293, 2099, 1292, 1279, 1197, 
        1299, 819, 1288, 2096, 1378}], 
       Line3DBox[{1003, 1180, 2064, 988, 1165, 2053, 973, 1150, 2045, 958, 
        1981, 1135, 943, 1974, 1120, 928, 1964, 1105, 913, 1953, 1090, 898, 
        1075, 2025, 883, 1060, 2014, 868, 1045, 2006, 853, 1030, 1998, 838, 
        1929, 268, 328, 1709, 250, 314, 1696, 707}], 
       Line3DBox[{1004, 1181, 2065, 989, 1166, 2054, 974, 1988, 1151, 959, 
        1982, 1136, 944, 1975, 1121, 929, 1965, 1106, 914, 1954, 1091, 899, 
        1076, 2026, 884, 1061, 2015, 869, 1046, 854, 1933, 1031, 839, 1211, 
        2107, 1350, 1210, 1362, 1249, 1302, 1927, 1201, 1280, 1200, 1301, 
        1245, 1300, 1925, 1370}], 
       Line3DBox[{1005, 1182, 2066, 990, 1992, 1167, 975, 1989, 1152, 960, 
        1983, 1137, 945, 1976, 1122, 930, 1966, 1107, 915, 1955, 1092, 900, 
        1077, 2027, 885, 1941, 1062, 870, 1938, 1047, 855, 1934, 1032, 840, 
        1212, 2108, 1351, 555, 556, 414, 1281, 412, 1246, 2100, 411, 1381}], 
       Line3DBox[{1240, 1239, 1238, 991, 1993, 1168, 976, 1990, 1153, 961, 
        1984, 1138, 946, 1977, 1123, 931, 1967, 1108, 916, 1956, 1093, 901, 
        1078, 886, 1942, 1063, 871, 1939, 1048, 856, 1935, 1033, 841, 1214, 
        2109, 1352, 1213, 1250, 1308, 2093, 1309, 1282, 1307, 1306, 1247, 
        2101, 1305, 1383}], 
       Line3DBox[{1390, 2112, 1368, 1244, 1191, 1275, 1332, 2092, 1331, 1361, 
        1359, 1360, 1337, 2106, 1207, 833, 1025, 1932, 848, 1040, 1937, 863, 
        1055, 1940, 878, 1070, 1943, 893, 1085, 1949, 908, 1100, 1961, 923, 
        1115, 1972, 938, 1130, 1980, 953, 1145, 1987, 968, 1160, 1991, 983, 
        1175, 998}]}, {}, {}}},
    VertexNormals->CompressedData["
1:eJzsnXk8lV3b9xUyi0ypVEohJEPGnIcyZM48likN0kAhZJ6VMfM8F5JEZNxl
KEkkU+Z5ttlCJNO7sS+e+3qf7udzve/93OPlz6/1WXut317r2Gsda52/k9n4
juqVnXh4eGeJ8fDw8X71Nw1/8n8tnv7F1U/FqgCkXAInoifGYPXA4eBCt34A
2bv4kb0vYMd7Y3eOlTEQjebLlwzsB0L2pLPXQlPB9shFOS6CcRC8eWdBKrQf
6vHmo5+QxMNJczQPKdE4oDxyH6iE90Nw8i2z77fDQYjzsKEe8TgkksaqnYvo
B3LaKmZ5ncdg2xkgS0wyDrTnPzeXYjkhR1nw+EM/MA19ln8dy83SX73eGdkP
WRf4o6eUvKHP2IAqCctPkS9ncmB5NivJPN5FdzDeoT3zDssJqXYrS2G5/ZXO
8lVFF9DLiNfrwnIBY/tdmlju/9WCMu+DA7Tcfso6ieVD+66pGmH5r/Q5I8Bz
6DumFeVWYHu9Vqcf9MlJqI8LjsNxvqeiAX6VcJgg3aP1QD9Ezgpeou4dA72z
3rRUIVVA3HQCEebsA9uwD9dKdMaB7PKM0Cv2txAwxfkg2KITHDLfugoboYH/
66hi1moOtAcqJtz0aoE44ZwQ745JoIpX+tZxNxXyKSK8H1fXA03QM9+8tilg
UzfbjX4UDh8O+HK+mHkPQaevku+xxcBd+nE9u1QfUGD6MFiHKYXEyZTXx6ow
ULI7yDwh+wEQvSLLf9acAy+/a2vFjGEgEzX96rPaLbj9jXlGtOQJRNPyznUt
YCCNWDAq1UUfsvALb4FLFIhdfV8itoIBRVVe6iCNC/CicJYgg9UfuIM6c/av
YcAy7hANZzLAZ4zTqOFLZyj6eJmhCMtNXtzXPnuZG5yC1ooLd9yFlNyczAks
/5XOBMyS+kFa3b/935kbuev4lRMNGoMN4wXKeUBCejKsZuULLI57jeBFTIEA
QevN8bRi6DJkGIhoroRdLenUx4wxkGg6y3ZjNRPuNtsciW7JhZJOZ9aT7RgY
epSqIjAaCnJuxjkkXQngHXZ97vkiBr6fahTxQT8AzUvNSa+x+r3/+qPuBLad
tUzjyqcNDaEdpY7p/W4BI99In4xguWiTVnTnwXNAFh5i91VRC4Sam/xXsPzC
6JoF+amjcDiBi2NO5Qwstx38sIblaRJMdsG2+BDEfcmw6vRheM3kubTOUw8I
C7i19iMH/VpOGtjtgEDarLV13vHmGyF7WBni/2j18B3ifmQq9ucGlzp1q9Y2
LgZJoSCp0SN8iySVrG3w17EcwT5XbJGMteQGiXPxyK7lTf5HdTbZEfu56fa7
LZ6z3+Kcli8GJJEHN1moU8Da/OvLztUXcHE5OD4LO36YGPdLt5FHQMILnQe3
boSBQu7p1vdLGDhz0jbkQIgTWNVWs96YtgPLh4+UQ7Dt6Zn1c9U2NgA8Nuf7
VekXgff9vW8/sDx46rZVWaYIRB7neuTlLQrL48dS1tvPShUWkyNPC3m3fXnP
sO6F668OLK/zwHA8NtOPaOTAiJzz08BZpOhQx0Z/cwXYnZ1oKhBFbg+qT4q1
iHbd6qZu1aLaVwZCkflxnvuswsmI7o9NfaZ+/li6N3AFKTaqQlUuWyOta5sc
KTlX+bOfHwktfT9XpK+CrOL4scV3B7p3kqJO960+CiZiQf6nuPpHdWafUTke
p/wF4Ww8UkesnwCt/hc46rF6duOp01lwuwK3aO5QQJIrrP3kd9bEtmcgmbcM
f6cZGFoPyvIxGYOeep0tBsuT+Uaoc3bLwova2vNpFQjscmxiXW8/T0bUvnHj
I+BUoccbIs8Ajnsjf6xzzXACIoW4eWS/756LcdMYZIqufrO/a34ZrpzVCOWz
bPPxHxVI68qmnnwo4zqpsUjkVaZv46RTGHJ1aVOfT4JVNRPVJgjKd+ZGcKIp
MoXTTX7cwoXsKytyilfpujeZ9JZufN7ec3vpjqOspz+HT/dTb3EdAUPXirYD
SDhtmdbNeKG/uc53L9rceYzV9zdeJt43+Bmr86577OQO7qqQVSSQPff8HtwR
8bIcxrb//jG+giR6TSitoAk7aq8MTqBDvD7fpaOTGr1bBSD4aNjHl4usIPD5
Sst6f+veva+Q1KaCbON4Rq6RVWQne+HqOi8V25tyvagPORLnMBRR8QWR61jc
0MdLRAeTfz8LUcVDUT5qj0e8Jzd1c1ogOjb50gHxM09kz028jRT9pie3+UMS
EinkCvk9t5dvFLbGJ5mebUNahyDqgWL5bbtPhFu6xSYv53c57UU0Mi9J3Jzh
3+LT+t5qz/fTI2tsOh7BT3n/bjr73G/2t0q32OKCtl3OaGz7Te93yt0x5oOR
Xnf/FuZzcOyUath6v5Tlj0QHErPAj+6wrCQ/BujtD1hY55E1bVE+6DWEpkg3
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
     "]],
   Axes->True,
   AxesLabel->{
     FormBox["u", TraditionalForm], 
     FormBox["v", TraditionalForm], 
     FormBox["\"\"", TraditionalForm]},
   BoxRatios->{1, 1, 0.4},
   ImageSize->{360., 281.487264522269},
   Method->{"RotationControl" -> "Globe"},
   PlotRange->{{1, 13}, {0, 10}, {0., 0.9524006728623182}},
   PlotRangePadding->{
     Scaled[0.02], 
     Scaled[0.02], 
     Scaled[0.02]},
   ViewPoint->{0.4020190277953035, 2.015183488647946, 2.6883854277932713`},
   ViewVertical->{0., 0., 1.}]}}, 1]], "Print",
 CellChangeTimes->{
  3.462419172729724*^9, 3.462419246395891*^9, 3.462419358659734*^9, {
   3.462419408012969*^9, 3.462419421319435*^9}, 3.474753819954615*^9}],

Cell[BoxData[
 PanelBox[
  InterpretationBox["\<\"Number of Relation on sieve region: \
\\!\\(116\\)\\nMatrix Dimensions: \\!\\({116, 83}\\)\\nDimension of Null \
Space: \\!\\(81\\)\"\>",
   StringForm[
   "Number of Relation on sieve region: ``\nMatrix Dimensions: ``\nDimension \
of Null Space: ``", 116, {116, 83}, 81],
   Editable->False]]], "Print",
 CellChangeTimes->{
  3.462419172729724*^9, 3.462419246395891*^9, 3.462419358659734*^9, {
   3.462419408012969*^9, 3.462419421319435*^9}, 3.474753824494455*^9}],

Cell[BoxData[
 PanelBox[
  InterpretationBox["\<\"Scanning Linear combinations of length \
\\!\\(1\\)\"\>",
   StringForm["Scanning Linear combinations of length ``", 1],
   Editable->False]]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.474753824643393*^9}],

Cell[BoxData[
 PanelBox[
  InterpretationBox["\<\"Scanning Linear combinations of length \
\\!\\(2\\)\"\>",
   StringForm["Scanning Linear combinations of length ``", 2],
   Editable->False]]], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.47475382470501*^9}],

Cell[BoxData[
 TabViewBox[{{1,"\<\"GNFS results\"\>"->
  InterpretationBox["\<\"Find factor(s): \\!\\({81}\\)\\nComplete \
Factorization: \\!\\({\\(\\({3, 4}\\)\\), \\(\\({4241, 1}\\)\\)}\\)\"\>",
   StringForm[
   "Find factor(s): ``\nComplete Factorization: ``", {81}, {{3, 4}, {4241, 
    1}}],
   Editable->False]}, {2,"\<\"Running Time\"\>"->
  InterpretationBox["\<\"Total running time: \\!\\(8.661657`\\) seconds.\"\>",
   StringForm["Total running time: `` seconds.", 8.661657],
   Editable->False]}}, 1]], "Print",
 CellChangeTimes->{
  3.462419172729724*^9, 3.462419246395891*^9, 3.462419358659734*^9, {
   3.462419408012969*^9, 3.462419421319435*^9}, 3.474753824876598*^9}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{701, 657},
WindowMargins->{{4, Automatic}, {Automatic, 49}},
PrintingCopies->1,
PrintingPageRange->{Automatic, Automatic},
CellLabelAutoDelete->True,
FrontEndVersion->"7.0 for Linux x86 (32-bit) (November 10, 2008)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[567, 22, 352673, 6659, 17467, "Input"],
Cell[CellGroupData[{
Cell[353265, 6685, 1141, 21, 153, "Print"],
Cell[354409, 6708, 188742, 3174, 384, "Print"],
Cell[543154, 9884, 515, 11, 94, "Print"],
Cell[543672, 9897, 266, 7, 48, "Print"],
Cell[543941, 9906, 265, 7, 48, "Print"],
Cell[544209, 9915, 684, 13, 93, "Print"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
